#+TITLE: Sortify
#+AUTHOR: Vi Kumar

* Objective / Requirement Specification
Create an app that can take care of the different items you buy, purchase and store.
No third-party servers to store your data. No recommendations save for the stuff you always buy.

** Behaviour
So I'd like the user to be able to implement certain behaviours when it comes to their items.

- Purchase
- Trash
- Store
- Lost
- Lend / Borrow

Importance is highest at top & vice-versa.

** Sorting parties! or the joy that is user authentication
 Or whatever tech word you want to call it. 
So I want people to be able to use one account to access multiple inventories and have multiple users access one inventory.

I'd recommend having user permissions wherever possible - a master account and then lesser permssions.
You might want to able to figure out how to tell everyone how your classification works (and how to request a new category for classification) if they're a new user.

You're going to have idiots who don't understand stuff - so having the ability to edit stuff on an actual computer might be useful. Attach a id tag to each phone so that you can easily figure out which idiot messed up systematically and with undue prejudice to annoy you.

Having a master device and one qr code to connect each device to one would be rather useful. This way, you don't have to deal with sending notifications to everyone - just put a qr code up and let people scan it to gain access.

** Scanning
 So scanning should be a one-stop shop for everything. If it looks like there's a barcode, scan the barcode. If it looks like there's an item without a barcode, scan that.
*** Scanning process
**** Scan barcodes & QR codes
Google's Barcode API is a pretty nifty tool for scanning APIs https://developers.google.com/vision/android/barcodes-overview

It even has a nifty barcode detector - so if you can't find a barcode in 5 seconds, switch to the object detection api. Keep the barcode detector running as long as the scanning goes on. 

The really cool part is that the barcode scanner doesn't require that you use the internet. So you can pretty much do it on the spot without much delay.

Future Vi reporting in> We're using Microsoft's API for this so replace google with microsoft. Oh, what a world we live in when we can switch between different giants in order to do stuff.

***** NCR retail information
We should probably use NCR's information instead of the barcodes that we have (because barcodes usually don't have much info on them.) This way we can auto-populate with decent information.

**** Scan anything else
  This might be a bit harder since you're dealing with a bunch of objects that probably look very different from each other. Object classification without connecting to a third-party server is almost impossible so you might want to consider asking a person to enter in details manually if the app doesn't know what it's looking at. Or you could leverage a bunch of devices and use them as your processing center but I don't think that's a good idea.
So I've found a pretty nifty thing called google cloud vision api. Should be pretty simple to implement - just ensure that whatever options pop up in a list of sorts (as long as it's an object) and then work off of that. Sure, there will always be manual data entry but it's fine. 
Future Vi reporting in> Use microsoft instead of google.
This would be very useful for when you go to a farmer's market and the people there don't really use barcodes for their stuff. Just take a photo and then add to your inventory directly.

***** Voice as an added means to change field information
If we can use voice to add stuff into fields instead of manually typing it in, we could probably make the app much more user-friendly (especially since typing numbers and dates is annoying on a phone.)
So I'd like to be able to say "It expires on the twentieth of October and has a price of 15.99 dollars" And it should populate the fields of expiry and price.

This feature should really be used as a backup for everything so I'd like someone familiar with UX actually work on this. As always, let's assume that machines are stupid and humans are mostly right - ensure that any information inputed into the fields can be edited easily by the user if required. Also allow the user to say things into a specific field - might be handy for corrections.

** Classification
 So you kinda want the ability to sort everything you own into different things. Make it as simple as possible so that you don't have to think that much. If you have things that support an object, go ahead and and "attach" it to that object (charging cords for electronics and stuff like that.)

 - Books & games & movies
 - Food 
 - Furniture
 - Electronics
 - Clothes

You also want to be able to store things inside containers and find out how things travel from containers to containers. You might also want to make containers able to contain other containers (just try to avoid containers recursively containing themselves. Partial Order categories solve this.)

** QR codes for everything

So the rationale behind QR codes is that they allow you to move physical objects while still keeping easy track of them. They can also help you distinguish between different objects that look rather similar (such as containers that store objects). Printing out QR codes and attaching them to something is a pain and so should be limited to objects that last a long time or are similar enough that not using them will be annoying.

*** Generating QR codes and printing them
 So I kinda want QR codes because it helps keep track of everything. But it's going to be a pain in the ass if you're doing it on a phone. So I'd recommend creating it in a pdf (with options for paper size) and then sending it in an email to the owner - this would eliminate the need for a computer to generate code and will have the benefit of creating something that any idiot can print.

*** Information stored in QR codes

So I'd like the QR code to be fairly transportable across different devices - which means storing a fuckton of information on it.

This sucks because now I need to figure out how to compress information AND make it useful - goals that are usually at odds with each other. Also, compressing it means that I can't use a random QR code reader to read it since it will spew out a bunch of garbage.

**** Product information
#+BEGIN_SRC
- product name
- classification 
- relevant date such as those relating to (purchase, expiry (if required)) 
#+END_SRC

**** Owner information
Stuff that's handy because you kinda need to know.
#+BEGIN_SRC
- name of owner
- phone number
- email
#+END_SRC

**** Human-readable information attached with the QR code
 So while the QR code is rather useful, you might want to add other cues to indicate who stuff belongs to and where. It's also so I don't have to bring my phone out to find out who something belongs to. Space for someone to manually write in something might also be something to look into

#+BEGIN_SRC
- (Human-readable) name tag
- (Human-readable) phone number
- (Human-readable)
#+END_SRC


*** Different platforms are annoying
So when you deal with Android vs iPhone, you're bound to have issues related to QR codes requesting phone functions (like calling which is the fucking purpose of the phone in the first place.) Rather than fixing the problem, you're going to ignore it completely. Don't use different QR codes for each platform at any cost - it's fucking annoying and I wish developers would fucking grow up already and manage their fucking differences.


*** Identifying and scanning QR codes
So there's probably a robust way to do it in OpenCV that's floating around on the internet. Ask someone and dump it in your code







** Location
So if possible, we should be able to throw NFC tags everywhere and use those as proximity sensors for when we "store" or "load" stuff into something. This way, we can tell the user, "This is where you probably left it!" and the user can then fumble to that place.

