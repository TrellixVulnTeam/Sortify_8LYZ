{
  "swagger": "2.0",
  "info": {
    "version": "2.0.2",
    "title": "nr1-catalog",
    "contact": {
      "name": ""
    },
    "license": {
      "name": "Copyright 2017 NCR Corporation. All rights reserved.",
      "url": "http://www.ncr.com/license"
    }
  },
  "basePath": "/catalog",
  "tags": [
    {
      "name": "item-attributes"
    },
    {
      "name": "/export"
    },
    {
      "name": "/import"
    },
    {
      "name": "/category-nodes"
    },
    {
      "name": "/item-details"
    },
    {
      "name": "/groups"
    },
    {
      "name": "/items"
    },
    {
      "name": "/link-groups"
    },
    {
      "name": "/item-prices"
    }
  ],
  "paths": {
    "/category-nodes": {
      "get": {
        "tags": [
          "/category-nodes"
        ],
        "summary": "Retrieve active category node documents by the specified search criteria.",
        "description": "Finds active category node documents by parent. Request object containing the parent identifier to search by.<br/> Input parameter:<br/><br/> request: Object containing the parent identifier to search by.<br/><br/>Returns: A page of node objects matching the given search criteria (may be empty).",
        "operationId": "findByParent",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "description": "The requested page number (starting from zero)",
            "required": false,
            "type": "integer",
            "default": 0,
            "maximum": 214748,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The page size",
            "required": false,
            "type": "integer",
            "default": 200,
            "maximum": 10000,
            "minimum": 10,
            "format": "int32"
          },
          {
            "name": "parentId",
            "in": "query",
            "description": "Parent code of the node to search by. If empty, root nodes are returned.",
            "required": false,
            "type": "string",
            "maximum": 120,
            "minimum": 1,
            "maxLength": 120,
            "minLength": 1,
            "maxItems": 120,
            "minItems": 1
          },
          {
            "name": "nep-correlation-id",
            "in": "header",
            "description": "A unique ID that can be used to correlate one or more related requests for debugging or tracing purposes",
            "required": false,
            "type": "string",
            "x-example": "WUSRB185213-AE7-11243-22a2c887-12a7-48e6-b9af-0ed7fb67e4cb"
          },
          {
            "name": "nep-organization",
            "in": "header",
            "description": "The organization the request applies to",
            "required": false,
            "type": "string",
            "maxLength": 512,
            "minLength": 1,
            "x-example": "sample-organization"
          },
          {
            "in": "header",
            "name": "nep-application-key",
            "description": "Header containing your application or API key. Without a valid application key, your request will be rejected by the gateway with a HTTP 404 error.",
            "required": true,
            "type": "string",
            "default": "19c7b50447ef0a4e0147ef8067900000"
          },
          {
            "in": "header",
            "name": "nep-service-version",
            "description": "Contains a string in the form of '{application-version}:{service-version}' corresponding to the application and service version numbers of the service you want to use in your request. This header allows a developer to specify the exact version of a service that want to use in the case where multiple versions of a service are available in the environment at the same time. The header values are used by the API gateway to figure out what service version to route the request to.",
            "required": false,
            "type": "string",
            "default": "3.0.0-GA:1.0"
          },
          {
            "in": "header",
            "name": "nep-enterprise-unit",
            "description": "ID of an enterprise unit that the request applies to. This allows a request to be made contextual to a particular enterprise unit in an organization's enterprise unit hierarchy for services that support integration with enterprise units.",
            "required": false,
            "type": "string",
            "default": "102c19bde15c4533a67f9191f0135197"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FindNodesResponse"
            }
          },
          "400": {
            "description": "The request failed validation",
            "schema": {
              "$ref": "#/definitions/PayloadConstraintViolationException"
            },
            "x-exception-types": [
              "com.ncr.nep.common.exception.PayloadConstraintViolationException"
            ]
          },
          "404": {
            "description": "The pagerequest does not exist",
            "schema": {
              "$ref": "#/definitions/ResourceDoesNotExistException"
            },
            "x-exception-types": [
              "com.ncr.nep.common.exception.ResourceDoesNotExistException"
            ]
          }
        },
        "x-authorities": {
          "roles": [
            "R1_CATALOG_VIEWER"
          ]
        }
      },
      "put": {
        "tags": [
          "/category-nodes"
        ],
        "summary": "Save multiple category node documents.",
        "description": "Allows saving multiple category node documents, for example the whole branch in the hierarchy or even the whole tree. Request object containing the category node documents to save.<br/> Input parameter:<br/><br/>request: Object containing the nodes to save.",
        "operationId": "saveMultiple",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SaveMultipleNodesRequest"
            }
          },
          {
            "name": "nep-correlation-id",
            "in": "header",
            "description": "A unique ID that can be used to correlate one or more related requests for debugging or tracing purposes",
            "required": false,
            "type": "string",
            "x-example": "WUSRB185213-AE7-11243-22a2c887-12a7-48e6-b9af-0ed7fb67e4cb"
          },
          {
            "name": "nep-organization",
            "in": "header",
            "description": "The organization the request applies to",
            "required": false,
            "type": "string",
            "maxLength": 512,
            "minLength": 1,
            "x-example": "sample-organization"
          },
          {
            "in": "header",
            "name": "nep-application-key",
            "description": "Header containing your application or API key. Without a valid application key, your request will be rejected by the gateway with a HTTP 404 error.",
            "required": true,
            "type": "string",
            "default": "19c7b50447ef0a4e0147ef8067900000"
          },
          {
            "in": "header",
            "name": "nep-service-version",
            "description": "Contains a string in the form of '{application-version}:{service-version}' corresponding to the application and service version numbers of the service you want to use in your request. This header allows a developer to specify the exact version of a service that want to use in the case where multiple versions of a service are available in the environment at the same time. The header values are used by the API gateway to figure out what service version to route the request to.",
            "required": false,
            "type": "string",
            "default": "3.0.0-GA:1.0"
          },
          {
            "in": "header",
            "name": "nep-enterprise-unit",
            "description": "ID of an enterprise unit that the request applies to. This allows a request to be made contextual to a particular enterprise unit in an organization's enterprise unit hierarchy for services that support integration with enterprise units.",
            "required": false,
            "type": "string",
            "default": "102c19bde15c4533a67f9191f0135197"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "The request failed validation",
            "schema": {
              "$ref": "#/definitions/PayloadConstraintViolationException"
            },
            "x-exception-types": [
              "com.ncr.nep.common.exception.PayloadConstraintViolationException"
            ]
          },
          "404": {
            "description": "The resource does not exist",
            "schema": {
              "$ref": "#/definitions/ResourceDoesNotExistException"
            },
            "x-exception-types": [
              "com.ncr.nep.common.exception.ResourceDoesNotExistException"
            ]
          },
          "409": {
            "description": "The state of the resource is invalid for the requested operation",
            "schema": {
              "$ref": "#/definitions/InvalidResourceStateException"
            },
            "x-exception-types": [
              "com.ncr.nep.common.exception.InvalidResourceStateException"
            ]
          }
        },
        "x-authorities": {
          "roles": [
            "R1_CATALOG_ADMINISTRATOR"
          ]
        }
      }
    },
    "/category-nodes/snapshot": {
      "get": {
        "tags": [
          "/category-nodes"
        ],
        "summary": "Get the snapshot based on the provided client snapshot version.",
        "description": "A synchronization API that is used to synchronize the category node resource state with the remote client such as POS, Store Server or mobile device.<br/>Input parameter:<br/><br/>request: Object containing request parameters supported for this resource.<br/><br/>Returns: Object with all of the fields of a category node, including read-only system generated/assigned fields.",
        "operationId": "getSnapshot",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "nep-enterprise-unit",
            "in": "header",
            "description": "Enterprise unit id.",
            "required": false,
            "type": "string"
          },
          {
            "name": "nep-snapshot-version",
            "in": "header",
            "description": "Version of the client state. This attribute will be used by the back-end to identify the snapshot that should be generated per client. In a simple case, the version is a timestamp (epoch time in millis) and the generated snapshot will contain all documents modified since the provided timestamp.",
            "required": false,
            "type": "integer",
            "minimum": 0,
            "format": "int64"
          },
          {
            "name": "nep-correlation-id",
            "in": "header",
            "description": "A unique ID that can be used to correlate one or more related requests for debugging or tracing purposes",
            "required": false,
            "type": "string",
            "x-example": "WUSRB185213-AE7-11243-22a2c887-12a7-48e6-b9af-0ed7fb67e4cb"
          },
          {
            "name": "nep-organization",
            "in": "header",
            "description": "The organization the request applies to",
            "required": false,
            "type": "string",
            "maxLength": 512,
            "minLength": 1,
            "x-example": "sample-organization"
          },
          {
            "in": "header",
            "name": "nep-application-key",
            "description": "Header containing your application or API key. Without a valid application key, your request will be rejected by the gateway with a HTTP 404 error.",
            "required": true,
            "type": "string",
            "default": "19c7b50447ef0a4e0147ef8067900000"
          },
          {
            "in": "header",
            "name": "nep-service-version",
            "description": "Contains a string in the form of '{application-version}:{service-version}' corresponding to the application and service version numbers of the service you want to use in your request. This header allows a developer to specify the exact version of a service that want to use in the case where multiple versions of a service are available in the environment at the same time. The header values are used by the API gateway to figure out what service version to route the request to.",
            "required": false,
            "type": "string",
            "default": "3.0.0-GA:1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetNodesSnapshotResponse"
            }
          },
          "400": {
            "description": "The request failed validation",
            "schema": {
              "$ref": "#/definitions/PayloadConstraintViolationException"
            },
            "x-exception-types": [
              "com.ncr.nep.common.exception.PayloadConstraintViolationException"
            ]
          },
          "409": {
            "description": "An error occurred while processing a request",
            "schema": {
              "$ref": "#/definitions/MaxPayloadSizeExceededException"
            },
            "x-exception-types": [
              "com.ncr.ocp.catalog.common.MaxPayloadSizeExceededException"
            ]
          }
        },
        "x-authorities": {
          "roles": [
            "R1_CATALOG_VIEWER"
          ]
        }
      }
    },
    "/category-nodes/{nodeId}": {
      "get": {
        "tags": [
          "/category-nodes"
        ],
        "summary": "Retrieve a category node document by the resource identifier.",
        "description": "Retrieves full category node document associated with the requested node identifier.<br/>Input parameter:<br/><br/>nodeId: Identifier of the node to retrieve.<br/><br/>Returns: All fields of a category node, including read-only system generated/assigned fields.",
        "operationId": "get",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "nodeId",
            "in": "path",
            "description": "A unique code which is used to identify a node in hierarchy.",
            "required": true,
            "type": "string",
            "maximum": 120,
            "minimum": 1,
            "maxLength": 120,
            "minLength": 1,
            "pattern": "\\p{Alnum}[\\w-]*",
            "maxItems": 120,
            "minItems": 1
          },
          {
            "name": "nep-correlation-id",
            "in": "header",
            "description": "A unique ID that can be used to correlate one or more related requests for debugging or tracing purposes",
            "required": false,
            "type": "string",
            "x-example": "WUSRB185213-AE7-11243-22a2c887-12a7-48e6-b9af-0ed7fb67e4cb"
          },
          {
            "name": "nep-organization",
            "in": "header",
            "description": "The organization the request applies to",
            "required": false,
            "type": "string",
            "maxLength": 512,
            "minLength": 1,
            "x-example": "sample-organization"
          },
          {
            "in": "header",
            "name": "nep-application-key",
            "description": "Header containing your application or API key. Without a valid application key, your request will be rejected by the gateway with a HTTP 404 error.",
            "required": true,
            "type": "string",
            "default": "19c7b50447ef0a4e0147ef8067900000"
          },
          {
            "in": "header",
            "name": "nep-service-version",
            "description": "Contains a string in the form of '{application-version}:{service-version}' corresponding to the application and service version numbers of the service you want to use in your request. This header allows a developer to specify the exact version of a service that want to use in the case where multiple versions of a service are available in the environment at the same time. The header values are used by the API gateway to figure out what service version to route the request to.",
            "required": false,
            "type": "string",
            "default": "3.0.0-GA:1.0"
          },
          {
            "in": "header",
            "name": "nep-enterprise-unit",
            "description": "ID of an enterprise unit that the request applies to. This allows a request to be made contextual to a particular enterprise unit in an organization's enterprise unit hierarchy for services that support integration with enterprise units.",
            "required": false,
            "type": "string",
            "default": "102c19bde15c4533a67f9191f0135197"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NodeViewData"
            }
          },
          "400": {
            "description": "The request failed validation",
            "schema": {
              "$ref": "#/definitions/PayloadConstraintViolationException"
            },
            "x-exception-types": [
              "com.ncr.nep.common.exception.PayloadConstraintViolationException"
            ]
          },
          "404": {
            "description": "The node does not exist",
            "schema": {
              "$ref": "#/definitions/ResourceDoesNotExistException"
            },
            "x-exception-types": [
              "com.ncr.nep.common.exception.ResourceDoesNotExistException"
            ]
          }
        },
        "x-authorities": {
          "roles": [
            "R1_CATALOG_VIEWER"
          ]
        }
      }
    },
    "/category-nodes/{nodeId}/ancestors": {
      "get": {
        "tags": [
          "/category-nodes"
        ],
        "summary": "Retrieve ancestry information by the specified category node",
        "description": "Returns ancestry information by the specified category node.<br/>Input parameter:<br/><br/>nodeId: Node identifier for which the ancestry must be returned.<br/><br/>Returns: A snapshot that matches the request parameters (e.g. all category nodes modified since the submitted client version).",
        "operationId": "findAncestors",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "nodeId",
            "in": "path",
            "description": "A unique code which is used to identify a node in hierarchy.",
            "required": true,
            "type": "string",
            "maximum": 120,
            "minimum": 1,
            "maxLength": 120,
            "minLength": 1,
            "pattern": "\\p{Alnum}[\\w-]*",
            "maxItems": 120,
            "minItems": 1
          },
          {
            "name": "nep-correlation-id",
            "in": "header",
            "description": "A unique ID that can be used to correlate one or more related requests for debugging or tracing purposes",
            "required": false,
            "type": "string",
            "x-example": "WUSRB185213-AE7-11243-22a2c887-12a7-48e6-b9af-0ed7fb67e4cb"
          },
          {
            "name": "nep-organization",
            "in": "header",
            "description": "The organization the request applies to",
            "required": false,
            "type": "string",
            "maxLength": 512,
            "minLength": 1,
            "x-example": "sample-organization"
          },
          {
            "in": "header",
            "name": "nep-application-key",
            "description": "Header containing your application or API key. Without a valid application key, your request will be rejected by the gateway with a HTTP 404 error.",
            "required": true,
            "type": "string",
            "default": "19c7b50447ef0a4e0147ef8067900000"
          },
          {
            "in": "header",
            "name": "nep-service-version",
            "description": "Contains a string in the form of '{application-version}:{service-version}' corresponding to the application and service version numbers of the service you want to use in your request. This header allows a developer to specify the exact version of a service that want to use in the case where multiple versions of a service are available in the environment at the same time. The header values are used by the API gateway to figure out what service version to route the request to.",
            "required": false,
            "type": "string",
            "default": "3.0.0-GA:1.0"
          },
          {
            "in": "header",
            "name": "nep-enterprise-unit",
            "description": "ID of an enterprise unit that the request applies to. This allows a request to be made contextual to a particular enterprise unit in an organization's enterprise unit hierarchy for services that support integration with enterprise units.",
            "required": false,
            "type": "string",
            "default": "102c19bde15c4533a67f9191f0135197"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FindNodesListResponse"
            }
          },
          "400": {
            "description": "The request failed validation",
            "schema": {
              "$ref": "#/definitions/PayloadConstraintViolationException"
            },
            "x-exception-types": [
              "com.ncr.nep.common.exception.PayloadConstraintViolationException"
            ]
          },
          "404": {
            "description": "The node does not exist",
            "schema": {
              "$ref": "#/definitions/ResourceDoesNotExistException"
            },
            "x-exception-types": [
              "com.ncr.nep.common.exception.ResourceDoesNotExistException"
            ]
          }
        },
        "x-authorities": {
          "roles": [
            "R1_CATALOG_VIEWER"
          ]
        }
      }
    },
    "/export/notify": {
      "post": {
        "tags": [
          "/export"
        ],
        "summary": "Receive notification to initialize an export job.",
        "description": "Listener API for receiving messaging notifications to initialize a data export job. The provided message should contain all of the details necessary to run the job.<br/> resource_type: resource type used to know the type of resource to be published.<br/> E.g item, item-prices, item-attributes, category-nodes.<br/> snapshot_version: lower bound snapshot version which is the part of data to be published.<br/>  E.g 4455454400000, long timestamp.<br/> max_snapshot_version: upper bound snapshot version which is the part of data to be published.<br/> E.g 6655454400000, long timestamp,..<br/> job_type: type of the batch job. E.g COLD_START, WARM_START<br/> Input parameter:<br/><br/> message: The pub/sub message",
        "operationId": "startExportJob",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/MessageData"
            }
          },
          {
            "name": "nep-correlation-id",
            "in": "header",
            "description": "A unique ID that can be used to correlate one or more related requests for debugging or tracing purposes",
            "required": false,
            "type": "string",
            "x-example": "WUSRB185213-AE7-11243-22a2c887-12a7-48e6-b9af-0ed7fb67e4cb"
          },
          {
            "name": "nep-organization",
            "in": "header",
            "description": "The organization the request applies to",
            "required": false,
            "type": "string",
            "maxLength": 512,
            "minLength": 1,
            "x-example": "sample-organization"
          },
          {
            "in": "header",
            "name": "nep-application-key",
            "description": "Header containing your application or API key. Without a valid application key, your request will be rejected by the gateway with a HTTP 404 error.",
            "required": true,
            "type": "string",
            "default": "19c7b50447ef0a4e0147ef8067900000"
          },
          {
            "in": "header",
            "name": "nep-service-version",
            "description": "Contains a string in the form of '{application-version}:{service-version}' corresponding to the application and service version numbers of the service you want to use in your request. This header allows a developer to specify the exact version of a service that want to use in the case where multiple versions of a service are available in the environment at the same time. The header values are used by the API gateway to figure out what service version to route the request to.",
            "required": false,
            "type": "string",
            "default": "3.0.0-GA:1.0"
          },
          {
            "in": "header",
            "name": "nep-enterprise-unit",
            "description": "ID of an enterprise unit that the request applies to. This allows a request to be made contextual to a particular enterprise unit in an organization's enterprise unit hierarchy for services that support integration with enterprise units.",
            "required": false,
            "type": "string",
            "default": "102c19bde15c4533a67f9191f0135197"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "The request failed validation",
            "schema": {
              "$ref": "#/definitions/PayloadConstraintViolationException"
            },
            "x-exception-types": [
              "com.ncr.nep.common.exception.PayloadConstraintViolationException"
            ]
          }
        },
        "x-authorities": {
          "roles": [
            "R1_CATALOG_ADMINISTRATOR"
          ]
        }
      }
    },
    "/groups": {
      "get": {
        "tags": [
          "/groups"
        ],
        "summary": "Retrieve an active group document by the specified search criteria.",
        "description": "Request group document containing the criteria to search.<br/>Input parameter:<br/><br/>request: Object containing the criteria to search by.<br/>Returns: A page of group objects that match the specified search criteria.",
        "operationId": "findByCriteria",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "description": "The requested page number (starting from zero)",
            "required": false,
            "type": "integer",
            "default": 0,
            "maximum": 214748,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The page size",
            "required": false,
            "type": "integer",
            "default": 200,
            "maximum": 10000,
            "minimum": 10,
            "format": "int32"
          },
          {
            "name": "titlePattern",
            "in": "query",
            "description": "Title pattern to filter the search results. May be null, in that case all groups are returned.Fields named '*Pattern' support wild-card characters.<br/>Examples:<ul><li>titlePattern=group1 (exact match),</li> <li>titlePattern=so* (starts with so),</li> <li>titlePattern=*so* (contains so),</li> <li>titlePattern=* (any value)</li></ul>",
            "required": false,
            "type": "string"
          },
          {
            "name": "nep-correlation-id",
            "in": "header",
            "description": "A unique ID that can be used to correlate one or more related requests for debugging or tracing purposes",
            "required": false,
            "type": "string",
            "x-example": "WUSRB185213-AE7-11243-22a2c887-12a7-48e6-b9af-0ed7fb67e4cb"
          },
          {
            "name": "nep-organization",
            "in": "header",
            "description": "The organization the request applies to",
            "required": false,
            "type": "string",
            "maxLength": 512,
            "minLength": 1,
            "x-example": "sample-organization"
          },
          {
            "in": "header",
            "name": "nep-application-key",
            "description": "Header containing your application or API key. Without a valid application key, your request will be rejected by the gateway with a HTTP 404 error.",
            "required": true,
            "type": "string",
            "default": "19c7b50447ef0a4e0147ef8067900000"
          },
          {
            "in": "header",
            "name": "nep-service-version",
            "description": "Contains a string in the form of '{application-version}:{service-version}' corresponding to the application and service version numbers of the service you want to use in your request. This header allows a developer to specify the exact version of a service that want to use in the case where multiple versions of a service are available in the environment at the same time. The header values are used by the API gateway to figure out what service version to route the request to.",
            "required": false,
            "type": "string",
            "default": "3.0.0-GA:1.0"
          },
          {
            "in": "header",
            "name": "nep-enterprise-unit",
            "description": "ID of an enterprise unit that the request applies to. This allows a request to be made contextual to a particular enterprise unit in an organization's enterprise unit hierarchy for services that support integration with enterprise units.",
            "required": false,
            "type": "string",
            "default": "102c19bde15c4533a67f9191f0135197"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FindGroupsResponse"
            }
          },
          "400": {
            "description": "The request failed validation",
            "schema": {
              "$ref": "#/definitions/PayloadConstraintViolationException"
            },
            "x-exception-types": [
              "com.ncr.nep.common.exception.PayloadConstraintViolationException"
            ]
          }
        },
        "x-authorities": {
          "roles": [
            "R1_CATALOG_VIEWER"
          ]
        }
      },
      "put": {
        "tags": [
          "/groups"
        ],
        "summary": "Allows saving multiple groups.",
        "description": "Request object containing the group documents to be saved.<br/>Input parameter:<br/><br/> request: Object containing the groups to save.",
        "operationId": "saveMultiple",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SaveMultipleGroupsRequest"
            }
          },
          {
            "name": "nep-correlation-id",
            "in": "header",
            "description": "A unique ID that can be used to correlate one or more related requests for debugging or tracing purposes",
            "required": false,
            "type": "string",
            "x-example": "WUSRB185213-AE7-11243-22a2c887-12a7-48e6-b9af-0ed7fb67e4cb"
          },
          {
            "name": "nep-organization",
            "in": "header",
            "description": "The organization the request applies to",
            "required": false,
            "type": "string",
            "maxLength": 512,
            "minLength": 1,
            "x-example": "sample-organization"
          },
          {
            "in": "header",
            "name": "nep-application-key",
            "description": "Header containing your application or API key. Without a valid application key, your request will be rejected by the gateway with a HTTP 404 error.",
            "required": true,
            "type": "string",
            "default": "19c7b50447ef0a4e0147ef8067900000"
          },
          {
            "in": "header",
            "name": "nep-service-version",
            "description": "Contains a string in the form of '{application-version}:{service-version}' corresponding to the application and service version numbers of the service you want to use in your request. This header allows a developer to specify the exact version of a service that want to use in the case where multiple versions of a service are available in the environment at the same time. The header values are used by the API gateway to figure out what service version to route the request to.",
            "required": false,
            "type": "string",
            "default": "3.0.0-GA:1.0"
          },
          {
            "in": "header",
            "name": "nep-enterprise-unit",
            "description": "ID of an enterprise unit that the request applies to. This allows a request to be made contextual to a particular enterprise unit in an organization's enterprise unit hierarchy for services that support integration with enterprise units.",
            "required": false,
            "type": "string",
            "default": "102c19bde15c4533a67f9191f0135197"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "The request failed validation",
            "schema": {
              "$ref": "#/definitions/PayloadConstraintViolationException"
            },
            "x-exception-types": [
              "com.ncr.nep.common.exception.PayloadConstraintViolationException"
            ]
          }
        },
        "x-authorities": {
          "roles": [
            "R1_CATALOG_ADMINISTRATOR"
          ]
        }
      }
    },
    "/groups/snapshot": {
      "get": {
        "tags": [
          "/groups"
        ],
        "summary": "Get the snapshot based on the provided client snapshot version.",
        "description": "Group document synchronization API that is used to synchronize the resource state with the remote client such as POS, Store Server or mobile device.<br/>Input parameter:<br/><br/>request: Object containing request parameters supported for this resource.<br/>Returns: A snapshot that matches the request parameters.(e.g. all groups modified since the submitted client version)",
        "operationId": "getSnapshot",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "nep-enterprise-unit",
            "in": "header",
            "description": "Enterprise unit id.",
            "required": false,
            "type": "string"
          },
          {
            "name": "nep-snapshot-version",
            "in": "header",
            "description": "Version of the client state. This attribute will be used by the back-end to identify the snapshot that should be generated per client. In a simple case, the version is a timestamp (epoch time in millis) and the generated snapshot will contain all documents modified since the provided timestamp.",
            "required": false,
            "type": "integer",
            "minimum": 0,
            "format": "int64"
          },
          {
            "name": "nep-correlation-id",
            "in": "header",
            "description": "A unique ID that can be used to correlate one or more related requests for debugging or tracing purposes",
            "required": false,
            "type": "string",
            "x-example": "WUSRB185213-AE7-11243-22a2c887-12a7-48e6-b9af-0ed7fb67e4cb"
          },
          {
            "name": "nep-organization",
            "in": "header",
            "description": "The organization the request applies to",
            "required": false,
            "type": "string",
            "maxLength": 512,
            "minLength": 1,
            "x-example": "sample-organization"
          },
          {
            "in": "header",
            "name": "nep-application-key",
            "description": "Header containing your application or API key. Without a valid application key, your request will be rejected by the gateway with a HTTP 404 error.",
            "required": true,
            "type": "string",
            "default": "19c7b50447ef0a4e0147ef8067900000"
          },
          {
            "in": "header",
            "name": "nep-service-version",
            "description": "Contains a string in the form of '{application-version}:{service-version}' corresponding to the application and service version numbers of the service you want to use in your request. This header allows a developer to specify the exact version of a service that want to use in the case where multiple versions of a service are available in the environment at the same time. The header values are used by the API gateway to figure out what service version to route the request to.",
            "required": false,
            "type": "string",
            "default": "3.0.0-GA:1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetGroupsSnapshotResponse"
            }
          },
          "400": {
            "description": "The request failed validation",
            "schema": {
              "$ref": "#/definitions/PayloadConstraintViolationException"
            },
            "x-exception-types": [
              "com.ncr.nep.common.exception.PayloadConstraintViolationException"
            ]
          },
          "409": {
            "description": "An error occurred while processing a request",
            "schema": {
              "$ref": "#/definitions/MaxPayloadSizeExceededException"
            },
            "x-exception-types": [
              "com.ncr.ocp.catalog.common.MaxPayloadSizeExceededException"
            ]
          }
        },
        "x-authorities": {
          "roles": [
            "R1_CATALOG_VIEWER"
          ]
        }
      }
    },
    "/groups/{groupCode}": {
      "get": {
        "tags": [
          "/groups"
        ],
        "summary": "Retrieve an active group by the specified resource identifier.",
        "description": "Retrieves full group document associated with the specified group identifier.<br/>Input parameter:<br/><br/>groupId: Identifier of the group to retrieve.<br/><br/>Returns: A complete set of attributes for a catalog group, including read-only and system defined fields.",
        "operationId": "get",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "groupCode",
            "in": "path",
            "description": "Group code that uniquely identifies the group per tenant.",
            "required": true,
            "type": "string",
            "maximum": 100,
            "minimum": 1,
            "maxLength": 100,
            "minLength": 1,
            "pattern": "\\p{Alnum}[\\w-]*",
            "maxItems": 100,
            "minItems": 1
          },
          {
            "name": "nep-correlation-id",
            "in": "header",
            "description": "A unique ID that can be used to correlate one or more related requests for debugging or tracing purposes",
            "required": false,
            "type": "string",
            "x-example": "WUSRB185213-AE7-11243-22a2c887-12a7-48e6-b9af-0ed7fb67e4cb"
          },
          {
            "name": "nep-organization",
            "in": "header",
            "description": "The organization the request applies to",
            "required": false,
            "type": "string",
            "maxLength": 512,
            "minLength": 1,
            "x-example": "sample-organization"
          },
          {
            "in": "header",
            "name": "nep-application-key",
            "description": "Header containing your application or API key. Without a valid application key, your request will be rejected by the gateway with a HTTP 404 error.",
            "required": true,
            "type": "string",
            "default": "19c7b50447ef0a4e0147ef8067900000"
          },
          {
            "in": "header",
            "name": "nep-service-version",
            "description": "Contains a string in the form of '{application-version}:{service-version}' corresponding to the application and service version numbers of the service you want to use in your request. This header allows a developer to specify the exact version of a service that want to use in the case where multiple versions of a service are available in the environment at the same time. The header values are used by the API gateway to figure out what service version to route the request to.",
            "required": false,
            "type": "string",
            "default": "3.0.0-GA:1.0"
          },
          {
            "in": "header",
            "name": "nep-enterprise-unit",
            "description": "ID of an enterprise unit that the request applies to. This allows a request to be made contextual to a particular enterprise unit in an organization's enterprise unit hierarchy for services that support integration with enterprise units.",
            "required": false,
            "type": "string",
            "default": "102c19bde15c4533a67f9191f0135197"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GroupViewData"
            }
          },
          "400": {
            "description": "The request failed validation",
            "schema": {
              "$ref": "#/definitions/PayloadConstraintViolationException"
            },
            "x-exception-types": [
              "com.ncr.nep.common.exception.PayloadConstraintViolationException"
            ]
          },
          "404": {
            "description": "The group does not exist",
            "schema": {
              "$ref": "#/definitions/ResourceDoesNotExistException"
            },
            "x-exception-types": [
              "com.ncr.nep.common.exception.ResourceDoesNotExistException"
            ]
          }
        },
        "x-authorities": {
          "roles": [
            "R1_CATALOG_VIEWER"
          ]
        }
      }
    },
    "/import/notify": {
      "post": {
        "tags": [
          "/import"
        ],
        "summary": "Receive notification to initialize an import job.",
        "description": "Listener API for receiving messaging notifications to initialize a data import job. The provided pub/sub message should contain all of the details necessary to run the job.<br/>JOB_NAME: 'import'<br/>resource_type: resource type used to know the type of resource.E.g item, item-prices, item-attributes, category-nodes,...<br/> Input parameter:<br/><br/>message: The pub/sub message.",
        "operationId": "startImportJob",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/MessageData"
            }
          },
          {
            "name": "nep-correlation-id",
            "in": "header",
            "description": "A unique ID that can be used to correlate one or more related requests for debugging or tracing purposes",
            "required": false,
            "type": "string",
            "x-example": "WUSRB185213-AE7-11243-22a2c887-12a7-48e6-b9af-0ed7fb67e4cb"
          },
          {
            "name": "nep-organization",
            "in": "header",
            "description": "The organization the request applies to",
            "required": false,
            "type": "string",
            "maxLength": 512,
            "minLength": 1,
            "x-example": "sample-organization"
          },
          {
            "in": "header",
            "name": "nep-application-key",
            "description": "Header containing your application or API key. Without a valid application key, your request will be rejected by the gateway with a HTTP 404 error.",
            "required": true,
            "type": "string",
            "default": "19c7b50447ef0a4e0147ef8067900000"
          },
          {
            "in": "header",
            "name": "nep-service-version",
            "description": "Contains a string in the form of '{application-version}:{service-version}' corresponding to the application and service version numbers of the service you want to use in your request. This header allows a developer to specify the exact version of a service that want to use in the case where multiple versions of a service are available in the environment at the same time. The header values are used by the API gateway to figure out what service version to route the request to.",
            "required": false,
            "type": "string",
            "default": "3.0.0-GA:1.0"
          },
          {
            "in": "header",
            "name": "nep-enterprise-unit",
            "description": "ID of an enterprise unit that the request applies to. This allows a request to be made contextual to a particular enterprise unit in an organization's enterprise unit hierarchy for services that support integration with enterprise units.",
            "required": false,
            "type": "string",
            "default": "102c19bde15c4533a67f9191f0135197"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "The request failed validation",
            "schema": {
              "$ref": "#/definitions/PayloadConstraintViolationException"
            },
            "x-exception-types": [
              "com.ncr.nep.common.exception.PayloadConstraintViolationException"
            ]
          }
        },
        "x-authorities": {
          "roles": [
            "NEP_MESSAGING_NOTIFIER"
          ]
        }
      }
    },
    "/item-attributes/get-multiple": {
      "post": {
        "tags": [
          "item-attributes"
        ],
        "summary": "Retrieve a collection of matching item attributes or empty collection if no matches were found by the specified request parameters.",
        "description": "Retrieves a set of documents for a given set of item identifiers. This API is executed on a context of a single enterprise unit which is expected to be passed as a standard header. The API does not fail if any of the provided item codes do not have corresponding attributes defined at the specified enterprise unit. This API allows clients to orchestrate multiple catalog APIs more effectively. For example, a client may run a search against global items by various supported parameters and then retrieve with a single call all enterprise  unit specific attributes (e.g. store level attributes) of the catalog items matched by the previous search. This API has no side-effects.<br/>Input parameters:<br/><br/>request: Identifies context of the client, such as enterprise unit that the client belongs to.<br/> itemIdentifiers: Object containing the item codes to use for the bulk retrieval.<br/><br/>Returns: A collection of objects that represents attributes associated with catalog items at the enterprise unit level.",
        "operationId": "getMultiple",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "nep-enterprise-unit",
            "in": "header",
            "description": "Enterprise unit id.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ItemIdCollectionData"
            }
          },
          {
            "name": "nep-correlation-id",
            "in": "header",
            "description": "A unique ID that can be used to correlate one or more related requests for debugging or tracing purposes",
            "required": false,
            "type": "string",
            "x-example": "WUSRB185213-AE7-11243-22a2c887-12a7-48e6-b9af-0ed7fb67e4cb"
          },
          {
            "name": "nep-organization",
            "in": "header",
            "description": "The organization the request applies to",
            "required": false,
            "type": "string",
            "maxLength": 512,
            "minLength": 1,
            "x-example": "sample-organization"
          },
          {
            "in": "header",
            "name": "nep-application-key",
            "description": "Header containing your application or API key. Without a valid application key, your request will be rejected by the gateway with a HTTP 404 error.",
            "required": true,
            "type": "string",
            "default": "19c7b50447ef0a4e0147ef8067900000"
          },
          {
            "in": "header",
            "name": "nep-service-version",
            "description": "Contains a string in the form of '{application-version}:{service-version}' corresponding to the application and service version numbers of the service you want to use in your request. This header allows a developer to specify the exact version of a service that want to use in the case where multiple versions of a service are available in the environment at the same time. The header values are used by the API gateway to figure out what service version to route the request to.",
            "required": false,
            "type": "string",
            "default": "3.0.0-GA:1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetItemAttributesResponse"
            }
          },
          "400": {
            "description": "The request failed validation",
            "schema": {
              "$ref": "#/definitions/PayloadConstraintViolationException"
            },
            "x-exception-types": [
              "com.ncr.nep.common.exception.PayloadConstraintViolationException"
            ]
          }
        },
        "x-authorities": {
          "roles": [
            "R1_CATALOG_VIEWER"
          ]
        }
      }
    },
    "/item-attributes/snapshot": {
      "get": {
        "tags": [
          "item-attributes"
        ],
        "summary": "Get the snapshot based on the provided enterprise unit.",
        "description": "Item attribute document synchronization API that is used to synchronize the resource state with the remote client such as POS, Store Server or mobile device. This API requires specifying enterprise unit id that matches the client synchronizationsystem (e.g. store server or POS).<br/>Input parameter:<br/><br/>request: Object containing request parameters supported for this resource.<br/><br/>Returns: Snapshot that matches the request parameters (e.g. all item attributes modified since the submitted client version.)",
        "operationId": "getSnapshot",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "nep-enterprise-unit",
            "in": "header",
            "description": "Enterprise unit id.",
            "required": false,
            "type": "string"
          },
          {
            "name": "nep-snapshot-version",
            "in": "header",
            "description": "Version of the client state. This attribute will be used by the back-end to identify the snapshot that should be generated per client. In a simple case, the version is a timestamp (epoch time in millis) and the generated snapshot will contain all documents modified since the provided timestamp.",
            "required": false,
            "type": "integer",
            "minimum": 0,
            "format": "int64"
          },
          {
            "name": "nep-correlation-id",
            "in": "header",
            "description": "A unique ID that can be used to correlate one or more related requests for debugging or tracing purposes",
            "required": false,
            "type": "string",
            "x-example": "WUSRB185213-AE7-11243-22a2c887-12a7-48e6-b9af-0ed7fb67e4cb"
          },
          {
            "name": "nep-organization",
            "in": "header",
            "description": "The organization the request applies to",
            "required": false,
            "type": "string",
            "maxLength": 512,
            "minLength": 1,
            "x-example": "sample-organization"
          },
          {
            "in": "header",
            "name": "nep-application-key",
            "description": "Header containing your application or API key. Without a valid application key, your request will be rejected by the gateway with a HTTP 404 error.",
            "required": true,
            "type": "string",
            "default": "19c7b50447ef0a4e0147ef8067900000"
          },
          {
            "in": "header",
            "name": "nep-service-version",
            "description": "Contains a string in the form of '{application-version}:{service-version}' corresponding to the application and service version numbers of the service you want to use in your request. This header allows a developer to specify the exact version of a service that want to use in the case where multiple versions of a service are available in the environment at the same time. The header values are used by the API gateway to figure out what service version to route the request to.",
            "required": false,
            "type": "string",
            "default": "3.0.0-GA:1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetItemAttributesSnapshotResponse"
            }
          },
          "400": {
            "description": "The request failed validation",
            "schema": {
              "$ref": "#/definitions/PayloadConstraintViolationException"
            },
            "x-exception-types": [
              "com.ncr.nep.common.exception.PayloadConstraintViolationException"
            ]
          },
          "409": {
            "description": "An error occurred while processing a request",
            "schema": {
              "$ref": "#/definitions/MaxPayloadSizeExceededException"
            },
            "x-exception-types": [
              "com.ncr.ocp.catalog.common.MaxPayloadSizeExceededException"
            ]
          }
        },
        "x-authorities": {
          "roles": [
            "R1_CATALOG_VIEWER"
          ]
        }
      }
    },
    "/item-attributes/{itemCode}": {
      "get": {
        "tags": [
          "item-attributes"
        ],
        "summary": "Retrieve an item attribute document by the resource identifier.",
        "description": "Retrieves an item attribute document by the provided itemAttributesId identifier. Item attributes document returned will never be null.<br/>Input parameter:<br/><br/> itemAttributesId: Identifier for the item attributes to retrieve.<br/><br/>Returns: All of the fields of a catalog item attributes, including read-only system generated/assigned fields.",
        "operationId": "get",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "itemCode",
            "in": "path",
            "description": "A unique item (unique per Tenant) code which is used to identify the item.",
            "required": true,
            "type": "string",
            "maximum": 40,
            "minimum": 1,
            "maxLength": 40,
            "minLength": 1,
            "pattern": "\\p{Alnum}[\\w-]*",
            "maxItems": 40,
            "minItems": 1
          },
          {
            "name": "nep-enterprise-unit",
            "in": "header",
            "description": "Enterprise unit identifier for which the item attributes are defined.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nep-correlation-id",
            "in": "header",
            "description": "A unique ID that can be used to correlate one or more related requests for debugging or tracing purposes",
            "required": false,
            "type": "string",
            "x-example": "WUSRB185213-AE7-11243-22a2c887-12a7-48e6-b9af-0ed7fb67e4cb"
          },
          {
            "name": "nep-organization",
            "in": "header",
            "description": "The organization the request applies to",
            "required": false,
            "type": "string",
            "maxLength": 512,
            "minLength": 1,
            "x-example": "sample-organization"
          },
          {
            "in": "header",
            "name": "nep-application-key",
            "description": "Header containing your application or API key. Without a valid application key, your request will be rejected by the gateway with a HTTP 404 error.",
            "required": true,
            "type": "string",
            "default": "19c7b50447ef0a4e0147ef8067900000"
          },
          {
            "in": "header",
            "name": "nep-service-version",
            "description": "Contains a string in the form of '{application-version}:{service-version}' corresponding to the application and service version numbers of the service you want to use in your request. This header allows a developer to specify the exact version of a service that want to use in the case where multiple versions of a service are available in the environment at the same time. The header values are used by the API gateway to figure out what service version to route the request to.",
            "required": false,
            "type": "string",
            "default": "3.0.0-GA:1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ItemAttributesViewData"
            }
          },
          "400": {
            "description": "The request failed validation",
            "schema": {
              "$ref": "#/definitions/PayloadConstraintViolationException"
            },
            "x-exception-types": [
              "com.ncr.nep.common.exception.PayloadConstraintViolationException"
            ]
          },
          "404": {
            "description": "The itemattributes does not exist",
            "schema": {
              "$ref": "#/definitions/ResourceDoesNotExistException"
            },
            "x-exception-types": [
              "com.ncr.nep.common.exception.ResourceDoesNotExistException"
            ]
          }
        },
        "x-authorities": {
          "roles": [
            "R1_CATALOG_VIEWER"
          ]
        }
      },
      "put": {
        "tags": [
          "item-attributes"
        ],
        "summary": "Saves an item attribute document for a specific enterprise unit (site/store).",
        "description": "Saves overridable attributes for a catalog item associated with a specific enterprise unit (site/store). Binds the specified attributes to the specified enterprise unit.<br/>Input parameters:<br/><br/> itemAttributesId: Identifier object that bind item to enterprise unit<br/>itemAttributesData: Request object to create an item attribute for an enterprise unit.",
        "operationId": "save",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "itemCode",
            "in": "path",
            "description": "A unique item (unique per Tenant) code which is used to identify the item.",
            "required": true,
            "type": "string",
            "maximum": 40,
            "minimum": 1,
            "maxLength": 40,
            "minLength": 1,
            "pattern": "\\p{Alnum}[\\w-]*",
            "maxItems": 40,
            "minItems": 1
          },
          {
            "name": "nep-enterprise-unit",
            "in": "header",
            "description": "Enterprise unit identifier for which the item attributes are defined.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ItemAttributesData"
            }
          },
          {
            "name": "nep-correlation-id",
            "in": "header",
            "description": "A unique ID that can be used to correlate one or more related requests for debugging or tracing purposes",
            "required": false,
            "type": "string",
            "x-example": "WUSRB185213-AE7-11243-22a2c887-12a7-48e6-b9af-0ed7fb67e4cb"
          },
          {
            "name": "nep-organization",
            "in": "header",
            "description": "The organization the request applies to",
            "required": false,
            "type": "string",
            "maxLength": 512,
            "minLength": 1,
            "x-example": "sample-organization"
          },
          {
            "in": "header",
            "name": "nep-application-key",
            "description": "Header containing your application or API key. Without a valid application key, your request will be rejected by the gateway with a HTTP 404 error.",
            "required": true,
            "type": "string",
            "default": "19c7b50447ef0a4e0147ef8067900000"
          },
          {
            "in": "header",
            "name": "nep-service-version",
            "description": "Contains a string in the form of '{application-version}:{service-version}' corresponding to the application and service version numbers of the service you want to use in your request. This header allows a developer to specify the exact version of a service that want to use in the case where multiple versions of a service are available in the environment at the same time. The header values are used by the API gateway to figure out what service version to route the request to.",
            "required": false,
            "type": "string",
            "default": "3.0.0-GA:1.0"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "The request failed validation",
            "schema": {
              "$ref": "#/definitions/PayloadConstraintViolationException"
            },
            "x-exception-types": [
              "com.ncr.nep.common.exception.PayloadConstraintViolationException"
            ]
          }
        },
        "x-authorities": {
          "roles": [
            "R1_CATALOG_ADMINISTRATOR"
          ]
        }
      }
    },
    "/item-details/{item-identifier}": {
      "get": {
        "tags": [
          "/item-details"
        ],
        "summary": "Retrieve all known attributes for the specified item by the resource identifier.",
        "description": "Retrieves aggregate item data by the provided identifier. Return item is never null<br/>Input parameter:<br/><br/> request: Identifier for the item to retrieve.<br/><br/> Returns: Response object containing all known attributes for the specified item; never null.",
        "operationId": "get",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "item-identifier",
            "in": "path",
            "description": "Item code. This field could either be the primary item identifier or a package identifier without the type.",
            "required": true,
            "type": "string",
            "maximum": 60,
            "minimum": 1,
            "maxLength": 60,
            "minLength": 1,
            "pattern": "^\\p{Alnum}[\\w\\s\\-]*$",
            "maxItems": 60,
            "minItems": 1
          },
          {
            "name": "nep-enterprise-unit",
            "in": "header",
            "description": "Enterprise unit id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nep-correlation-id",
            "in": "header",
            "description": "A unique ID that can be used to correlate one or more related requests for debugging or tracing purposes",
            "required": false,
            "type": "string",
            "x-example": "WUSRB185213-AE7-11243-22a2c887-12a7-48e6-b9af-0ed7fb67e4cb"
          },
          {
            "name": "nep-organization",
            "in": "header",
            "description": "The organization the request applies to",
            "required": false,
            "type": "string",
            "maxLength": 512,
            "minLength": 1,
            "x-example": "sample-organization"
          },
          {
            "in": "header",
            "name": "nep-application-key",
            "description": "Header containing your application or API key. Without a valid application key, your request will be rejected by the gateway with a HTTP 404 error.",
            "required": true,
            "type": "string",
            "default": "19c7b50447ef0a4e0147ef8067900000"
          },
          {
            "in": "header",
            "name": "nep-service-version",
            "description": "Contains a string in the form of '{application-version}:{service-version}' corresponding to the application and service version numbers of the service you want to use in your request. This header allows a developer to specify the exact version of a service that want to use in the case where multiple versions of a service are available in the environment at the same time. The header values are used by the API gateway to figure out what service version to route the request to.",
            "required": false,
            "type": "string",
            "default": "3.0.0-GA:1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetItemDetailsResponse"
            }
          },
          "400": {
            "description": "The request failed validation",
            "schema": {
              "$ref": "#/definitions/PayloadConstraintViolationException"
            },
            "x-exception-types": [
              "com.ncr.nep.common.exception.PayloadConstraintViolationException"
            ]
          },
          "404": {
            "description": "The resource does not exist",
            "schema": {
              "$ref": "#/definitions/ResourceDoesNotExistException"
            },
            "x-exception-types": [
              "com.ncr.nep.common.exception.ResourceDoesNotExistException"
            ]
          }
        },
        "x-authorities": {
          "roles": [
            "R1_CATALOG_VIEWER"
          ]
        }
      }
    },
    "/item-prices/get-multiple": {
      "post": {
        "tags": [
          "/item-prices"
        ],
        "summary": "Retrieve a collection of matching item price documents or empty collection if no matches were found.",
        "description": "Retrieves a set of item price documents for a given set of item identifiers. This API is executed on a context of a single  enterprise unit which is expected to be passed as a standard header. The API does not fail if any of the provided item codes do not have corresponding prices defined at the specified enterprise unit. This API allows clients to orchestrate multiple catalog APIs more effectively. For example, a client may run a search against global items by various supported parameters and then retrieve with a single call all prices for a given enterprise unit (e.g. store/site) of the catalog items matched by the previous search. This API has no side-effects.<br/>Input parameters:<br/><br/>request: Identifies context of the client, such as enterprise unit that the client belongs to.<br/>itemIdentifiers: Object containing the item codes to use for bulk retrieval.<br/><br/>Returns: A collection of the matched documents or empty collection if not matches were found.",
        "operationId": "getMultiple",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "nep-enterprise-unit",
            "in": "header",
            "description": "Enterprise unit id.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ItemIdCollectionData"
            }
          },
          {
            "name": "nep-correlation-id",
            "in": "header",
            "description": "A unique ID that can be used to correlate one or more related requests for debugging or tracing purposes",
            "required": false,
            "type": "string",
            "x-example": "WUSRB185213-AE7-11243-22a2c887-12a7-48e6-b9af-0ed7fb67e4cb"
          },
          {
            "name": "nep-organization",
            "in": "header",
            "description": "The organization the request applies to",
            "required": false,
            "type": "string",
            "maxLength": 512,
            "minLength": 1,
            "x-example": "sample-organization"
          },
          {
            "in": "header",
            "name": "nep-application-key",
            "description": "Header containing your application or API key. Without a valid application key, your request will be rejected by the gateway with a HTTP 404 error.",
            "required": true,
            "type": "string",
            "default": "19c7b50447ef0a4e0147ef8067900000"
          },
          {
            "in": "header",
            "name": "nep-service-version",
            "description": "Contains a string in the form of '{application-version}:{service-version}' corresponding to the application and service version numbers of the service you want to use in your request. This header allows a developer to specify the exact version of a service that want to use in the case where multiple versions of a service are available in the environment at the same time. The header values are used by the API gateway to figure out what service version to route the request to.",
            "required": false,
            "type": "string",
            "default": "3.0.0-GA:1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetItemPricesResponse"
            }
          },
          "400": {
            "description": "The request failed validation",
            "schema": {
              "$ref": "#/definitions/PayloadConstraintViolationException"
            },
            "x-exception-types": [
              "com.ncr.nep.common.exception.PayloadConstraintViolationException"
            ]
          }
        },
        "x-authorities": {
          "roles": [
            "R1_CATALOG_VIEWER"
          ]
        }
      }
    },
    "/item-prices/snapshot": {
      "get": {
        "tags": [
          "/item-prices"
        ],
        "summary": "Get the snapshot based on the provided client snapshot version.",
        "description": "Item price document synchronization API that is used to synchronize the resource state with the remote client such as POS, Store Server or mobile device.<br/>Input parameter:<br/><br/>request: Object containing request parameters supported for this resource<br/>Returns: A snapshot that matches the request parameters (e.g. all items modified since the submitted client version).",
        "operationId": "getSnapshot",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "nep-enterprise-unit",
            "in": "header",
            "description": "Enterprise unit id.",
            "required": false,
            "type": "string"
          },
          {
            "name": "nep-snapshot-version",
            "in": "header",
            "description": "Version of the client state. This attribute will be used by the back-end to identify the snapshot that should be generated per client. In a simple case, the version is a timestamp (epoch time in millis) and the generated snapshot will contain all documents modified since the provided timestamp.",
            "required": false,
            "type": "integer",
            "minimum": 0,
            "format": "int64"
          },
          {
            "name": "nep-correlation-id",
            "in": "header",
            "description": "A unique ID that can be used to correlate one or more related requests for debugging or tracing purposes",
            "required": false,
            "type": "string",
            "x-example": "WUSRB185213-AE7-11243-22a2c887-12a7-48e6-b9af-0ed7fb67e4cb"
          },
          {
            "name": "nep-organization",
            "in": "header",
            "description": "The organization the request applies to",
            "required": false,
            "type": "string",
            "maxLength": 512,
            "minLength": 1,
            "x-example": "sample-organization"
          },
          {
            "in": "header",
            "name": "nep-application-key",
            "description": "Header containing your application or API key. Without a valid application key, your request will be rejected by the gateway with a HTTP 404 error.",
            "required": true,
            "type": "string",
            "default": "19c7b50447ef0a4e0147ef8067900000"
          },
          {
            "in": "header",
            "name": "nep-service-version",
            "description": "Contains a string in the form of '{application-version}:{service-version}' corresponding to the application and service version numbers of the service you want to use in your request. This header allows a developer to specify the exact version of a service that want to use in the case where multiple versions of a service are available in the environment at the same time. The header values are used by the API gateway to figure out what service version to route the request to.",
            "required": false,
            "type": "string",
            "default": "3.0.0-GA:1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetItemPricesSnapshotResponse"
            }
          },
          "400": {
            "description": "The request failed validation",
            "schema": {
              "$ref": "#/definitions/PayloadConstraintViolationException"
            },
            "x-exception-types": [
              "com.ncr.nep.common.exception.PayloadConstraintViolationException"
            ]
          },
          "409": {
            "description": "An error occurred while processing a request",
            "schema": {
              "$ref": "#/definitions/MaxPayloadSizeExceededException"
            },
            "x-exception-types": [
              "com.ncr.ocp.catalog.common.MaxPayloadSizeExceededException"
            ]
          }
        },
        "x-authorities": {
          "roles": [
            "R1_CATALOG_VIEWER"
          ]
        }
      }
    },
    "/item-prices/{itemCode}/{priceCode}": {
      "get": {
        "tags": [
          "/item-prices"
        ],
        "summary": "Retrieve an item price document by the item price resource identifier.",
        "description": "Retrieves full set of attributes associated with item price. Item price identifier uniquely identifies item price document to retrieve.<br/>Input parameter:<br/><br/>priceIdentifier: uniquely identifies item price to retrieve.<br/><br/>Returns: Object containing complete writable set of attributes for item price.",
        "operationId": "get",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "itemCode",
            "in": "path",
            "description": "A unique item (unique per Tenant) code which is used to identify the item.",
            "required": true,
            "type": "string",
            "maximum": 40,
            "minimum": 1,
            "maxLength": 40,
            "minLength": 1,
            "pattern": "\\p{Alnum}[\\w-]*",
            "maxItems": 40,
            "minItems": 1
          },
          {
            "name": "nep-enterprise-unit",
            "in": "header",
            "description": "Enterprise unit identifier for which the item prices are defined.",
            "required": true,
            "type": "string"
          },
          {
            "name": "priceCode",
            "in": "path",
            "description": "Identifier of the price provided by the external system. It is expected to be unique in the context of the item and enterprise unit, since each combination of item code, enterprise unit and price identifier are part of the composite id. This identifier is mandatory to facilitate price updates. For example a price scheduled in the future may be cancelled and this is expected to be communicated to the clients that replicate the catalog item price document.",
            "required": true,
            "type": "string",
            "maximum": 100,
            "minimum": 1,
            "maxLength": 100,
            "minLength": 1,
            "maxItems": 100,
            "minItems": 1
          },
          {
            "name": "nep-correlation-id",
            "in": "header",
            "description": "A unique ID that can be used to correlate one or more related requests for debugging or tracing purposes",
            "required": false,
            "type": "string",
            "x-example": "WUSRB185213-AE7-11243-22a2c887-12a7-48e6-b9af-0ed7fb67e4cb"
          },
          {
            "name": "nep-organization",
            "in": "header",
            "description": "The organization the request applies to",
            "required": false,
            "type": "string",
            "maxLength": 512,
            "minLength": 1,
            "x-example": "sample-organization"
          },
          {
            "in": "header",
            "name": "nep-application-key",
            "description": "Header containing your application or API key. Without a valid application key, your request will be rejected by the gateway with a HTTP 404 error.",
            "required": true,
            "type": "string",
            "default": "19c7b50447ef0a4e0147ef8067900000"
          },
          {
            "in": "header",
            "name": "nep-service-version",
            "description": "Contains a string in the form of '{application-version}:{service-version}' corresponding to the application and service version numbers of the service you want to use in your request. This header allows a developer to specify the exact version of a service that want to use in the case where multiple versions of a service are available in the environment at the same time. The header values are used by the API gateway to figure out what service version to route the request to.",
            "required": false,
            "type": "string",
            "default": "3.0.0-GA:1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ItemPriceViewData"
            }
          },
          "400": {
            "description": "The request failed validation",
            "schema": {
              "$ref": "#/definitions/PayloadConstraintViolationException"
            },
            "x-exception-types": [
              "com.ncr.nep.common.exception.PayloadConstraintViolationException"
            ]
          },
          "404": {
            "description": "The itemprice does not exist",
            "schema": {
              "$ref": "#/definitions/ResourceDoesNotExistException"
            },
            "x-exception-types": [
              "com.ncr.nep.common.exception.ResourceDoesNotExistException"
            ]
          }
        },
        "x-authorities": {
          "roles": [
            "R1_CATALOG_VIEWER"
          ]
        }
      },
      "put": {
        "tags": [
          "/item-prices"
        ],
        "summary": "Updates an item price document with the provided item price document input.",
        "description": "Provide id item price document containing fields that uniquely define the price object and updates an item's fields for the input item's.<br/>Input parameters:<br/><br/>itemPriceId: Item price data containing fields that uniquely define the price object.<br/>itemPriceData: Item price data containing price information to save.",
        "operationId": "save",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "itemCode",
            "in": "path",
            "description": "A unique item (unique per Tenant) code which is used to identify the item.",
            "required": true,
            "type": "string",
            "maximum": 40,
            "minimum": 1,
            "maxLength": 40,
            "minLength": 1,
            "pattern": "\\p{Alnum}[\\w-]*",
            "maxItems": 40,
            "minItems": 1
          },
          {
            "name": "nep-enterprise-unit",
            "in": "header",
            "description": "Enterprise unit identifier for which the item prices are defined.",
            "required": true,
            "type": "string"
          },
          {
            "name": "priceCode",
            "in": "path",
            "description": "Identifier of the price provided by the external system. It is expected to be unique in the context of the item and enterprise unit, since each combination of item code, enterprise unit and price identifier are part of the composite id. This identifier is mandatory to facilitate price updates. For example a price scheduled in the future may be cancelled and this is expected to be communicated to the clients that replicate the catalog item price document.",
            "required": true,
            "type": "string",
            "maximum": 100,
            "minimum": 1,
            "maxLength": 100,
            "minLength": 1,
            "maxItems": 100,
            "minItems": 1
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ItemPriceData"
            }
          },
          {
            "name": "nep-correlation-id",
            "in": "header",
            "description": "A unique ID that can be used to correlate one or more related requests for debugging or tracing purposes",
            "required": false,
            "type": "string",
            "x-example": "WUSRB185213-AE7-11243-22a2c887-12a7-48e6-b9af-0ed7fb67e4cb"
          },
          {
            "name": "nep-organization",
            "in": "header",
            "description": "The organization the request applies to",
            "required": false,
            "type": "string",
            "maxLength": 512,
            "minLength": 1,
            "x-example": "sample-organization"
          },
          {
            "in": "header",
            "name": "nep-application-key",
            "description": "Header containing your application or API key. Without a valid application key, your request will be rejected by the gateway with a HTTP 404 error.",
            "required": true,
            "type": "string",
            "default": "19c7b50447ef0a4e0147ef8067900000"
          },
          {
            "in": "header",
            "name": "nep-service-version",
            "description": "Contains a string in the form of '{application-version}:{service-version}' corresponding to the application and service version numbers of the service you want to use in your request. This header allows a developer to specify the exact version of a service that want to use in the case where multiple versions of a service are available in the environment at the same time. The header values are used by the API gateway to figure out what service version to route the request to.",
            "required": false,
            "type": "string",
            "default": "3.0.0-GA:1.0"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "The request failed validation",
            "schema": {
              "$ref": "#/definitions/PayloadConstraintViolationException"
            },
            "x-exception-types": [
              "com.ncr.nep.common.exception.PayloadConstraintViolationException"
            ]
          }
        },
        "x-authorities": {
          "roles": [
            "R1_CATALOG_ADMINISTRATOR"
          ]
        }
      }
    },
    "/items": {
      "get": {
        "tags": [
          "/items"
        ],
        "summary": "Retrieve an item document by the specified search criteria.",
        "description": "Finds item documents matching the specified search criteria (also known as standard search).<br/>Input parameter:<br/><br/> request: Is the item search criteria.<br/><br/>Returns: A page of item objects that match the specified search criteria.",
        "operationId": "findByCriteria",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "description": "The requested page number (starting from zero)",
            "required": false,
            "type": "integer",
            "default": 0,
            "maximum": 214748,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The page size",
            "required": false,
            "type": "integer",
            "default": 200,
            "maximum": 10000,
            "minimum": 10,
            "format": "int32"
          },
          {
            "name": "itemCodePattern",
            "in": "query",
            "description": "Item Code pattern to use for a search (standard pattern rules apply).",
            "required": false,
            "type": "string",
            "maximum": 40,
            "minimum": 1,
            "maxLength": 40,
            "minLength": 1,
            "maxItems": 40,
            "minItems": 1
          },
          {
            "name": "packageIdentifierPattern",
            "in": "query",
            "description": "Pattern for package identifier (any type) to use for a search (standard pattern rules apply).",
            "required": false,
            "type": "string",
            "maximum": 40,
            "minimum": 1,
            "maxLength": 40,
            "minLength": 1,
            "maxItems": 40,
            "minItems": 1
          },
          {
            "name": "longDescriptionPattern",
            "in": "query",
            "description": "Pattern for long description to use for a search (standard pattern rules apply).",
            "required": false,
            "type": "string",
            "maximum": 512,
            "minimum": 1,
            "maxLength": 512,
            "minLength": 1,
            "maxItems": 512,
            "minItems": 1
          },
          {
            "name": "shortDescriptionPattern",
            "in": "query",
            "description": "Pattern for short description to use for a search (standard pattern rules apply).",
            "required": false,
            "type": "string",
            "maximum": 64,
            "minimum": 1,
            "maxLength": 64,
            "minLength": 1,
            "maxItems": 64,
            "minItems": 1
          },
          {
            "name": "itemStatus",
            "in": "query",
            "description": "Item status to use for a search.",
            "required": false,
            "type": "string",
            "enum": [
              "INACTIVE",
              "ACTIVE"
            ]
          },
          {
            "name": "merchandiseCategoryId",
            "in": "query",
            "description": "Merchandise category code to use for a search. Exact match against the code to which the item belongs or any of the parent nodes.",
            "required": false,
            "type": "string",
            "maximum": 120,
            "minimum": 1,
            "maxLength": 120,
            "minLength": 1,
            "maxItems": 120,
            "minItems": 1
          },
          {
            "name": "sortField",
            "in": "query",
            "description": "Specifies the field on which to sort the items.",
            "required": false,
            "type": "string",
            "default": "SHORT_DESCRIPTION",
            "enum": [
              "ITEM_CODE",
              "SHORT_DESCRIPTION",
              "LONG_DESCRIPTION"
            ]
          },
          {
            "name": "sortDirection",
            "in": "query",
            "description": "Sort direction to the apply to the search results.",
            "required": false,
            "type": "string",
            "default": "ASC",
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "nep-correlation-id",
            "in": "header",
            "description": "A unique ID that can be used to correlate one or more related requests for debugging or tracing purposes",
            "required": false,
            "type": "string",
            "x-example": "WUSRB185213-AE7-11243-22a2c887-12a7-48e6-b9af-0ed7fb67e4cb"
          },
          {
            "name": "nep-organization",
            "in": "header",
            "description": "The organization the request applies to",
            "required": false,
            "type": "string",
            "maxLength": 512,
            "minLength": 1,
            "x-example": "sample-organization"
          },
          {
            "in": "header",
            "name": "nep-application-key",
            "description": "Header containing your application or API key. Without a valid application key, your request will be rejected by the gateway with a HTTP 404 error.",
            "required": true,
            "type": "string",
            "default": "19c7b50447ef0a4e0147ef8067900000"
          },
          {
            "in": "header",
            "name": "nep-service-version",
            "description": "Contains a string in the form of '{application-version}:{service-version}' corresponding to the application and service version numbers of the service you want to use in your request. This header allows a developer to specify the exact version of a service that want to use in the case where multiple versions of a service are available in the environment at the same time. The header values are used by the API gateway to figure out what service version to route the request to.",
            "required": false,
            "type": "string",
            "default": "3.0.0-GA:1.0"
          },
          {
            "in": "header",
            "name": "nep-enterprise-unit",
            "description": "ID of an enterprise unit that the request applies to. This allows a request to be made contextual to a particular enterprise unit in an organization's enterprise unit hierarchy for services that support integration with enterprise units.",
            "required": false,
            "type": "string",
            "default": "102c19bde15c4533a67f9191f0135197"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FindItemsResponse"
            }
          },
          "400": {
            "description": "The request failed validation",
            "schema": {
              "$ref": "#/definitions/PayloadConstraintViolationException"
            },
            "x-exception-types": [
              "com.ncr.nep.common.exception.PayloadConstraintViolationException"
            ]
          }
        },
        "x-authorities": {
          "roles": [
            "R1_CATALOG_VIEWER"
          ]
        }
      }
    },
    "/items/snapshot": {
      "get": {
        "tags": [
          "/items"
        ],
        "summary": "Get the snapshot based on the provided client snapshot version.",
        "description": "Item document synchronization API that is used to synchronize the resource state with the remote client such as POS, Store Server or mobile device.<br/>Input parameter:<br/><br/> request: Object containing request parameters supported for this resource.<br/><br/>Returns: Snapshot that matches the request parameters (e.g. all items modified since the submitted client version).",
        "operationId": "getSnapshot",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "nep-enterprise-unit",
            "in": "header",
            "description": "Enterprise unit id.",
            "required": false,
            "type": "string"
          },
          {
            "name": "nep-snapshot-version",
            "in": "header",
            "description": "Version of the client state. This attribute will be used by the back-end to identify the snapshot that should be generated per client. In a simple case, the version is a timestamp (epoch time in millis) and the generated snapshot will contain all documents modified since the provided timestamp.",
            "required": false,
            "type": "integer",
            "minimum": 0,
            "format": "int64"
          },
          {
            "name": "nep-correlation-id",
            "in": "header",
            "description": "A unique ID that can be used to correlate one or more related requests for debugging or tracing purposes",
            "required": false,
            "type": "string",
            "x-example": "WUSRB185213-AE7-11243-22a2c887-12a7-48e6-b9af-0ed7fb67e4cb"
          },
          {
            "name": "nep-organization",
            "in": "header",
            "description": "The organization the request applies to",
            "required": false,
            "type": "string",
            "maxLength": 512,
            "minLength": 1,
            "x-example": "sample-organization"
          },
          {
            "in": "header",
            "name": "nep-application-key",
            "description": "Header containing your application or API key. Without a valid application key, your request will be rejected by the gateway with a HTTP 404 error.",
            "required": true,
            "type": "string",
            "default": "19c7b50447ef0a4e0147ef8067900000"
          },
          {
            "in": "header",
            "name": "nep-service-version",
            "description": "Contains a string in the form of '{application-version}:{service-version}' corresponding to the application and service version numbers of the service you want to use in your request. This header allows a developer to specify the exact version of a service that want to use in the case where multiple versions of a service are available in the environment at the same time. The header values are used by the API gateway to figure out what service version to route the request to.",
            "required": false,
            "type": "string",
            "default": "3.0.0-GA:1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetItemsSnapshotResponse"
            }
          },
          "400": {
            "description": "The request failed validation",
            "schema": {
              "$ref": "#/definitions/PayloadConstraintViolationException"
            },
            "x-exception-types": [
              "com.ncr.nep.common.exception.PayloadConstraintViolationException"
            ]
          },
          "409": {
            "description": "An error occurred while processing a request",
            "schema": {
              "$ref": "#/definitions/MaxPayloadSizeExceededException"
            },
            "x-exception-types": [
              "com.ncr.ocp.catalog.common.MaxPayloadSizeExceededException"
            ]
          }
        },
        "x-authorities": {
          "roles": [
            "R1_CATALOG_VIEWER"
          ]
        }
      }
    },
    "/items/suggestions": {
      "get": {
        "tags": [
          "/items"
        ],
        "summary": "Retrieve an item suggestions by the specified search criteria.",
        "description": "Retrieves suggestions that fit the provided search criteria.<br/>Input parameter:<br/><br/>request: Is the suggestions search criteria.<br/><br/>Returns: Object containing a page of search results.",
        "operationId": "findSuggestions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "description": "The requested page number (starting from zero)",
            "required": false,
            "type": "integer",
            "default": 0,
            "maximum": 214748,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The page size",
            "required": false,
            "type": "integer",
            "default": 200,
            "maximum": 10000,
            "minimum": 10,
            "format": "int32"
          },
          {
            "name": "codePattern",
            "in": "query",
            "description": "Item Code pattern to use for a search (standard pattern rules apply).",
            "required": false,
            "type": "string",
            "maximum": 40,
            "minimum": 1,
            "maxLength": 40,
            "minLength": 1,
            "maxItems": 40,
            "minItems": 1
          },
          {
            "name": "descriptionPattern",
            "in": "query",
            "description": "Pattern for long description to use for a search (standard pattern rules apply)",
            "required": false,
            "type": "string",
            "maximum": 512,
            "minimum": 1,
            "maxLength": 512,
            "minLength": 1,
            "maxItems": 512,
            "minItems": 1
          },
          {
            "name": "sortField",
            "in": "query",
            "description": "Sort field to apply to the retrieved items.",
            "required": false,
            "type": "string",
            "default": "SHORT_DESCRIPTION",
            "enum": [
              "ITEM_CODE",
              "SHORT_DESCRIPTION",
              "LONG_DESCRIPTION",
              "SCORE"
            ]
          },
          {
            "name": "sortDirection",
            "in": "query",
            "description": "Sort direction to apply to the retrieved items.",
            "required": false,
            "type": "string",
            "default": "ASC",
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "merchandiseCategoryId",
            "in": "query",
            "description": "Merchandise category node id. If provided the search will be restricted to just the items that fall into this category. The provided code must be an exact match for either the merchandise category node to which the item  belongs or to any of the ancestors.",
            "required": false,
            "type": "string",
            "maximum": 120,
            "minimum": 1,
            "maxLength": 120,
            "minLength": 1,
            "maxItems": 120,
            "minItems": 1
          },
          {
            "name": "nep-correlation-id",
            "in": "header",
            "description": "A unique ID that can be used to correlate one or more related requests for debugging or tracing purposes",
            "required": false,
            "type": "string",
            "x-example": "WUSRB185213-AE7-11243-22a2c887-12a7-48e6-b9af-0ed7fb67e4cb"
          },
          {
            "name": "nep-organization",
            "in": "header",
            "description": "The organization the request applies to",
            "required": false,
            "type": "string",
            "maxLength": 512,
            "minLength": 1,
            "x-example": "sample-organization"
          },
          {
            "in": "header",
            "name": "nep-application-key",
            "description": "Header containing your application or API key. Without a valid application key, your request will be rejected by the gateway with a HTTP 404 error.",
            "required": true,
            "type": "string",
            "default": "19c7b50447ef0a4e0147ef8067900000"
          },
          {
            "in": "header",
            "name": "nep-service-version",
            "description": "Contains a string in the form of '{application-version}:{service-version}' corresponding to the application and service version numbers of the service you want to use in your request. This header allows a developer to specify the exact version of a service that want to use in the case where multiple versions of a service are available in the environment at the same time. The header values are used by the API gateway to figure out what service version to route the request to.",
            "required": false,
            "type": "string",
            "default": "3.0.0-GA:1.0"
          },
          {
            "in": "header",
            "name": "nep-enterprise-unit",
            "description": "ID of an enterprise unit that the request applies to. This allows a request to be made contextual to a particular enterprise unit in an organization's enterprise unit hierarchy for services that support integration with enterprise units.",
            "required": false,
            "type": "string",
            "default": "102c19bde15c4533a67f9191f0135197"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FindItemsResponse"
            }
          },
          "400": {
            "description": "The request failed validation",
            "schema": {
              "$ref": "#/definitions/PayloadConstraintViolationException"
            },
            "x-exception-types": [
              "com.ncr.nep.common.exception.PayloadConstraintViolationException"
            ]
          }
        },
        "x-authorities": {
          "roles": [
            "R1_CATALOG_VIEWER"
          ]
        }
      }
    },
    "/items/{itemCode}": {
      "get": {
        "tags": [
          "/items"
        ],
        "summary": "Retrieve an item document by the resource identifier.",
        "description": "Retrieves full item document using the provided document identifier (item code).<br/>Input parameter:<br/><br/> itemId: Identifies the item to retrieve.<br/><br/>Returns: Object containing snapshot data with catalog items. (never null).",
        "operationId": "get",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "itemCode",
            "in": "path",
            "description": "A unique item (unique per Tenant) code which is used to identify the item.",
            "required": true,
            "type": "string",
            "maximum": 40,
            "minimum": 1,
            "maxLength": 40,
            "minLength": 1,
            "pattern": "\\p{Alnum}[\\w-]*",
            "maxItems": 40,
            "minItems": 1
          },
          {
            "name": "nep-correlation-id",
            "in": "header",
            "description": "A unique ID that can be used to correlate one or more related requests for debugging or tracing purposes",
            "required": false,
            "type": "string",
            "x-example": "WUSRB185213-AE7-11243-22a2c887-12a7-48e6-b9af-0ed7fb67e4cb"
          },
          {
            "name": "nep-organization",
            "in": "header",
            "description": "The organization the request applies to",
            "required": false,
            "type": "string",
            "maxLength": 512,
            "minLength": 1,
            "x-example": "sample-organization"
          },
          {
            "in": "header",
            "name": "nep-application-key",
            "description": "Header containing your application or API key. Without a valid application key, your request will be rejected by the gateway with a HTTP 404 error.",
            "required": true,
            "type": "string",
            "default": "19c7b50447ef0a4e0147ef8067900000"
          },
          {
            "in": "header",
            "name": "nep-service-version",
            "description": "Contains a string in the form of '{application-version}:{service-version}' corresponding to the application and service version numbers of the service you want to use in your request. This header allows a developer to specify the exact version of a service that want to use in the case where multiple versions of a service are available in the environment at the same time. The header values are used by the API gateway to figure out what service version to route the request to.",
            "required": false,
            "type": "string",
            "default": "3.0.0-GA:1.0"
          },
          {
            "in": "header",
            "name": "nep-enterprise-unit",
            "description": "ID of an enterprise unit that the request applies to. This allows a request to be made contextual to a particular enterprise unit in an organization's enterprise unit hierarchy for services that support integration with enterprise units.",
            "required": false,
            "type": "string",
            "default": "102c19bde15c4533a67f9191f0135197"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ItemViewData"
            }
          },
          "400": {
            "description": "The request failed validation",
            "schema": {
              "$ref": "#/definitions/PayloadConstraintViolationException"
            },
            "x-exception-types": [
              "com.ncr.nep.common.exception.PayloadConstraintViolationException"
            ]
          },
          "404": {
            "description": "The item does not exist",
            "schema": {
              "$ref": "#/definitions/ResourceDoesNotExistException"
            },
            "x-exception-types": [
              "com.ncr.nep.common.exception.ResourceDoesNotExistException"
            ]
          }
        },
        "x-authorities": {
          "roles": [
            "R1_CATALOG_VIEWER"
          ]
        }
      },
      "put": {
        "tags": [
          "/items"
        ],
        "summary": "Updates an item document.",
        "description": "Updates an item document's fields with the input item document.<br/> Input parameters:<br/><br/> itemCode: Is the item code.<br/> itemData: Data containing the updated item information.",
        "operationId": "save",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "itemCode",
            "in": "path",
            "description": "A unique item (unique per Tenant) code which is used to identify the item.",
            "required": true,
            "type": "string",
            "maximum": 40,
            "minimum": 1,
            "maxLength": 40,
            "minLength": 1,
            "pattern": "\\p{Alnum}[\\w-]*",
            "maxItems": 40,
            "minItems": 1
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ItemData"
            }
          },
          {
            "name": "nep-correlation-id",
            "in": "header",
            "description": "A unique ID that can be used to correlate one or more related requests for debugging or tracing purposes",
            "required": false,
            "type": "string",
            "x-example": "WUSRB185213-AE7-11243-22a2c887-12a7-48e6-b9af-0ed7fb67e4cb"
          },
          {
            "name": "nep-organization",
            "in": "header",
            "description": "The organization the request applies to",
            "required": false,
            "type": "string",
            "maxLength": 512,
            "minLength": 1,
            "x-example": "sample-organization"
          },
          {
            "in": "header",
            "name": "nep-application-key",
            "description": "Header containing your application or API key. Without a valid application key, your request will be rejected by the gateway with a HTTP 404 error.",
            "required": true,
            "type": "string",
            "default": "19c7b50447ef0a4e0147ef8067900000"
          },
          {
            "in": "header",
            "name": "nep-service-version",
            "description": "Contains a string in the form of '{application-version}:{service-version}' corresponding to the application and service version numbers of the service you want to use in your request. This header allows a developer to specify the exact version of a service that want to use in the case where multiple versions of a service are available in the environment at the same time. The header values are used by the API gateway to figure out what service version to route the request to.",
            "required": false,
            "type": "string",
            "default": "3.0.0-GA:1.0"
          },
          {
            "in": "header",
            "name": "nep-enterprise-unit",
            "description": "ID of an enterprise unit that the request applies to. This allows a request to be made contextual to a particular enterprise unit in an organization's enterprise unit hierarchy for services that support integration with enterprise units.",
            "required": false,
            "type": "string",
            "default": "102c19bde15c4533a67f9191f0135197"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "The request failed validation",
            "schema": {
              "$ref": "#/definitions/PayloadConstraintViolationException"
            },
            "x-exception-types": [
              "com.ncr.nep.common.exception.PayloadConstraintViolationException"
            ]
          }
        },
        "x-authorities": {
          "roles": [
            "R1_CATALOG_ADMINISTRATOR"
          ]
        }
      }
    },
    "/link-groups": {
      "get": {
        "tags": [
          "/link-groups"
        ],
        "summary": "Retrieve active link group documents by the specified search criteria.",
        "description": "Finds an active link group document matching the specified search criteria.<br/>Input parameter:<br/><br/> request: Object containing link group search criteria.<br/><br/>Returns: A page of link group objects that match the specified search criteria.",
        "operationId": "findByCriteria",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "description": "The requested page number (starting from zero)",
            "required": false,
            "type": "integer",
            "default": 0,
            "maximum": 214748,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The page size",
            "required": false,
            "type": "integer",
            "default": 200,
            "maximum": 10000,
            "minimum": 10,
            "format": "int32"
          },
          {
            "name": "descriptionPattern",
            "in": "query",
            "description": "Title pattern to filter the search results. May be null, in that case all groups are returned.<p>Fields named '*Pattern' support wild-card characters.</p>Examples:<ul><li>descriptionPattern=group1 (exact match)</li><li>descriptionPattern=so* (starts with so)</li><li>descriptionPattern=*so* (contains so)</li><li>descriptionPattern=* (any value)</li></ul>",
            "required": false,
            "type": "string",
            "maximum": 255,
            "minimum": 1,
            "maxLength": 255,
            "minLength": 1,
            "maxItems": 255,
            "minItems": 1
          },
          {
            "name": "nep-correlation-id",
            "in": "header",
            "description": "A unique ID that can be used to correlate one or more related requests for debugging or tracing purposes",
            "required": false,
            "type": "string",
            "x-example": "WUSRB185213-AE7-11243-22a2c887-12a7-48e6-b9af-0ed7fb67e4cb"
          },
          {
            "name": "nep-organization",
            "in": "header",
            "description": "The organization the request applies to",
            "required": false,
            "type": "string",
            "maxLength": 512,
            "minLength": 1,
            "x-example": "sample-organization"
          },
          {
            "in": "header",
            "name": "nep-application-key",
            "description": "Header containing your application or API key. Without a valid application key, your request will be rejected by the gateway with a HTTP 404 error.",
            "required": true,
            "type": "string",
            "default": "19c7b50447ef0a4e0147ef8067900000"
          },
          {
            "in": "header",
            "name": "nep-service-version",
            "description": "Contains a string in the form of '{application-version}:{service-version}' corresponding to the application and service version numbers of the service you want to use in your request. This header allows a developer to specify the exact version of a service that want to use in the case where multiple versions of a service are available in the environment at the same time. The header values are used by the API gateway to figure out what service version to route the request to.",
            "required": false,
            "type": "string",
            "default": "3.0.0-GA:1.0"
          },
          {
            "in": "header",
            "name": "nep-enterprise-unit",
            "description": "ID of an enterprise unit that the request applies to. This allows a request to be made contextual to a particular enterprise unit in an organization's enterprise unit hierarchy for services that support integration with enterprise units.",
            "required": false,
            "type": "string",
            "default": "102c19bde15c4533a67f9191f0135197"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FindLinkGroupsResponse"
            }
          },
          "400": {
            "description": "The request failed validation",
            "schema": {
              "$ref": "#/definitions/PayloadConstraintViolationException"
            },
            "x-exception-types": [
              "com.ncr.nep.common.exception.PayloadConstraintViolationException"
            ]
          }
        },
        "x-authorities": {
          "roles": [
            "R1_CATALOG_VIEWER"
          ]
        }
      }
    },
    "/link-groups/snapshot": {
      "get": {
        "tags": [
          "/link-groups"
        ],
        "summary": "Get the snapshot based on the provided client snapshot version.",
        "description": "Link group document synchronization API that is used to synchronize the resource state with the remote client such as POS, store server or mobile device.<br/>Input parameter:<br/><br/> request: Object containing request parameters supported for this resource.<br/><br/>Returns: A snapshot that matches the request parameters (e.g. all groups modified since the submitted client version).",
        "operationId": "getSnapshot",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "nep-enterprise-unit",
            "in": "header",
            "description": "Enterprise unit id.",
            "required": false,
            "type": "string"
          },
          {
            "name": "nep-snapshot-version",
            "in": "header",
            "description": "Version of the client state. This attribute will be used by the back-end to identify the snapshot that should be generated per client. In a simple case, the version is a timestamp (epoch time in millis) and the generated snapshot will contain all documents modified since the provided timestamp.",
            "required": false,
            "type": "integer",
            "minimum": 0,
            "format": "int64"
          },
          {
            "name": "nep-correlation-id",
            "in": "header",
            "description": "A unique ID that can be used to correlate one or more related requests for debugging or tracing purposes",
            "required": false,
            "type": "string",
            "x-example": "WUSRB185213-AE7-11243-22a2c887-12a7-48e6-b9af-0ed7fb67e4cb"
          },
          {
            "name": "nep-organization",
            "in": "header",
            "description": "The organization the request applies to",
            "required": false,
            "type": "string",
            "maxLength": 512,
            "minLength": 1,
            "x-example": "sample-organization"
          },
          {
            "in": "header",
            "name": "nep-application-key",
            "description": "Header containing your application or API key. Without a valid application key, your request will be rejected by the gateway with a HTTP 404 error.",
            "required": true,
            "type": "string",
            "default": "19c7b50447ef0a4e0147ef8067900000"
          },
          {
            "in": "header",
            "name": "nep-service-version",
            "description": "Contains a string in the form of '{application-version}:{service-version}' corresponding to the application and service version numbers of the service you want to use in your request. This header allows a developer to specify the exact version of a service that want to use in the case where multiple versions of a service are available in the environment at the same time. The header values are used by the API gateway to figure out what service version to route the request to.",
            "required": false,
            "type": "string",
            "default": "3.0.0-GA:1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetLinkGroupsSnapshotResponse"
            }
          },
          "400": {
            "description": "The request failed validation",
            "schema": {
              "$ref": "#/definitions/PayloadConstraintViolationException"
            },
            "x-exception-types": [
              "com.ncr.nep.common.exception.PayloadConstraintViolationException"
            ]
          },
          "409": {
            "description": "An error occurred while processing a request",
            "schema": {
              "$ref": "#/definitions/MaxPayloadSizeExceededException"
            },
            "x-exception-types": [
              "com.ncr.ocp.catalog.common.MaxPayloadSizeExceededException"
            ]
          }
        },
        "x-authorities": {
          "roles": [
            "R1_CATALOG_VIEWER"
          ]
        }
      }
    },
    "/link-groups/{linkGroupCode}": {
      "get": {
        "tags": [
          "/link-groups"
        ],
        "summary": "Retrieves an active link group document by the resource identifier.",
        "description": "Retrieves full active link group document associated with the requested link group resource identifier.<br/>Input parameter:<br/><br/> linkGroupId: Identifies the link group document to retrieve.<br/><br/>Returns: Link group document containing writable and read-only attributes of the retrieved link group.",
        "operationId": "get",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "linkGroupCode",
            "in": "path",
            "description": "A unique (per tenant) link group code that identifies the link group.",
            "required": true,
            "type": "string",
            "maximum": 100,
            "minimum": 1,
            "maxLength": 100,
            "minLength": 1,
            "pattern": "\\p{Alnum}[\\w-]*",
            "maxItems": 100,
            "minItems": 1
          },
          {
            "name": "nep-correlation-id",
            "in": "header",
            "description": "A unique ID that can be used to correlate one or more related requests for debugging or tracing purposes",
            "required": false,
            "type": "string",
            "x-example": "WUSRB185213-AE7-11243-22a2c887-12a7-48e6-b9af-0ed7fb67e4cb"
          },
          {
            "name": "nep-organization",
            "in": "header",
            "description": "The organization the request applies to",
            "required": false,
            "type": "string",
            "maxLength": 512,
            "minLength": 1,
            "x-example": "sample-organization"
          },
          {
            "in": "header",
            "name": "nep-application-key",
            "description": "Header containing your application or API key. Without a valid application key, your request will be rejected by the gateway with a HTTP 404 error.",
            "required": true,
            "type": "string",
            "default": "19c7b50447ef0a4e0147ef8067900000"
          },
          {
            "in": "header",
            "name": "nep-service-version",
            "description": "Contains a string in the form of '{application-version}:{service-version}' corresponding to the application and service version numbers of the service you want to use in your request. This header allows a developer to specify the exact version of a service that want to use in the case where multiple versions of a service are available in the environment at the same time. The header values are used by the API gateway to figure out what service version to route the request to.",
            "required": false,
            "type": "string",
            "default": "3.0.0-GA:1.0"
          },
          {
            "in": "header",
            "name": "nep-enterprise-unit",
            "description": "ID of an enterprise unit that the request applies to. This allows a request to be made contextual to a particular enterprise unit in an organization's enterprise unit hierarchy for services that support integration with enterprise units.",
            "required": false,
            "type": "string",
            "default": "102c19bde15c4533a67f9191f0135197"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LinkGroupViewData"
            }
          },
          "400": {
            "description": "The request failed validation",
            "schema": {
              "$ref": "#/definitions/PayloadConstraintViolationException"
            },
            "x-exception-types": [
              "com.ncr.nep.common.exception.PayloadConstraintViolationException"
            ]
          },
          "404": {
            "description": "The linkgroup does not exist",
            "schema": {
              "$ref": "#/definitions/ResourceDoesNotExistException"
            },
            "x-exception-types": [
              "com.ncr.nep.common.exception.ResourceDoesNotExistException"
            ]
          }
        },
        "x-authorities": {
          "roles": [
            "R1_CATALOG_VIEWER"
          ]
        }
      },
      "put": {
        "tags": [
          "/link-groups"
        ],
        "summary": "Updates a link group document.",
        "description": "Allows saving a link group. if enterprise unit header is specified with the request, the object is saved with the specified enterprise unit making the link group applicable only for the specified unit (site/store).<br/>Input parameters: <br/><br/> linkGroupCode: Request containing link group identifier and optional enterprise unit information.<br/> linkGroup: Object containing the link group to save.",
        "operationId": "save",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "linkGroupCode",
            "in": "path",
            "description": "A unique (per tenant) link group code that identifies the link group.",
            "required": true,
            "type": "string",
            "maximum": 100,
            "minimum": 1,
            "maxLength": 100,
            "minLength": 1,
            "pattern": "\\p{Alnum}[\\w-]*",
            "maxItems": 100,
            "minItems": 1
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/LinkGroupData"
            }
          },
          {
            "name": "nep-correlation-id",
            "in": "header",
            "description": "A unique ID that can be used to correlate one or more related requests for debugging or tracing purposes",
            "required": false,
            "type": "string",
            "x-example": "WUSRB185213-AE7-11243-22a2c887-12a7-48e6-b9af-0ed7fb67e4cb"
          },
          {
            "name": "nep-organization",
            "in": "header",
            "description": "The organization the request applies to",
            "required": false,
            "type": "string",
            "maxLength": 512,
            "minLength": 1,
            "x-example": "sample-organization"
          },
          {
            "in": "header",
            "name": "nep-application-key",
            "description": "Header containing your application or API key. Without a valid application key, your request will be rejected by the gateway with a HTTP 404 error.",
            "required": true,
            "type": "string",
            "default": "19c7b50447ef0a4e0147ef8067900000"
          },
          {
            "in": "header",
            "name": "nep-service-version",
            "description": "Contains a string in the form of '{application-version}:{service-version}' corresponding to the application and service version numbers of the service you want to use in your request. This header allows a developer to specify the exact version of a service that want to use in the case where multiple versions of a service are available in the environment at the same time. The header values are used by the API gateway to figure out what service version to route the request to.",
            "required": false,
            "type": "string",
            "default": "3.0.0-GA:1.0"
          },
          {
            "in": "header",
            "name": "nep-enterprise-unit",
            "description": "ID of an enterprise unit that the request applies to. This allows a request to be made contextual to a particular enterprise unit in an organization's enterprise unit hierarchy for services that support integration with enterprise units.",
            "required": false,
            "type": "string",
            "default": "102c19bde15c4533a67f9191f0135197"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "The request failed validation",
            "schema": {
              "$ref": "#/definitions/PayloadConstraintViolationException"
            },
            "x-exception-types": [
              "com.ncr.nep.common.exception.PayloadConstraintViolationException"
            ]
          }
        },
        "x-authorities": {
          "roles": [
            "R1_CATALOG_ADMINISTRATOR"
          ]
        }
      }
    }
  },
  "definitions": {
    "AuditTrailData": {
      "type": "object",
      "required": [
        "lastUpdated",
        "lastUpdatedByUser"
      ],
      "properties": {
        "lastUpdated": {
          "type": "string",
          "format": "date-time",
          "description": "Date when the object was last updated."
        },
        "lastUpdatedByUser": {
          "type": "string",
          "description": "User name of the user that updated the object."
        }
      },
      "description": "Audit related information that can be associated with objects.",
      "_model": "AuditTrailData"
    },
    "DynamicAttributesData": {
      "type": "object",
      "required": [
        "attributes",
        "type"
      ],
      "properties": {
        "type": {
          "type": "string",
          "minLength": 1,
          "maxLength": 64,
          "pattern": "\\p{Alnum}[\\w-]*"
        },
        "attributes": {
          "type": "array",
          "description": "Collection of key value data.",
          "items": {
            "type": "object",
            "required": [
              "key"
            ],
            "properties": {
              "key": {
                "type": "string",
                "description": "Key that identifies this key value pair."
              },
              "value": {
                "type": "string",
                "description": "Value associated with the key.",
                "minLength": 1,
                "maxLength": 512
              },
              "localizedValue": {
                "type": "object",
                "properties": {
                  "values": {
                    "type": "array",
                    "description": "Values containing entries per language (one entry per language is expected).",
                    "items": {
                      "type": "object",
                      "required": [
                        "locale",
                        "value"
                      ],
                      "properties": {
                        "locale": {
                          "type": "string",
                          "description": "Locale specifies local language."
                        },
                        "value": {
                          "type": "string",
                          "description": "Value has range of the name."
                        }
                      },
                      "description": "Contains locale and value properties.",
                      "_model": "LocalizedTextData"
                    }
                  }
                },
                "description": "Generic data type that is capable of holding text data in multiple languages.",
                "_model": "MultiLanguageTextData"
              }
            },
            "description": "Contains locale, key and value properties.",
            "_model": "LocalizedKeyValueData"
          }
        }
      },
      "description": "Contains basic fields describing the dynamic attributes.",
      "_model": "DynamicAttributesData"
    },
    "GroupIdData": {
      "type": "object",
      "required": [
        "groupCode"
      ],
      "properties": {
        "groupCode": {
          "type": "string",
          "description": "Group code that uniquely identifies the group per tenant.",
          "minLength": 1,
          "maxLength": 100,
          "pattern": "\\p{Alnum}[\\w-]*"
        }
      },
      "description": "Represents minimum set of fields that uniquely identifies Group.",
      "_model": "GroupIdData"
    },
    "ItemAttributesIdData": {
      "type": "object",
      "required": [
        "enterpriseUnitId",
        "itemCode"
      ],
      "properties": {
        "itemCode": {
          "type": "string",
          "description": "A unique item (unique per Tenant) code which is used to identify the item.",
          "minLength": 1,
          "maxLength": 40,
          "pattern": "\\p{Alnum}[\\w-]*"
        },
        "enterpriseUnitId": {
          "type": "string",
          "description": "Enterprise unit identifier for which the item attributes are defined."
        }
      },
      "description": "Id data that defines attributes associated with a catalog item at the enterprise unit level. For example, for retail catalog these attributes will represent store level item configuration.",
      "_model": "ItemAttributesIdData"
    },
    "ItemAttributesViewData": {
      "type": "object",
      "required": [
        "inVariety",
        "itemAttributesId",
        "status",
        "version"
      ],
      "properties": {
        "version": {
          "type": "integer",
          "format": "int64",
          "description": "Version (normally epoch time in millis) representing the version of the object. This field is used to avoid object overrides in environments that allow concurrent modification of data.",
          "minimum": 0
        },
        "inVariety": {
          "type": "boolean",
          "description": "Attribute that identifies whether the catalog item is generally available (in variety) in the respect enterprise unit (store, site, branch, etc.). If this attribute is set to false, then data synchronization logic for item catalog (specifically {@link ItemService#getSnapshot(com.ncr.nr1.catalog.common.GetSnapshotRequest)}) may takethis attribute into account for distributions that are requested in a context of an enterprise unit. In this case, the catalog items distributed to the enterprise unit are restricted only to those that have this attribute set to {@code true} in the item attributes."
        },
        "longDescription": {
          "type": "object",
          "properties": {
            "values": {
              "type": "array",
              "description": "Values containing entries per language (one entry per language is expected).",
              "items": {
                "type": "object",
                "required": [
                  "locale",
                  "value"
                ],
                "properties": {
                  "locale": {
                    "type": "string",
                    "description": "Locale specifies local language."
                  },
                  "value": {
                    "type": "string",
                    "description": "Value has range of the name."
                  }
                },
                "description": "Contains locale and value properties.",
                "_model": "LocalizedTextData"
              }
            }
          },
          "description": "Generic data type that is capable of holding text data in multiple languages.",
          "_model": "MultiLanguageTextData"
        },
        "shortDescription": {},
        "merchandiseCategory": {
          "type": "object",
          "required": [
            "nodeId"
          ],
          "properties": {
            "nodeId": {
              "type": "string",
              "description": "A unique code which is used to identify a node in hierarchy.",
              "minLength": 1,
              "maxLength": 120,
              "pattern": "\\p{Alnum}[\\w-]*"
            }
          },
          "description": "Data Object to identify a node in hierarchy uniquely.",
          "_model": "NodeIdData"
        },
        "status": {
          "type": "string",
          "description": "Status of the current item attributes. If set to INACTIVE, it means that item is not available for the specified unit. This approach allows to apply restrictions at the enterprise unit and also maintain information about the products that are 'sold' at a specific location.<br/>Supported types:<br/><ul><li>ACTIVE: Indicates that object is not active.</li><li>INACTIVE: Indicates that object is active.</li></ul>",
          "enum": [
            "INACTIVE",
            "ACTIVE"
          ],
          "properties": {
            "INACTIVE": {
              "type": "enumitem",
              "value": ""
            },
            "ACTIVE": {
              "type": "enumitem",
              "value": ""
            }
          },
          "enumitems": "INACTIVE,ACTIVE"
        },
        "dynamicAttributes": {
          "type": "array",
          "description": "Customer specific dynamic attributes.",
          "items": {
            "type": "object",
            "required": [
              "attributes",
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "minLength": 1,
                "maxLength": 64,
                "pattern": "\\p{Alnum}[\\w-]*"
              },
              "attributes": {
                "type": "array",
                "description": "Collection of key value data.",
                "items": {
                  "type": "object",
                  "required": [
                    "key"
                  ],
                  "properties": {
                    "key": {
                      "type": "string",
                      "description": "Key that identifies this key value pair."
                    },
                    "value": {
                      "type": "string",
                      "description": "Value associated with the key.",
                      "minLength": 1,
                      "maxLength": 512
                    },
                    "localizedValue": {
                      "type": "object",
                      "properties": {
                        "values": {
                          "type": "array",
                          "description": "Values containing entries per language (one entry per language is expected).",
                          "items": {
                            "type": "object",
                            "required": [
                              "locale",
                              "value"
                            ],
                            "properties": {
                              "locale": {
                                "type": "string",
                                "description": "Locale specifies local language."
                              },
                              "value": {
                                "type": "string",
                                "description": "Value has range of the name."
                              }
                            },
                            "description": "Contains locale and value properties.",
                            "_model": "LocalizedTextData"
                          }
                        }
                      },
                      "description": "Generic data type that is capable of holding text data in multiple languages.",
                      "_model": "MultiLanguageTextData"
                    }
                  },
                  "description": "Contains locale, key and value properties.",
                  "_model": "LocalizedKeyValueData"
                }
              }
            },
            "description": "Contains basic fields describing the dynamic attributes.",
            "_model": "DynamicAttributesData"
          }
        },
        "groups": {
          "type": "array",
          "description": "Collection of groups that represents group memberships of the catalog item (enterprise unit level).",
          "items": {
            "type": "object",
            "required": [
              "groupCode"
            ],
            "properties": {
              "groupCode": {
                "type": "string",
                "description": "Group code that uniquely identifies the group per tenant.",
                "minLength": 1,
                "maxLength": 100,
                "pattern": "\\p{Alnum}[\\w-]*"
              }
            },
            "description": "Represents minimum set of fields that uniquely identifies Group.",
            "_model": "GroupIdData"
          }
        },
        "linkGroups": {
          "type": "array",
          "description": "Collection of linked items that represents a logically connected group of the catalog items at the enterprise unit level). Linked item reference allows specifying additional attributes at the association level.",
          "items": {
            "type": "object",
            "required": [
              "linkGroupCode"
            ],
            "properties": {
              "linkGroupCode": {
                "type": "string",
                "description": "A unique (per tenant) link group code that identifies the link group.",
                "minLength": 1,
                "maxLength": 100,
                "pattern": "\\p{Alnum}[\\w-]*"
              }
            },
            "description": "Represents minimum set of fields that uniquely identify a link group.",
            "_model": "LinkGroupIdData"
          }
        },
        "imageUrls": {
          "type": "array",
          "items": {
            "type": "string",
            "_model": "string",
            "sample": "\"Diphthong\""
          }
        },
        "auditTrail": {
          "type": "object",
          "required": [
            "lastUpdated",
            "lastUpdatedByUser"
          ],
          "properties": {
            "lastUpdated": {
              "type": "string",
              "format": "date-time",
              "description": "Date when the object was last updated."
            },
            "lastUpdatedByUser": {
              "type": "string",
              "description": "User name of the user that updated the object."
            }
          },
          "description": "Audit related information that can be associated with objects.",
          "_model": "AuditTrailData"
        },
        "itemAttributesId": {
          "type": "object",
          "required": [
            "enterpriseUnitId",
            "itemCode"
          ],
          "properties": {
            "itemCode": {
              "type": "string",
              "description": "A unique item (unique per Tenant) code which is used to identify the item.",
              "minLength": 1,
              "maxLength": 40,
              "pattern": "\\p{Alnum}[\\w-]*"
            },
            "enterpriseUnitId": {
              "type": "string",
              "description": "Enterprise unit identifier for which the item attributes are defined."
            }
          },
          "description": "Id data that defines attributes associated with a catalog item at the enterprise unit level. For example, for retail catalog these attributes will represent store level item configuration.",
          "_model": "ItemAttributesIdData"
        }
      },
      "description": "Contains all of the fields of a catalog item attributes, including read-only system generated/assigned fields.",
      "_model": "ItemAttributesViewData"
    },
    "LinkGroupIdData": {
      "type": "object",
      "required": [
        "linkGroupCode"
      ],
      "properties": {
        "linkGroupCode": {
          "type": "string",
          "description": "A unique (per tenant) link group code that identifies the link group.",
          "minLength": 1,
          "maxLength": 100,
          "pattern": "\\p{Alnum}[\\w-]*"
        }
      },
      "description": "Represents minimum set of fields that uniquely identify a link group.",
      "_model": "LinkGroupIdData"
    },
    "LocalizedKeyValueData": {
      "type": "object",
      "required": [
        "key"
      ],
      "properties": {
        "key": {
          "type": "string",
          "description": "Key that identifies this key value pair."
        },
        "value": {
          "type": "string",
          "description": "Value associated with the key.",
          "minLength": 1,
          "maxLength": 512
        },
        "localizedValue": {
          "type": "object",
          "properties": {
            "values": {
              "type": "array",
              "description": "Values containing entries per language (one entry per language is expected).",
              "items": {
                "type": "object",
                "required": [
                  "locale",
                  "value"
                ],
                "properties": {
                  "locale": {
                    "type": "string",
                    "description": "Locale specifies local language."
                  },
                  "value": {
                    "type": "string",
                    "description": "Value has range of the name."
                  }
                },
                "description": "Contains locale and value properties.",
                "_model": "LocalizedTextData"
              }
            }
          },
          "description": "Generic data type that is capable of holding text data in multiple languages.",
          "_model": "MultiLanguageTextData"
        }
      },
      "description": "Contains locale, key and value properties.",
      "_model": "LocalizedKeyValueData"
    },
    "LocalizedTextData": {
      "type": "object",
      "required": [
        "locale",
        "value"
      ],
      "properties": {
        "locale": {
          "type": "string",
          "description": "Locale specifies local language."
        },
        "value": {
          "type": "string",
          "description": "Value has range of the name."
        }
      },
      "description": "Contains locale and value properties.",
      "_model": "LocalizedTextData"
    },
    "MultiLanguageTextData": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "description": "Values containing entries per language (one entry per language is expected).",
          "items": {
            "type": "object",
            "required": [
              "locale",
              "value"
            ],
            "properties": {
              "locale": {
                "type": "string",
                "description": "Locale specifies local language."
              },
              "value": {
                "type": "string",
                "description": "Value has range of the name."
              }
            },
            "description": "Contains locale and value properties.",
            "_model": "LocalizedTextData"
          }
        }
      },
      "description": "Generic data type that is capable of holding text data in multiple languages.",
      "_model": "MultiLanguageTextData"
    },
    "NodeIdData": {
      "type": "object",
      "required": [
        "nodeId"
      ],
      "properties": {
        "nodeId": {
          "type": "string",
          "description": "A unique code which is used to identify a node in hierarchy.",
          "minLength": 1,
          "maxLength": 120,
          "pattern": "\\p{Alnum}[\\w-]*"
        }
      },
      "description": "Data Object to identify a node in hierarchy uniquely.",
      "_model": "NodeIdData"
    },
    "ItemAttributesData": {
      "type": "object",
      "required": [
        "inVariety",
        "status",
        "version"
      ],
      "properties": {
        "version": {
          "type": "integer",
          "format": "int64",
          "description": "Version (normally epoch time in millis) representing the version of the object. This field is used to avoid object overrides in environments that allow concurrent modification of data.",
          "minimum": 0
        },
        "inVariety": {
          "type": "boolean",
          "description": "Attribute that identifies whether the catalog item is generally available (in variety) in the respect enterprise unit (store, site, branch, etc.). If this attribute is set to false, then data synchronization logic for item catalog (specifically {@link ItemService#getSnapshot(com.ncr.nr1.catalog.common.GetSnapshotRequest)}) may takethis attribute into account for distributions that are requested in a context of an enterprise unit. In this case, the catalog items distributed to the enterprise unit are restricted only to those that have this attribute set to {@code true} in the item attributes."
        },
        "longDescription": {
          "type": "object",
          "properties": {
            "values": {
              "type": "array",
              "description": "Values containing entries per language (one entry per language is expected).",
              "items": {
                "type": "object",
                "required": [
                  "locale",
                  "value"
                ],
                "properties": {
                  "locale": {
                    "type": "string",
                    "description": "Locale specifies local language."
                  },
                  "value": {
                    "type": "string",
                    "description": "Value has range of the name."
                  }
                },
                "description": "Contains locale and value properties.",
                "_model": "LocalizedTextData"
              }
            }
          },
          "description": "Generic data type that is capable of holding text data in multiple languages.",
          "_model": "MultiLanguageTextData"
        },
        "shortDescription": {},
        "merchandiseCategory": {
          "type": "object",
          "required": [
            "nodeId"
          ],
          "properties": {
            "nodeId": {
              "type": "string",
              "description": "A unique code which is used to identify a node in hierarchy.",
              "minLength": 1,
              "maxLength": 120,
              "pattern": "\\p{Alnum}[\\w-]*"
            }
          },
          "description": "Data Object to identify a node in hierarchy uniquely.",
          "_model": "NodeIdData"
        },
        "status": {
          "type": "string",
          "description": "Status of the current item attributes. If set to INACTIVE, it means that item is not available for the specified unit. This approach allows to apply restrictions at the enterprise unit and also maintain information about the products that are 'sold' at a specific location.<br/>Supported types:<br/><ul><li>ACTIVE: Indicates that object is not active.</li><li>INACTIVE: Indicates that object is active.</li></ul>",
          "enum": [
            "INACTIVE",
            "ACTIVE"
          ],
          "properties": {
            "INACTIVE": {
              "type": "enumitem",
              "value": ""
            },
            "ACTIVE": {
              "type": "enumitem",
              "value": ""
            }
          },
          "enumitems": "INACTIVE,ACTIVE"
        },
        "dynamicAttributes": {
          "type": "array",
          "description": "Customer specific dynamic attributes.",
          "items": {
            "type": "object",
            "required": [
              "attributes",
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "minLength": 1,
                "maxLength": 64,
                "pattern": "\\p{Alnum}[\\w-]*"
              },
              "attributes": {
                "type": "array",
                "description": "Collection of key value data.",
                "items": {
                  "type": "object",
                  "required": [
                    "key"
                  ],
                  "properties": {
                    "key": {
                      "type": "string",
                      "description": "Key that identifies this key value pair."
                    },
                    "value": {
                      "type": "string",
                      "description": "Value associated with the key.",
                      "minLength": 1,
                      "maxLength": 512
                    },
                    "localizedValue": {
                      "type": "object",
                      "properties": {
                        "values": {
                          "type": "array",
                          "description": "Values containing entries per language (one entry per language is expected).",
                          "items": {
                            "type": "object",
                            "required": [
                              "locale",
                              "value"
                            ],
                            "properties": {
                              "locale": {
                                "type": "string",
                                "description": "Locale specifies local language."
                              },
                              "value": {
                                "type": "string",
                                "description": "Value has range of the name."
                              }
                            },
                            "description": "Contains locale and value properties.",
                            "_model": "LocalizedTextData"
                          }
                        }
                      },
                      "description": "Generic data type that is capable of holding text data in multiple languages.",
                      "_model": "MultiLanguageTextData"
                    }
                  },
                  "description": "Contains locale, key and value properties.",
                  "_model": "LocalizedKeyValueData"
                }
              }
            },
            "description": "Contains basic fields describing the dynamic attributes.",
            "_model": "DynamicAttributesData"
          }
        },
        "groups": {
          "type": "array",
          "description": "Collection of groups that represents group memberships of the catalog item (enterprise unit level).",
          "items": {
            "type": "object",
            "required": [
              "groupCode"
            ],
            "properties": {
              "groupCode": {
                "type": "string",
                "description": "Group code that uniquely identifies the group per tenant.",
                "minLength": 1,
                "maxLength": 100,
                "pattern": "\\p{Alnum}[\\w-]*"
              }
            },
            "description": "Represents minimum set of fields that uniquely identifies Group.",
            "_model": "GroupIdData"
          }
        },
        "linkGroups": {
          "type": "array",
          "description": "Collection of linked items that represents a logically connected group of the catalog items at the enterprise unit level). Linked item reference allows specifying additional attributes at the association level.",
          "items": {
            "type": "object",
            "required": [
              "linkGroupCode"
            ],
            "properties": {
              "linkGroupCode": {
                "type": "string",
                "description": "A unique (per tenant) link group code that identifies the link group.",
                "minLength": 1,
                "maxLength": 100,
                "pattern": "\\p{Alnum}[\\w-]*"
              }
            },
            "description": "Represents minimum set of fields that uniquely identify a link group.",
            "_model": "LinkGroupIdData"
          }
        },
        "imageUrls": {
          "type": "array",
          "items": {
            "type": "string",
            "_model": "string",
            "sample": "\"Bamboo\""
          }
        }
      },
      "description": "Defines complete set of properties for item attributes.",
      "_model": "ItemAttributesData"
    },
    "GetItemAttributesResponse": {
      "type": "object",
      "properties": {
        "itemAttributes": {
          "type": "array",
          "description": "Objects in the page of search results.",
          "items": {
            "type": "object",
            "required": [
              "inVariety",
              "itemAttributesId",
              "status",
              "version"
            ],
            "properties": {
              "version": {
                "type": "integer",
                "format": "int64",
                "description": "Version (normally epoch time in millis) representing the version of the object. This field is used to avoid object overrides in environments that allow concurrent modification of data.",
                "minimum": 0
              },
              "inVariety": {
                "type": "boolean",
                "description": "Attribute that identifies whether the catalog item is generally available (in variety) in the respect enterprise unit (store, site, branch, etc.). If this attribute is set to false, then data synchronization logic for item catalog (specifically {@link ItemService#getSnapshot(com.ncr.nr1.catalog.common.GetSnapshotRequest)}) may takethis attribute into account for distributions that are requested in a context of an enterprise unit. In this case, the catalog items distributed to the enterprise unit are restricted only to those that have this attribute set to {@code true} in the item attributes."
              },
              "longDescription": {
                "type": "object",
                "properties": {
                  "values": {
                    "type": "array",
                    "description": "Values containing entries per language (one entry per language is expected).",
                    "items": {
                      "type": "object",
                      "required": [
                        "locale",
                        "value"
                      ],
                      "properties": {
                        "locale": {
                          "type": "string",
                          "description": "Locale specifies local language."
                        },
                        "value": {
                          "type": "string",
                          "description": "Value has range of the name."
                        }
                      },
                      "description": "Contains locale and value properties.",
                      "_model": "LocalizedTextData"
                    }
                  }
                },
                "description": "Generic data type that is capable of holding text data in multiple languages.",
                "_model": "MultiLanguageTextData"
              },
              "shortDescription": {},
              "merchandiseCategory": {
                "type": "object",
                "required": [
                  "nodeId"
                ],
                "properties": {
                  "nodeId": {
                    "type": "string",
                    "description": "A unique code which is used to identify a node in hierarchy.",
                    "minLength": 1,
                    "maxLength": 120,
                    "pattern": "\\p{Alnum}[\\w-]*"
                  }
                },
                "description": "Data Object to identify a node in hierarchy uniquely.",
                "_model": "NodeIdData"
              },
              "status": {
                "type": "string",
                "description": "Status of the current item attributes. If set to INACTIVE, it means that item is not available for the specified unit. This approach allows to apply restrictions at the enterprise unit and also maintain information about the products that are 'sold' at a specific location.<br/>Supported types:<br/><ul><li>ACTIVE: Indicates that object is not active.</li><li>INACTIVE: Indicates that object is active.</li></ul>",
                "enum": [
                  "INACTIVE",
                  "ACTIVE"
                ],
                "properties": {
                  "INACTIVE": {
                    "type": "enumitem",
                    "value": ""
                  },
                  "ACTIVE": {
                    "type": "enumitem",
                    "value": ""
                  }
                },
                "enumitems": "INACTIVE,ACTIVE"
              },
              "dynamicAttributes": {
                "type": "array",
                "description": "Customer specific dynamic attributes.",
                "items": {
                  "type": "object",
                  "required": [
                    "attributes",
                    "type"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 64,
                      "pattern": "\\p{Alnum}[\\w-]*"
                    },
                    "attributes": {
                      "type": "array",
                      "description": "Collection of key value data.",
                      "items": {
                        "type": "object",
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "type": "string",
                            "description": "Key that identifies this key value pair."
                          },
                          "value": {
                            "type": "string",
                            "description": "Value associated with the key.",
                            "minLength": 1,
                            "maxLength": 512
                          },
                          "localizedValue": {
                            "type": "object",
                            "properties": {
                              "values": {
                                "type": "array",
                                "description": "Values containing entries per language (one entry per language is expected).",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "locale",
                                    "value"
                                  ],
                                  "properties": {
                                    "locale": {
                                      "type": "string",
                                      "description": "Locale specifies local language."
                                    },
                                    "value": {
                                      "type": "string",
                                      "description": "Value has range of the name."
                                    }
                                  },
                                  "description": "Contains locale and value properties.",
                                  "_model": "LocalizedTextData"
                                }
                              }
                            },
                            "description": "Generic data type that is capable of holding text data in multiple languages.",
                            "_model": "MultiLanguageTextData"
                          }
                        },
                        "description": "Contains locale, key and value properties.",
                        "_model": "LocalizedKeyValueData"
                      }
                    }
                  },
                  "description": "Contains basic fields describing the dynamic attributes.",
                  "_model": "DynamicAttributesData"
                }
              },
              "groups": {
                "type": "array",
                "description": "Collection of groups that represents group memberships of the catalog item (enterprise unit level).",
                "items": {
                  "type": "object",
                  "required": [
                    "groupCode"
                  ],
                  "properties": {
                    "groupCode": {
                      "type": "string",
                      "description": "Group code that uniquely identifies the group per tenant.",
                      "minLength": 1,
                      "maxLength": 100,
                      "pattern": "\\p{Alnum}[\\w-]*"
                    }
                  },
                  "description": "Represents minimum set of fields that uniquely identifies Group.",
                  "_model": "GroupIdData"
                }
              },
              "linkGroups": {
                "type": "array",
                "description": "Collection of linked items that represents a logically connected group of the catalog items at the enterprise unit level). Linked item reference allows specifying additional attributes at the association level.",
                "items": {
                  "type": "object",
                  "required": [
                    "linkGroupCode"
                  ],
                  "properties": {
                    "linkGroupCode": {
                      "type": "string",
                      "description": "A unique (per tenant) link group code that identifies the link group.",
                      "minLength": 1,
                      "maxLength": 100,
                      "pattern": "\\p{Alnum}[\\w-]*"
                    }
                  },
                  "description": "Represents minimum set of fields that uniquely identify a link group.",
                  "_model": "LinkGroupIdData"
                }
              },
              "imageUrls": {
                "type": "array",
                "items": {
                  "type": "string",
                  "_model": "string",
                  "sample": "\"Diphthong\""
                }
              },
              "auditTrail": {
                "type": "object",
                "required": [
                  "lastUpdated",
                  "lastUpdatedByUser"
                ],
                "properties": {
                  "lastUpdated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date when the object was last updated."
                  },
                  "lastUpdatedByUser": {
                    "type": "string",
                    "description": "User name of the user that updated the object."
                  }
                },
                "description": "Audit related information that can be associated with objects.",
                "_model": "AuditTrailData"
              },
              "itemAttributesId": {
                "type": "object",
                "required": [
                  "enterpriseUnitId",
                  "itemCode"
                ],
                "properties": {
                  "itemCode": {
                    "type": "string",
                    "description": "A unique item (unique per Tenant) code which is used to identify the item.",
                    "minLength": 1,
                    "maxLength": 40,
                    "pattern": "\\p{Alnum}[\\w-]*"
                  },
                  "enterpriseUnitId": {
                    "type": "string",
                    "description": "Enterprise unit identifier for which the item attributes are defined."
                  }
                },
                "description": "Id data that defines attributes associated with a catalog item at the enterprise unit level. For example, for retail catalog these attributes will represent store level item configuration.",
                "_model": "ItemAttributesIdData"
              }
            },
            "description": "Contains all of the fields of a catalog item attributes, including read-only system generated/assigned fields.",
            "_model": "ItemAttributesViewData"
          }
        }
      },
      "description": "A collection of objects that represents attributes associated with catalog items at the enterprise unit level."
    },
    "ItemIdCollectionData": {
      "type": "object",
      "properties": {
        "itemIds": {
          "type": "array",
          "description": "Maximum number of identifiers to support in the request.",
          "items": {
            "type": "object",
            "required": [
              "itemCode"
            ],
            "properties": {
              "itemCode": {
                "type": "string",
                "description": "A unique item (unique per Tenant) code which is used to identify the item.",
                "minLength": 1,
                "maxLength": 40,
                "pattern": "\\p{Alnum}[\\w-]*"
              }
            },
            "description": "Data object to identify an item uniquely.",
            "_model": "ItemIdData"
          }
        }
      },
      "description": "A request to support bulk get of catalog item attributes defined at the enterprise unit level."
    },
    "ItemIdData": {
      "type": "object",
      "required": [
        "itemCode"
      ],
      "properties": {
        "itemCode": {
          "type": "string",
          "description": "A unique item (unique per Tenant) code which is used to identify the item.",
          "minLength": 1,
          "maxLength": 40,
          "pattern": "\\p{Alnum}[\\w-]*"
        }
      },
      "description": "Data object to identify an item uniquely.",
      "_model": "ItemIdData"
    },
    "GetItemAttributesSnapshotResponse": {
      "type": "object",
      "properties": {
        "snapshotVersion": {
          "type": "integer",
          "format": "int64"
        },
        "snapshot": {
          "type": "array",
          "description": "Objects in the page of search results.",
          "items": {
            "type": "object",
            "required": [
              "inVariety",
              "itemAttributesId",
              "status",
              "version"
            ],
            "properties": {
              "version": {
                "type": "integer",
                "format": "int64",
                "description": "Version (normally epoch time in millis) representing the version of the object. This field is used to avoid object overrides in environments that allow concurrent modification of data.",
                "minimum": 0
              },
              "inVariety": {
                "type": "boolean",
                "description": "Attribute that identifies whether the catalog item is generally available (in variety) in the respect enterprise unit (store, site, branch, etc.). If this attribute is set to false, then data synchronization logic for item catalog (specifically {@link ItemService#getSnapshot(com.ncr.nr1.catalog.common.GetSnapshotRequest)}) may takethis attribute into account for distributions that are requested in a context of an enterprise unit. In this case, the catalog items distributed to the enterprise unit are restricted only to those that have this attribute set to {@code true} in the item attributes."
              },
              "longDescription": {
                "type": "object",
                "properties": {
                  "values": {
                    "type": "array",
                    "description": "Values containing entries per language (one entry per language is expected).",
                    "items": {
                      "type": "object",
                      "required": [
                        "locale",
                        "value"
                      ],
                      "properties": {
                        "locale": {
                          "type": "string",
                          "description": "Locale specifies local language."
                        },
                        "value": {
                          "type": "string",
                          "description": "Value has range of the name."
                        }
                      },
                      "description": "Contains locale and value properties.",
                      "_model": "LocalizedTextData"
                    }
                  }
                },
                "description": "Generic data type that is capable of holding text data in multiple languages.",
                "_model": "MultiLanguageTextData"
              },
              "shortDescription": {},
              "merchandiseCategory": {
                "type": "object",
                "required": [
                  "nodeId"
                ],
                "properties": {
                  "nodeId": {
                    "type": "string",
                    "description": "A unique code which is used to identify a node in hierarchy.",
                    "minLength": 1,
                    "maxLength": 120,
                    "pattern": "\\p{Alnum}[\\w-]*"
                  }
                },
                "description": "Data Object to identify a node in hierarchy uniquely.",
                "_model": "NodeIdData"
              },
              "status": {
                "type": "string",
                "description": "Status of the current item attributes. If set to INACTIVE, it means that item is not available for the specified unit. This approach allows to apply restrictions at the enterprise unit and also maintain information about the products that are 'sold' at a specific location.<br/>Supported types:<br/><ul><li>ACTIVE: Indicates that object is not active.</li><li>INACTIVE: Indicates that object is active.</li></ul>",
                "enum": [
                  "INACTIVE",
                  "ACTIVE"
                ],
                "properties": {
                  "INACTIVE": {
                    "type": "enumitem",
                    "value": ""
                  },
                  "ACTIVE": {
                    "type": "enumitem",
                    "value": ""
                  }
                },
                "enumitems": "INACTIVE,ACTIVE"
              },
              "dynamicAttributes": {
                "type": "array",
                "description": "Customer specific dynamic attributes.",
                "items": {
                  "type": "object",
                  "required": [
                    "attributes",
                    "type"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 64,
                      "pattern": "\\p{Alnum}[\\w-]*"
                    },
                    "attributes": {
                      "type": "array",
                      "description": "Collection of key value data.",
                      "items": {
                        "type": "object",
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "type": "string",
                            "description": "Key that identifies this key value pair."
                          },
                          "value": {
                            "type": "string",
                            "description": "Value associated with the key.",
                            "minLength": 1,
                            "maxLength": 512
                          },
                          "localizedValue": {
                            "type": "object",
                            "properties": {
                              "values": {
                                "type": "array",
                                "description": "Values containing entries per language (one entry per language is expected).",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "locale",
                                    "value"
                                  ],
                                  "properties": {
                                    "locale": {
                                      "type": "string",
                                      "description": "Locale specifies local language."
                                    },
                                    "value": {
                                      "type": "string",
                                      "description": "Value has range of the name."
                                    }
                                  },
                                  "description": "Contains locale and value properties.",
                                  "_model": "LocalizedTextData"
                                }
                              }
                            },
                            "description": "Generic data type that is capable of holding text data in multiple languages.",
                            "_model": "MultiLanguageTextData"
                          }
                        },
                        "description": "Contains locale, key and value properties.",
                        "_model": "LocalizedKeyValueData"
                      }
                    }
                  },
                  "description": "Contains basic fields describing the dynamic attributes.",
                  "_model": "DynamicAttributesData"
                }
              },
              "groups": {
                "type": "array",
                "description": "Collection of groups that represents group memberships of the catalog item (enterprise unit level).",
                "items": {
                  "type": "object",
                  "required": [
                    "groupCode"
                  ],
                  "properties": {
                    "groupCode": {
                      "type": "string",
                      "description": "Group code that uniquely identifies the group per tenant.",
                      "minLength": 1,
                      "maxLength": 100,
                      "pattern": "\\p{Alnum}[\\w-]*"
                    }
                  },
                  "description": "Represents minimum set of fields that uniquely identifies Group.",
                  "_model": "GroupIdData"
                }
              },
              "linkGroups": {
                "type": "array",
                "description": "Collection of linked items that represents a logically connected group of the catalog items at the enterprise unit level). Linked item reference allows specifying additional attributes at the association level.",
                "items": {
                  "type": "object",
                  "required": [
                    "linkGroupCode"
                  ],
                  "properties": {
                    "linkGroupCode": {
                      "type": "string",
                      "description": "A unique (per tenant) link group code that identifies the link group.",
                      "minLength": 1,
                      "maxLength": 100,
                      "pattern": "\\p{Alnum}[\\w-]*"
                    }
                  },
                  "description": "Represents minimum set of fields that uniquely identify a link group.",
                  "_model": "LinkGroupIdData"
                }
              },
              "imageUrls": {
                "type": "array",
                "items": {
                  "type": "string",
                  "_model": "string",
                  "sample": "\"Diphthong\""
                }
              },
              "auditTrail": {
                "type": "object",
                "required": [
                  "lastUpdated",
                  "lastUpdatedByUser"
                ],
                "properties": {
                  "lastUpdated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date when the object was last updated."
                  },
                  "lastUpdatedByUser": {
                    "type": "string",
                    "description": "User name of the user that updated the object."
                  }
                },
                "description": "Audit related information that can be associated with objects.",
                "_model": "AuditTrailData"
              },
              "itemAttributesId": {
                "type": "object",
                "required": [
                  "enterpriseUnitId",
                  "itemCode"
                ],
                "properties": {
                  "itemCode": {
                    "type": "string",
                    "description": "A unique item (unique per Tenant) code which is used to identify the item.",
                    "minLength": 1,
                    "maxLength": 40,
                    "pattern": "\\p{Alnum}[\\w-]*"
                  },
                  "enterpriseUnitId": {
                    "type": "string",
                    "description": "Enterprise unit identifier for which the item attributes are defined."
                  }
                },
                "description": "Id data that defines attributes associated with a catalog item at the enterprise unit level. For example, for retail catalog these attributes will represent store level item configuration.",
                "_model": "ItemAttributesIdData"
              }
            },
            "description": "Contains all of the fields of a catalog item attributes, including read-only system generated/assigned fields.",
            "_model": "ItemAttributesViewData"
          }
        }
      },
      "description": "List of Item-Attribute records for get request."
    },
    "KeyValueData": {
      "type": "object",
      "required": [
        "key"
      ],
      "properties": {
        "key": {
          "type": "string",
          "description": "Key that identifies this key value pair."
        },
        "value": {
          "type": "string",
          "description": "Value associated with the key.",
          "minLength": 1,
          "maxLength": 512
        }
      },
      "description": "A simple key-value pair",
      "_model": "KeyValueData"
    },
    "MessageData": {
      "type": "object",
      "required": [
        "topicId"
      ],
      "properties": {
        "attributes": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "key"
            ],
            "properties": {
              "key": {
                "type": "string",
                "description": "Key that identifies this key value pair."
              },
              "value": {
                "type": "string",
                "description": "Value associated with the key.",
                "minLength": 1,
                "maxLength": 512
              }
            },
            "description": "A simple key-value pair",
            "_model": "KeyValueData"
          }
        },
        "topicId": {
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "type": "string",
              "minLength": 1,
              "maxLength": 256,
              "pattern": "\\p{Alpha}[\\w-]*"
            }
          },
          "_model": "TopicIdData"
        },
        "payload": {
          "type": "string",
          "minLength": 1,
          "maxLength": 1000000
        }
      }
    },
    "TopicIdData": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "minLength": 1,
          "maxLength": 256,
          "pattern": "\\p{Alpha}[\\w-]*"
        }
      },
      "_model": "TopicIdData"
    },
    "NodeViewData": {
      "type": "object",
      "required": [
        "nodeCode",
        "nodeId",
        "status",
        "title",
        "version"
      ],
      "properties": {
        "version": {
          "type": "integer",
          "format": "int64",
          "description": "Version (normally epoch time in millis) representing the version of the object. This field is used to avoid object overrides in environments that allow concurrent modification of data.",
          "minimum": 0
        },
        "nodeCode": {
          "type": "string",
          "description": "Language independent code which is used to identify a node in hierarchy. Expected to be human-readable, non-localized identifier unique in the scope of its parent.",
          "minLength": 1,
          "maxLength": 100,
          "pattern": "\\p{Alnum}[\\w-]*"
        },
        "tag": {
          "type": "string",
          "description": "Tag to mark the node. This tag is expected to be understood by the client.",
          "minLength": 1,
          "maxLength": 50
        },
        "departmentNode": {
          "type": "boolean",
          "description": "Indicates if this node represents a department."
        },
        "status": {
          "type": "string",
          "description": "Node status. If set to inactive, indicates that the node is 'deleted' and should not be assigned to the catalog items.<br/>Supported types:<br/><ul><li>ACTIVE: Indicates that object is not active.</li><li>INACTIVE: Indicates that object is active.</li></ul>",
          "enum": [
            "INACTIVE",
            "ACTIVE"
          ],
          "properties": {
            "INACTIVE": {
              "type": "enumitem",
              "value": ""
            },
            "ACTIVE": {
              "type": "enumitem",
              "value": ""
            }
          },
          "enumitems": "INACTIVE,ACTIVE"
        },
        "title": {
          "type": "object",
          "properties": {
            "values": {
              "type": "array",
              "description": "Values containing entries per language (one entry per language is expected).",
              "items": {
                "type": "object",
                "required": [
                  "locale",
                  "value"
                ],
                "properties": {
                  "locale": {
                    "type": "string",
                    "description": "Locale specifies local language."
                  },
                  "value": {
                    "type": "string",
                    "description": "Value has range of the name."
                  }
                },
                "description": "Contains locale and value properties.",
                "_model": "LocalizedTextData"
              }
            }
          },
          "description": "Generic data type that is capable of holding text data in multiple languages.",
          "_model": "MultiLanguageTextData"
        },
        "nodeId": {
          "type": "object",
          "required": [
            "nodeId"
          ],
          "properties": {
            "nodeId": {
              "type": "string",
              "description": "A unique code which is used to identify a node in hierarchy.",
              "minLength": 1,
              "maxLength": 120,
              "pattern": "\\p{Alnum}[\\w-]*"
            }
          },
          "description": "Data Object to identify a node in hierarchy uniquely.",
          "_model": "NodeIdData"
        },
        "parentId": {},
        "auditTrail": {
          "type": "object",
          "required": [
            "lastUpdated",
            "lastUpdatedByUser"
          ],
          "properties": {
            "lastUpdated": {
              "type": "string",
              "format": "date-time",
              "description": "Date when the object was last updated."
            },
            "lastUpdatedByUser": {
              "type": "string",
              "description": "User name of the user that updated the object."
            }
          },
          "description": "Audit related information that can be associated with objects.",
          "_model": "AuditTrailData"
        }
      },
      "description": "Contains all of the fields of a category node, including read-only system generated/assigned fields.",
      "_model": "NodeViewData"
    },
    "FindNodesListResponse": {
      "type": "object",
      "properties": {
        "nodes": {
          "type": "array",
          "description": "Node objects that represent a single page to deliver in response to the client",
          "items": {
            "type": "object",
            "required": [
              "nodeCode",
              "nodeId",
              "status",
              "title",
              "version"
            ],
            "properties": {
              "version": {
                "type": "integer",
                "format": "int64",
                "description": "Version (normally epoch time in millis) representing the version of the object. This field is used to avoid object overrides in environments that allow concurrent modification of data.",
                "minimum": 0
              },
              "nodeCode": {
                "type": "string",
                "description": "Language independent code which is used to identify a node in hierarchy. Expected to be human-readable, non-localized identifier unique in the scope of its parent.",
                "minLength": 1,
                "maxLength": 100,
                "pattern": "\\p{Alnum}[\\w-]*"
              },
              "tag": {
                "type": "string",
                "description": "Tag to mark the node. This tag is expected to be understood by the client.",
                "minLength": 1,
                "maxLength": 50
              },
              "departmentNode": {
                "type": "boolean",
                "description": "Indicates if this node represents a department."
              },
              "status": {
                "type": "string",
                "description": "Node status. If set to inactive, indicates that the node is 'deleted' and should not be assigned to the catalog items.<br/>Supported types:<br/><ul><li>ACTIVE: Indicates that object is not active.</li><li>INACTIVE: Indicates that object is active.</li></ul>",
                "enum": [
                  "INACTIVE",
                  "ACTIVE"
                ],
                "properties": {
                  "INACTIVE": {
                    "type": "enumitem",
                    "value": ""
                  },
                  "ACTIVE": {
                    "type": "enumitem",
                    "value": ""
                  }
                },
                "enumitems": "INACTIVE,ACTIVE"
              },
              "nodeId": {
                "type": "object",
                "required": [
                  "nodeId"
                ],
                "properties": {
                  "nodeId": {
                    "type": "string",
                    "description": "A unique code which is used to identify a node in hierarchy.",
                    "minLength": 1,
                    "maxLength": 120,
                    "pattern": "\\p{Alnum}[\\w-]*"
                  }
                },
                "description": "Data Object to identify a node in hierarchy uniquely.",
                "_model": "NodeIdData"
              },
              "parentId": {},
              "title": {
                "type": "object",
                "required": [
                  "locale",
                  "value"
                ],
                "properties": {
                  "locale": {
                    "type": "string",
                    "description": "Locale specifies local language."
                  },
                  "value": {
                    "type": "string",
                    "description": "Value has range of the name."
                  }
                },
                "description": "Contains locale and value properties.",
                "_model": "LocalizedTextData"
              }
            },
            "description": "Basic view data that can be used to returned in response to the search operations.",
            "_model": "NodeBasicViewData"
          }
        }
      },
      "description": "Response object containing a page of node objects."
    },
    "NodeBasicViewData": {
      "type": "object",
      "required": [
        "nodeCode",
        "nodeId",
        "status",
        "title",
        "version"
      ],
      "properties": {
        "version": {
          "type": "integer",
          "format": "int64",
          "description": "Version (normally epoch time in millis) representing the version of the object. This field is used to avoid object overrides in environments that allow concurrent modification of data.",
          "minimum": 0
        },
        "nodeCode": {
          "type": "string",
          "description": "Language independent code which is used to identify a node in hierarchy. Expected to be human-readable, non-localized identifier unique in the scope of its parent.",
          "minLength": 1,
          "maxLength": 100,
          "pattern": "\\p{Alnum}[\\w-]*"
        },
        "tag": {
          "type": "string",
          "description": "Tag to mark the node. This tag is expected to be understood by the client.",
          "minLength": 1,
          "maxLength": 50
        },
        "departmentNode": {
          "type": "boolean",
          "description": "Indicates if this node represents a department."
        },
        "status": {
          "type": "string",
          "description": "Node status. If set to inactive, indicates that the node is 'deleted' and should not be assigned to the catalog items.<br/>Supported types:<br/><ul><li>ACTIVE: Indicates that object is not active.</li><li>INACTIVE: Indicates that object is active.</li></ul>",
          "enum": [
            "INACTIVE",
            "ACTIVE"
          ],
          "properties": {
            "INACTIVE": {
              "type": "enumitem",
              "value": ""
            },
            "ACTIVE": {
              "type": "enumitem",
              "value": ""
            }
          },
          "enumitems": "INACTIVE,ACTIVE"
        },
        "nodeId": {
          "type": "object",
          "required": [
            "nodeId"
          ],
          "properties": {
            "nodeId": {
              "type": "string",
              "description": "A unique code which is used to identify a node in hierarchy.",
              "minLength": 1,
              "maxLength": 120,
              "pattern": "\\p{Alnum}[\\w-]*"
            }
          },
          "description": "Data Object to identify a node in hierarchy uniquely.",
          "_model": "NodeIdData"
        },
        "parentId": {},
        "title": {
          "type": "object",
          "required": [
            "locale",
            "value"
          ],
          "properties": {
            "locale": {
              "type": "string",
              "description": "Locale specifies local language."
            },
            "value": {
              "type": "string",
              "description": "Value has range of the name."
            }
          },
          "description": "Contains locale and value properties.",
          "_model": "LocalizedTextData"
        }
      },
      "description": "Basic view data that can be used to returned in response to the search operations.",
      "_model": "NodeBasicViewData"
    },
    "GetNodesSnapshotResponse": {
      "type": "object",
      "properties": {
        "snapshotVersion": {
          "type": "integer",
          "format": "int64"
        },
        "snapshot": {
          "type": "array",
          "description": "The actual content of the snapshot.",
          "items": {
            "type": "object",
            "required": [
              "nodeCode",
              "nodeId",
              "status",
              "title",
              "version"
            ],
            "properties": {
              "version": {
                "type": "integer",
                "format": "int64",
                "description": "Version (normally epoch time in millis) representing the version of the object. This field is used to avoid object overrides in environments that allow concurrent modification of data.",
                "minimum": 0
              },
              "nodeCode": {
                "type": "string",
                "description": "Language independent code which is used to identify a node in hierarchy. Expected to be human-readable, non-localized identifier unique in the scope of its parent.",
                "minLength": 1,
                "maxLength": 100,
                "pattern": "\\p{Alnum}[\\w-]*"
              },
              "tag": {
                "type": "string",
                "description": "Tag to mark the node. This tag is expected to be understood by the client.",
                "minLength": 1,
                "maxLength": 50
              },
              "departmentNode": {
                "type": "boolean",
                "description": "Indicates if this node represents a department."
              },
              "status": {
                "type": "string",
                "description": "Node status. If set to inactive, indicates that the node is 'deleted' and should not be assigned to the catalog items.<br/>Supported types:<br/><ul><li>ACTIVE: Indicates that object is not active.</li><li>INACTIVE: Indicates that object is active.</li></ul>",
                "enum": [
                  "INACTIVE",
                  "ACTIVE"
                ],
                "properties": {
                  "INACTIVE": {
                    "type": "enumitem",
                    "value": ""
                  },
                  "ACTIVE": {
                    "type": "enumitem",
                    "value": ""
                  }
                },
                "enumitems": "INACTIVE,ACTIVE"
              },
              "title": {
                "type": "object",
                "properties": {
                  "values": {
                    "type": "array",
                    "description": "Values containing entries per language (one entry per language is expected).",
                    "items": {
                      "type": "object",
                      "required": [
                        "locale",
                        "value"
                      ],
                      "properties": {
                        "locale": {
                          "type": "string",
                          "description": "Locale specifies local language."
                        },
                        "value": {
                          "type": "string",
                          "description": "Value has range of the name."
                        }
                      },
                      "description": "Contains locale and value properties.",
                      "_model": "LocalizedTextData"
                    }
                  }
                },
                "description": "Generic data type that is capable of holding text data in multiple languages.",
                "_model": "MultiLanguageTextData"
              },
              "nodeId": {
                "type": "object",
                "required": [
                  "nodeId"
                ],
                "properties": {
                  "nodeId": {
                    "type": "string",
                    "description": "A unique code which is used to identify a node in hierarchy.",
                    "minLength": 1,
                    "maxLength": 120,
                    "pattern": "\\p{Alnum}[\\w-]*"
                  }
                },
                "description": "Data Object to identify a node in hierarchy uniquely.",
                "_model": "NodeIdData"
              },
              "parentId": {},
              "auditTrail": {
                "type": "object",
                "required": [
                  "lastUpdated",
                  "lastUpdatedByUser"
                ],
                "properties": {
                  "lastUpdated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date when the object was last updated."
                  },
                  "lastUpdatedByUser": {
                    "type": "string",
                    "description": "User name of the user that updated the object."
                  }
                },
                "description": "Audit related information that can be associated with objects.",
                "_model": "AuditTrailData"
              }
            },
            "description": "Contains all of the fields of a category node, including read-only system generated/assigned fields.",
            "_model": "NodeViewData"
          }
        }
      },
      "description": "Response object containing snapshot data with catalog hierarchies."
    },
    "NodeWriteData": {
      "type": "object",
      "required": [
        "nodeCode",
        "nodeId",
        "status",
        "title",
        "version"
      ],
      "properties": {
        "version": {
          "type": "integer",
          "format": "int64",
          "description": "Version (normally epoch time in millis) representing the version of the object. This field is used to avoid object overrides in environments that allow concurrent modification of data.",
          "minimum": 0
        },
        "nodeCode": {
          "type": "string",
          "description": "Language independent code which is used to identify a node in hierarchy. Expected to be human-readable, non-localized identifier unique in the scope of its parent.",
          "minLength": 1,
          "maxLength": 100,
          "pattern": "\\p{Alnum}[\\w-]*"
        },
        "tag": {
          "type": "string",
          "description": "Tag to mark the node. This tag is expected to be understood by the client.",
          "minLength": 1,
          "maxLength": 50
        },
        "departmentNode": {
          "type": "boolean",
          "description": "Indicates if this node represents a department."
        },
        "status": {
          "type": "string",
          "description": "Node status. If set to inactive, indicates that the node is 'deleted' and should not be assigned to the catalog items.<br/>Supported types:<br/><ul><li>ACTIVE: Indicates that object is not active.</li><li>INACTIVE: Indicates that object is active.</li></ul>",
          "enum": [
            "INACTIVE",
            "ACTIVE"
          ],
          "properties": {
            "INACTIVE": {
              "type": "enumitem",
              "value": ""
            },
            "ACTIVE": {
              "type": "enumitem",
              "value": ""
            }
          },
          "enumitems": "INACTIVE,ACTIVE"
        },
        "title": {
          "type": "object",
          "properties": {
            "values": {
              "type": "array",
              "description": "Values containing entries per language (one entry per language is expected).",
              "items": {
                "type": "object",
                "required": [
                  "locale",
                  "value"
                ],
                "properties": {
                  "locale": {
                    "type": "string",
                    "description": "Locale specifies local language."
                  },
                  "value": {
                    "type": "string",
                    "description": "Value has range of the name."
                  }
                },
                "description": "Contains locale and value properties.",
                "_model": "LocalizedTextData"
              }
            }
          },
          "description": "Generic data type that is capable of holding text data in multiple languages.",
          "_model": "MultiLanguageTextData"
        },
        "nodeId": {
          "type": "object",
          "required": [
            "nodeId"
          ],
          "properties": {
            "nodeId": {
              "type": "string",
              "description": "A unique code which is used to identify a node in hierarchy.",
              "minLength": 1,
              "maxLength": 120,
              "pattern": "\\p{Alnum}[\\w-]*"
            }
          },
          "description": "Data Object to identify a node in hierarchy uniquely.",
          "_model": "NodeIdData"
        },
        "parentId": {}
      },
      "description": "Represents data that will be accepted for bulk write operations.",
      "_model": "NodeWriteData"
    },
    "SaveMultipleNodesRequest": {
      "type": "object",
      "properties": {
        "nodes": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "nodeCode",
              "nodeId",
              "status",
              "title",
              "version"
            ],
            "properties": {
              "version": {
                "type": "integer",
                "format": "int64",
                "description": "Version (normally epoch time in millis) representing the version of the object. This field is used to avoid object overrides in environments that allow concurrent modification of data.",
                "minimum": 0
              },
              "nodeCode": {
                "type": "string",
                "description": "Language independent code which is used to identify a node in hierarchy. Expected to be human-readable, non-localized identifier unique in the scope of its parent.",
                "minLength": 1,
                "maxLength": 100,
                "pattern": "\\p{Alnum}[\\w-]*"
              },
              "tag": {
                "type": "string",
                "description": "Tag to mark the node. This tag is expected to be understood by the client.",
                "minLength": 1,
                "maxLength": 50
              },
              "departmentNode": {
                "type": "boolean",
                "description": "Indicates if this node represents a department."
              },
              "status": {
                "type": "string",
                "description": "Node status. If set to inactive, indicates that the node is 'deleted' and should not be assigned to the catalog items.<br/>Supported types:<br/><ul><li>ACTIVE: Indicates that object is not active.</li><li>INACTIVE: Indicates that object is active.</li></ul>",
                "enum": [
                  "INACTIVE",
                  "ACTIVE"
                ],
                "properties": {
                  "INACTIVE": {
                    "type": "enumitem",
                    "value": ""
                  },
                  "ACTIVE": {
                    "type": "enumitem",
                    "value": ""
                  }
                },
                "enumitems": "INACTIVE,ACTIVE"
              },
              "title": {
                "type": "object",
                "properties": {
                  "values": {
                    "type": "array",
                    "description": "Values containing entries per language (one entry per language is expected).",
                    "items": {
                      "type": "object",
                      "required": [
                        "locale",
                        "value"
                      ],
                      "properties": {
                        "locale": {
                          "type": "string",
                          "description": "Locale specifies local language."
                        },
                        "value": {
                          "type": "string",
                          "description": "Value has range of the name."
                        }
                      },
                      "description": "Contains locale and value properties.",
                      "_model": "LocalizedTextData"
                    }
                  }
                },
                "description": "Generic data type that is capable of holding text data in multiple languages.",
                "_model": "MultiLanguageTextData"
              },
              "nodeId": {
                "type": "object",
                "required": [
                  "nodeId"
                ],
                "properties": {
                  "nodeId": {
                    "type": "string",
                    "description": "A unique code which is used to identify a node in hierarchy.",
                    "minLength": 1,
                    "maxLength": 120,
                    "pattern": "\\p{Alnum}[\\w-]*"
                  }
                },
                "description": "Data Object to identify a node in hierarchy uniquely.",
                "_model": "NodeIdData"
              },
              "parentId": {}
            },
            "description": "Represents data that will be accepted for bulk write operations.",
            "_model": "NodeWriteData"
          }
        }
      },
      "description": "Request object to save multiple nodes in the hierarchy."
    },
    "FindNodesResponse": {
      "type": "object",
      "properties": {
        "lastPage": {
          "type": "boolean",
          "description": "Indicates whether the return page is last."
        },
        "pageNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Number of the returned page."
        },
        "totalPages": {
          "type": "integer",
          "format": "int64",
          "description": "The total number of result pages available",
          "minimum": 0
        },
        "totalResults": {
          "type": "integer",
          "format": "int64",
          "description": "The total number of results available",
          "minimum": 0
        },
        "pageContent": {
          "type": "array",
          "description": "The results corresponding to the requested page of data",
          "items": {
            "type": "object",
            "required": [
              "nodeCode",
              "nodeId",
              "status",
              "title",
              "version"
            ],
            "properties": {
              "version": {
                "type": "integer",
                "format": "int64",
                "description": "Version (normally epoch time in millis) representing the version of the object. This field is used to avoid object overrides in environments that allow concurrent modification of data.",
                "minimum": 0
              },
              "nodeCode": {
                "type": "string",
                "description": "Language independent code which is used to identify a node in hierarchy. Expected to be human-readable, non-localized identifier unique in the scope of its parent.",
                "minLength": 1,
                "maxLength": 100,
                "pattern": "\\p{Alnum}[\\w-]*"
              },
              "tag": {
                "type": "string",
                "description": "Tag to mark the node. This tag is expected to be understood by the client.",
                "minLength": 1,
                "maxLength": 50
              },
              "departmentNode": {
                "type": "boolean",
                "description": "Indicates if this node represents a department."
              },
              "status": {
                "type": "string",
                "description": "Node status. If set to inactive, indicates that the node is 'deleted' and should not be assigned to the catalog items.<br/>Supported types:<br/><ul><li>ACTIVE: Indicates that object is not active.</li><li>INACTIVE: Indicates that object is active.</li></ul>",
                "enum": [
                  "INACTIVE",
                  "ACTIVE"
                ],
                "properties": {
                  "INACTIVE": {
                    "type": "enumitem",
                    "value": ""
                  },
                  "ACTIVE": {
                    "type": "enumitem",
                    "value": ""
                  }
                },
                "enumitems": "INACTIVE,ACTIVE"
              },
              "nodeId": {
                "type": "object",
                "required": [
                  "nodeId"
                ],
                "properties": {
                  "nodeId": {
                    "type": "string",
                    "description": "A unique code which is used to identify a node in hierarchy.",
                    "minLength": 1,
                    "maxLength": 120,
                    "pattern": "\\p{Alnum}[\\w-]*"
                  }
                },
                "description": "Data Object to identify a node in hierarchy uniquely.",
                "_model": "NodeIdData"
              },
              "parentId": {},
              "title": {
                "type": "object",
                "required": [
                  "locale",
                  "value"
                ],
                "properties": {
                  "locale": {
                    "type": "string",
                    "description": "Locale specifies local language."
                  },
                  "value": {
                    "type": "string",
                    "description": "Value has range of the name."
                  }
                },
                "description": "Contains locale and value properties.",
                "_model": "LocalizedTextData"
              }
            },
            "description": "Basic view data that can be used to returned in response to the search operations.",
            "_model": "NodeBasicViewData"
          }
        }
      },
      "description": "Response object for finder methods that returns Node objects matching the given search criteria."
    },
    "GetItemDetailsResponse": {
      "type": "object",
      "required": [
        "item"
      ],
      "properties": {
        "item": {
          "type": "object",
          "required": [
            "departmentId",
            "itemId",
            "merchandiseCategory",
            "nonMerchandise",
            "shortDescription",
            "status",
            "version"
          ],
          "properties": {
            "version": {
              "type": "integer",
              "format": "int64",
              "description": "Version (normally epoch time in millis) representing the version of the object. This field is used to avoid object overrides in environments that allow concurrent modification of data.",
              "minimum": 0
            },
            "packageIdentifiers": {
              "type": "array",
              "description": "Customer specific package identifiers..",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "value"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Identifier's type.",
                    "minLength": 1,
                    "maxLength": 20,
                    "pattern": "^\\p{Alnum}[\\w\\s\\-]*$"
                  },
                  "value": {
                    "type": "string",
                    "description": "Identifier's value.",
                    "minLength": 1,
                    "maxLength": 60
                  }
                },
                "description": "Data object to store additional specific identifier of the customer for an item. Attributes are used to provideadditional information on the items, for example, the attribute may contain the item ingredients.",
                "_model": "ItemPackageIdData"
              }
            },
            "longDescription": {
              "type": "object",
              "properties": {
                "values": {
                  "type": "array",
                  "description": "Values containing entries per language (one entry per language is expected).",
                  "items": {
                    "type": "object",
                    "required": [
                      "locale",
                      "value"
                    ],
                    "properties": {
                      "locale": {
                        "type": "string",
                        "description": "Locale specifies local language."
                      },
                      "value": {
                        "type": "string",
                        "description": "Value has range of the name."
                      }
                    },
                    "description": "Contains locale and value properties.",
                    "_model": "LocalizedTextData"
                  }
                }
              },
              "description": "Generic data type that is capable of holding text data in multiple languages.",
              "_model": "MultiLanguageTextData"
            },
            "shortDescription": {},
            "merchandiseCategory": {
              "type": "object",
              "required": [
                "nodeId"
              ],
              "properties": {
                "nodeId": {
                  "type": "string",
                  "description": "A unique code which is used to identify a node in hierarchy.",
                  "minLength": 1,
                  "maxLength": 120,
                  "pattern": "\\p{Alnum}[\\w-]*"
                }
              },
              "description": "Data Object to identify a node in hierarchy uniquely.",
              "_model": "NodeIdData"
            },
            "alternateCategories": {
              "type": "array",
              "description": "Collection of custom categories nodes associated with the item. No restrictions are placed to  the kind of nodes that can be associated with an item. Nodes may be leaf or non-leaf nodes. They may be from the same root or different roots.",
              "items": {}
            },
            "status": {
              "type": "string",
              "description": "Item status will be used to mark items as active, inactive or other.<br/>Supported types:<br/><ul><li>ACTIVE: Indicates that object is not active.</li><li>INACTIVE: Indicates that object is active.</li></ul>",
              "enum": [
                "INACTIVE",
                "ACTIVE"
              ],
              "properties": {
                "INACTIVE": {
                  "type": "enumitem",
                  "value": ""
                },
                "ACTIVE": {
                  "type": "enumitem",
                  "value": ""
                }
              },
              "enumitems": "INACTIVE,ACTIVE"
            },
            "departmentId": {
              "type": "string",
              "description": "The department id.",
              "minLength": 1,
              "maxLength": 100
            },
            "familyCode": {
              "type": "string",
              "description": "The family code of the item.",
              "minLength": 1,
              "maxLength": 2147483647
            },
            "manufacturerCode": {
              "type": "string",
              "description": "The manufacture code of the item.",
              "minLength": 1,
              "maxLength": 2147483647
            },
            "nonMerchandise": {
              "type": "boolean",
              "description": "Whether is a non merchandise or not."
            },
            "dynamicAttributes": {
              "type": "array",
              "description": "Customer or product specific dynamic attributes. These can contain any number of attributes that may drive client application behavior (such as POS logic).",
              "items": {
                "type": "object",
                "required": [
                  "attributes",
                  "type"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "\\p{Alnum}[\\w-]*"
                  },
                  "attributes": {
                    "type": "array",
                    "description": "Collection of key value data.",
                    "items": {
                      "type": "object",
                      "required": [
                        "key"
                      ],
                      "properties": {
                        "key": {
                          "type": "string",
                          "description": "Key that identifies this key value pair."
                        },
                        "value": {
                          "type": "string",
                          "description": "Value associated with the key.",
                          "minLength": 1,
                          "maxLength": 512
                        },
                        "localizedValue": {
                          "type": "object",
                          "properties": {
                            "values": {
                              "type": "array",
                              "description": "Values containing entries per language (one entry per language is expected).",
                              "items": {
                                "type": "object",
                                "required": [
                                  "locale",
                                  "value"
                                ],
                                "properties": {
                                  "locale": {
                                    "type": "string",
                                    "description": "Locale specifies local language."
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "Value has range of the name."
                                  }
                                },
                                "description": "Contains locale and value properties.",
                                "_model": "LocalizedTextData"
                              }
                            }
                          },
                          "description": "Generic data type that is capable of holding text data in multiple languages.",
                          "_model": "MultiLanguageTextData"
                        }
                      },
                      "description": "Contains locale, key and value properties.",
                      "_model": "LocalizedKeyValueData"
                    }
                  }
                },
                "description": "Contains basic fields describing the dynamic attributes.",
                "_model": "DynamicAttributesData"
              }
            },
            "itemId": {
              "type": "object",
              "required": [
                "itemCode"
              ],
              "properties": {
                "itemCode": {
                  "type": "string",
                  "description": "A unique item (unique per Tenant) code which is used to identify the item.",
                  "minLength": 1,
                  "maxLength": 40,
                  "pattern": "\\p{Alnum}[\\w-]*"
                }
              },
              "description": "Data object to identify an item uniquely.",
              "_model": "ItemIdData"
            },
            "auditTrail": {
              "type": "object",
              "required": [
                "lastUpdated",
                "lastUpdatedByUser"
              ],
              "properties": {
                "lastUpdated": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Date when the object was last updated."
                },
                "lastUpdatedByUser": {
                  "type": "string",
                  "description": "User name of the user that updated the object."
                }
              },
              "description": "Audit related information that can be associated with objects.",
              "_model": "AuditTrailData"
            }
          },
          "description": "Contains all of the fields of a catalog item, including read-only system generated/assigned fields.",
          "_model": "ItemViewData"
        },
        "itemAttributes": {
          "type": "object",
          "required": [
            "inVariety",
            "status",
            "version"
          ],
          "properties": {
            "version": {
              "type": "integer",
              "format": "int64",
              "description": "Version (normally epoch time in millis) representing the version of the object. This field is used to avoid object overrides in environments that allow concurrent modification of data.",
              "minimum": 0
            },
            "inVariety": {
              "type": "boolean",
              "description": "Attribute that identifies whether the catalog item is generally available (in variety) in the respect enterprise unit (store, site, branch, etc.). If this attribute is set to false, then data synchronization logic for item catalog (specifically {@link ItemService#getSnapshot(com.ncr.nr1.catalog.common.GetSnapshotRequest)}) may takethis attribute into account for distributions that are requested in a context of an enterprise unit. In this case, the catalog items distributed to the enterprise unit are restricted only to those that have this attribute set to {@code true} in the item attributes."
            },
            "longDescription": {
              "type": "object",
              "properties": {
                "values": {
                  "type": "array",
                  "description": "Values containing entries per language (one entry per language is expected).",
                  "items": {
                    "type": "object",
                    "required": [
                      "locale",
                      "value"
                    ],
                    "properties": {
                      "locale": {
                        "type": "string",
                        "description": "Locale specifies local language."
                      },
                      "value": {
                        "type": "string",
                        "description": "Value has range of the name."
                      }
                    },
                    "description": "Contains locale and value properties.",
                    "_model": "LocalizedTextData"
                  }
                }
              },
              "description": "Generic data type that is capable of holding text data in multiple languages.",
              "_model": "MultiLanguageTextData"
            },
            "shortDescription": {},
            "merchandiseCategory": {
              "type": "object",
              "required": [
                "nodeId"
              ],
              "properties": {
                "nodeId": {
                  "type": "string",
                  "description": "A unique code which is used to identify a node in hierarchy.",
                  "minLength": 1,
                  "maxLength": 120,
                  "pattern": "\\p{Alnum}[\\w-]*"
                }
              },
              "description": "Data Object to identify a node in hierarchy uniquely.",
              "_model": "NodeIdData"
            },
            "status": {
              "type": "string",
              "description": "Status of the current item attributes. If set to INACTIVE, it means that item is not available for the specified unit. This approach allows to apply restrictions at the enterprise unit and also maintain information about the products that are 'sold' at a specific location.<br/>Supported types:<br/><ul><li>ACTIVE: Indicates that object is not active.</li><li>INACTIVE: Indicates that object is active.</li></ul>",
              "enum": [
                "INACTIVE",
                "ACTIVE"
              ],
              "properties": {
                "INACTIVE": {
                  "type": "enumitem",
                  "value": ""
                },
                "ACTIVE": {
                  "type": "enumitem",
                  "value": ""
                }
              },
              "enumitems": "INACTIVE,ACTIVE"
            },
            "dynamicAttributes": {
              "type": "array",
              "description": "Customer specific dynamic attributes.",
              "items": {
                "type": "object",
                "required": [
                  "attributes",
                  "type"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "\\p{Alnum}[\\w-]*"
                  },
                  "attributes": {
                    "type": "array",
                    "description": "Collection of key value data.",
                    "items": {
                      "type": "object",
                      "required": [
                        "key"
                      ],
                      "properties": {
                        "key": {
                          "type": "string",
                          "description": "Key that identifies this key value pair."
                        },
                        "value": {
                          "type": "string",
                          "description": "Value associated with the key.",
                          "minLength": 1,
                          "maxLength": 512
                        },
                        "localizedValue": {
                          "type": "object",
                          "properties": {
                            "values": {
                              "type": "array",
                              "description": "Values containing entries per language (one entry per language is expected).",
                              "items": {
                                "type": "object",
                                "required": [
                                  "locale",
                                  "value"
                                ],
                                "properties": {
                                  "locale": {
                                    "type": "string",
                                    "description": "Locale specifies local language."
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "Value has range of the name."
                                  }
                                },
                                "description": "Contains locale and value properties.",
                                "_model": "LocalizedTextData"
                              }
                            }
                          },
                          "description": "Generic data type that is capable of holding text data in multiple languages.",
                          "_model": "MultiLanguageTextData"
                        }
                      },
                      "description": "Contains locale, key and value properties.",
                      "_model": "LocalizedKeyValueData"
                    }
                  }
                },
                "description": "Contains basic fields describing the dynamic attributes.",
                "_model": "DynamicAttributesData"
              }
            },
            "groups": {
              "type": "array",
              "description": "Collection of groups that represents group memberships of the catalog item (enterprise unit level).",
              "items": {
                "type": "object",
                "required": [
                  "groupCode"
                ],
                "properties": {
                  "groupCode": {
                    "type": "string",
                    "description": "Group code that uniquely identifies the group per tenant.",
                    "minLength": 1,
                    "maxLength": 100,
                    "pattern": "\\p{Alnum}[\\w-]*"
                  }
                },
                "description": "Represents minimum set of fields that uniquely identifies Group.",
                "_model": "GroupIdData"
              }
            },
            "linkGroups": {
              "type": "array",
              "description": "Collection of linked items that represents a logically connected group of the catalog items at the enterprise unit level). Linked item reference allows specifying additional attributes at the association level.",
              "items": {
                "type": "object",
                "required": [
                  "linkGroupCode"
                ],
                "properties": {
                  "linkGroupCode": {
                    "type": "string",
                    "description": "A unique (per tenant) link group code that identifies the link group.",
                    "minLength": 1,
                    "maxLength": 100,
                    "pattern": "\\p{Alnum}[\\w-]*"
                  }
                },
                "description": "Represents minimum set of fields that uniquely identify a link group.",
                "_model": "LinkGroupIdData"
              }
            },
            "imageUrls": {
              "type": "array",
              "items": {
                "type": "string",
                "_model": "string",
                "sample": "\"Bamboo\""
              }
            }
          },
          "description": "Defines complete set of properties for item attributes.",
          "_model": "ItemAttributesData"
        },
        "itemPrices": {
          "type": "array",
          "description": "Item prices (only active) for the specified enterprise unit.",
          "items": {
            "type": "object",
            "required": [
              "currency",
              "effectiveDate",
              "price",
              "status",
              "version"
            ],
            "properties": {
              "version": {
                "type": "integer",
                "format": "int64",
                "description": "Version (normally epoch time in millis) representing the version of the object. This field is used to avoid object overrides in environments that allow concurrent modification of data.",
                "minimum": 0
              },
              "price": {
                "type": "number",
                "description": "Price value.",
                "minimum": 0,
                "exclusiveMinimum": false
              },
              "currency": {
                "type": "string",
                "description": "Currency of the price value.",
                "minLength": 1,
                "maxLength": 10
              },
              "effectiveDate": {
                "type": "string",
                "format": "date-time",
                "description": "Effective date for the price."
              },
              "endDate": {
                "type": "string",
                "format": "date-time",
                "description": "End date for the price. The price may be considered expired after the specified date."
              },
              "status": {
                "type": "string",
                "description": "Status of the price object. More than one price can be active at a time.<br/>Supported types:<br/><ul><li>ACTIVE: Indicates that object is not active.</li><li>INACTIVE: Indicates that object is active.</li></ul>",
                "enum": [
                  "INACTIVE",
                  "ACTIVE"
                ],
                "properties": {
                  "INACTIVE": {
                    "type": "enumitem",
                    "value": ""
                  },
                  "ACTIVE": {
                    "type": "enumitem",
                    "value": ""
                  }
                },
                "enumitems": "INACTIVE,ACTIVE"
              },
              "basePrice": {
                "type": "boolean",
                "description": "To determine the price is base price or not."
              },
              "linkGroupId": {
                "type": "object",
                "required": [
                  "linkGroupCode"
                ],
                "properties": {
                  "linkGroupCode": {
                    "type": "string",
                    "description": "A unique (per tenant) link group code that identifies the link group.",
                    "minLength": 1,
                    "maxLength": 100,
                    "pattern": "\\p{Alnum}[\\w-]*"
                  }
                },
                "description": "Represents minimum set of fields that uniquely identify a link group.",
                "_model": "LinkGroupIdData"
              },
              "dynamicAttributes": {
                "type": "array",
                "description": "Customer or product specific dynamic attributes. These can contain any number of attributes that may drive client application behavior (such as POS logic).",
                "items": {
                  "type": "object",
                  "required": [
                    "attributes",
                    "type"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 64,
                      "pattern": "\\p{Alnum}[\\w-]*"
                    },
                    "attributes": {
                      "type": "array",
                      "description": "Collection of key value data.",
                      "items": {
                        "type": "object",
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "type": "string",
                            "description": "Key that identifies this key value pair."
                          },
                          "value": {
                            "type": "string",
                            "description": "Value associated with the key.",
                            "minLength": 1,
                            "maxLength": 512
                          },
                          "localizedValue": {
                            "type": "object",
                            "properties": {
                              "values": {
                                "type": "array",
                                "description": "Values containing entries per language (one entry per language is expected).",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "locale",
                                    "value"
                                  ],
                                  "properties": {
                                    "locale": {
                                      "type": "string",
                                      "description": "Locale specifies local language."
                                    },
                                    "value": {
                                      "type": "string",
                                      "description": "Value has range of the name."
                                    }
                                  },
                                  "description": "Contains locale and value properties.",
                                  "_model": "LocalizedTextData"
                                }
                              }
                            },
                            "description": "Generic data type that is capable of holding text data in multiple languages.",
                            "_model": "MultiLanguageTextData"
                          }
                        },
                        "description": "Contains locale, key and value properties.",
                        "_model": "LocalizedKeyValueData"
                      }
                    }
                  },
                  "description": "Contains basic fields describing the dynamic attributes.",
                  "_model": "DynamicAttributesData"
                }
              }
            },
            "description": "Defines complete writable set of attributes for catalog item price.",
            "_model": "ItemPriceData"
          }
        }
      },
      "description": " Response object containing information around all the attributes known to the catalog application with respect tothe identified catalog item."
    },
    "ItemPackageIdData": {
      "type": "object",
      "required": [
        "type",
        "value"
      ],
      "properties": {
        "type": {
          "type": "string",
          "description": "Identifier's type.",
          "minLength": 1,
          "maxLength": 20,
          "pattern": "^\\p{Alnum}[\\w\\s\\-]*$"
        },
        "value": {
          "type": "string",
          "description": "Identifier's value.",
          "minLength": 1,
          "maxLength": 60
        }
      },
      "description": "Data object to store additional specific identifier of the customer for an item. Attributes are used to provideadditional information on the items, for example, the attribute may contain the item ingredients.",
      "_model": "ItemPackageIdData"
    },
    "ItemPriceData": {
      "type": "object",
      "required": [
        "currency",
        "effectiveDate",
        "price",
        "status",
        "version"
      ],
      "properties": {
        "version": {
          "type": "integer",
          "format": "int64",
          "description": "Version (normally epoch time in millis) representing the version of the object. This field is used to avoid object overrides in environments that allow concurrent modification of data.",
          "minimum": 0
        },
        "price": {
          "type": "number",
          "description": "Price value.",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "currency": {
          "type": "string",
          "description": "Currency of the price value.",
          "minLength": 1,
          "maxLength": 10
        },
        "effectiveDate": {
          "type": "string",
          "format": "date-time",
          "description": "Effective date for the price."
        },
        "endDate": {
          "type": "string",
          "format": "date-time",
          "description": "End date for the price. The price may be considered expired after the specified date."
        },
        "status": {
          "type": "string",
          "description": "Status of the price object. More than one price can be active at a time.<br/>Supported types:<br/><ul><li>ACTIVE: Indicates that object is not active.</li><li>INACTIVE: Indicates that object is active.</li></ul>",
          "enum": [
            "INACTIVE",
            "ACTIVE"
          ],
          "properties": {
            "INACTIVE": {
              "type": "enumitem",
              "value": ""
            },
            "ACTIVE": {
              "type": "enumitem",
              "value": ""
            }
          },
          "enumitems": "INACTIVE,ACTIVE"
        },
        "basePrice": {
          "type": "boolean",
          "description": "To determine the price is base price or not."
        },
        "linkGroupId": {
          "type": "object",
          "required": [
            "linkGroupCode"
          ],
          "properties": {
            "linkGroupCode": {
              "type": "string",
              "description": "A unique (per tenant) link group code that identifies the link group.",
              "minLength": 1,
              "maxLength": 100,
              "pattern": "\\p{Alnum}[\\w-]*"
            }
          },
          "description": "Represents minimum set of fields that uniquely identify a link group.",
          "_model": "LinkGroupIdData"
        },
        "dynamicAttributes": {
          "type": "array",
          "description": "Customer or product specific dynamic attributes. These can contain any number of attributes that may drive client application behavior (such as POS logic).",
          "items": {
            "type": "object",
            "required": [
              "attributes",
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "minLength": 1,
                "maxLength": 64,
                "pattern": "\\p{Alnum}[\\w-]*"
              },
              "attributes": {
                "type": "array",
                "description": "Collection of key value data.",
                "items": {
                  "type": "object",
                  "required": [
                    "key"
                  ],
                  "properties": {
                    "key": {
                      "type": "string",
                      "description": "Key that identifies this key value pair."
                    },
                    "value": {
                      "type": "string",
                      "description": "Value associated with the key.",
                      "minLength": 1,
                      "maxLength": 512
                    },
                    "localizedValue": {
                      "type": "object",
                      "properties": {
                        "values": {
                          "type": "array",
                          "description": "Values containing entries per language (one entry per language is expected).",
                          "items": {
                            "type": "object",
                            "required": [
                              "locale",
                              "value"
                            ],
                            "properties": {
                              "locale": {
                                "type": "string",
                                "description": "Locale specifies local language."
                              },
                              "value": {
                                "type": "string",
                                "description": "Value has range of the name."
                              }
                            },
                            "description": "Contains locale and value properties.",
                            "_model": "LocalizedTextData"
                          }
                        }
                      },
                      "description": "Generic data type that is capable of holding text data in multiple languages.",
                      "_model": "MultiLanguageTextData"
                    }
                  },
                  "description": "Contains locale, key and value properties.",
                  "_model": "LocalizedKeyValueData"
                }
              }
            },
            "description": "Contains basic fields describing the dynamic attributes.",
            "_model": "DynamicAttributesData"
          }
        }
      },
      "description": "Defines complete writable set of attributes for catalog item price.",
      "_model": "ItemPriceData"
    },
    "ItemViewData": {
      "type": "object",
      "required": [
        "departmentId",
        "itemId",
        "merchandiseCategory",
        "nonMerchandise",
        "shortDescription",
        "status",
        "version"
      ],
      "properties": {
        "version": {
          "type": "integer",
          "format": "int64",
          "description": "Version (normally epoch time in millis) representing the version of the object. This field is used to avoid object overrides in environments that allow concurrent modification of data.",
          "minimum": 0
        },
        "packageIdentifiers": {
          "type": "array",
          "description": "Customer specific package identifiers..",
          "items": {
            "type": "object",
            "required": [
              "type",
              "value"
            ],
            "properties": {
              "type": {
                "type": "string",
                "description": "Identifier's type.",
                "minLength": 1,
                "maxLength": 20,
                "pattern": "^\\p{Alnum}[\\w\\s\\-]*$"
              },
              "value": {
                "type": "string",
                "description": "Identifier's value.",
                "minLength": 1,
                "maxLength": 60
              }
            },
            "description": "Data object to store additional specific identifier of the customer for an item. Attributes are used to provideadditional information on the items, for example, the attribute may contain the item ingredients.",
            "_model": "ItemPackageIdData"
          }
        },
        "longDescription": {
          "type": "object",
          "properties": {
            "values": {
              "type": "array",
              "description": "Values containing entries per language (one entry per language is expected).",
              "items": {
                "type": "object",
                "required": [
                  "locale",
                  "value"
                ],
                "properties": {
                  "locale": {
                    "type": "string",
                    "description": "Locale specifies local language."
                  },
                  "value": {
                    "type": "string",
                    "description": "Value has range of the name."
                  }
                },
                "description": "Contains locale and value properties.",
                "_model": "LocalizedTextData"
              }
            }
          },
          "description": "Generic data type that is capable of holding text data in multiple languages.",
          "_model": "MultiLanguageTextData"
        },
        "shortDescription": {},
        "merchandiseCategory": {
          "type": "object",
          "required": [
            "nodeId"
          ],
          "properties": {
            "nodeId": {
              "type": "string",
              "description": "A unique code which is used to identify a node in hierarchy.",
              "minLength": 1,
              "maxLength": 120,
              "pattern": "\\p{Alnum}[\\w-]*"
            }
          },
          "description": "Data Object to identify a node in hierarchy uniquely.",
          "_model": "NodeIdData"
        },
        "alternateCategories": {
          "type": "array",
          "description": "Collection of custom categories nodes associated with the item. No restrictions are placed to  the kind of nodes that can be associated with an item. Nodes may be leaf or non-leaf nodes. They may be from the same root or different roots.",
          "items": {}
        },
        "status": {
          "type": "string",
          "description": "Item status will be used to mark items as active, inactive or other.<br/>Supported types:<br/><ul><li>ACTIVE: Indicates that object is not active.</li><li>INACTIVE: Indicates that object is active.</li></ul>",
          "enum": [
            "INACTIVE",
            "ACTIVE"
          ],
          "properties": {
            "INACTIVE": {
              "type": "enumitem",
              "value": ""
            },
            "ACTIVE": {
              "type": "enumitem",
              "value": ""
            }
          },
          "enumitems": "INACTIVE,ACTIVE"
        },
        "departmentId": {
          "type": "string",
          "description": "The department id.",
          "minLength": 1,
          "maxLength": 100
        },
        "familyCode": {
          "type": "string",
          "description": "The family code of the item.",
          "minLength": 1,
          "maxLength": 2147483647
        },
        "manufacturerCode": {
          "type": "string",
          "description": "The manufacture code of the item.",
          "minLength": 1,
          "maxLength": 2147483647
        },
        "nonMerchandise": {
          "type": "boolean",
          "description": "Whether is a non merchandise or not."
        },
        "dynamicAttributes": {
          "type": "array",
          "description": "Customer or product specific dynamic attributes. These can contain any number of attributes that may drive client application behavior (such as POS logic).",
          "items": {
            "type": "object",
            "required": [
              "attributes",
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "minLength": 1,
                "maxLength": 64,
                "pattern": "\\p{Alnum}[\\w-]*"
              },
              "attributes": {
                "type": "array",
                "description": "Collection of key value data.",
                "items": {
                  "type": "object",
                  "required": [
                    "key"
                  ],
                  "properties": {
                    "key": {
                      "type": "string",
                      "description": "Key that identifies this key value pair."
                    },
                    "value": {
                      "type": "string",
                      "description": "Value associated with the key.",
                      "minLength": 1,
                      "maxLength": 512
                    },
                    "localizedValue": {
                      "type": "object",
                      "properties": {
                        "values": {
                          "type": "array",
                          "description": "Values containing entries per language (one entry per language is expected).",
                          "items": {
                            "type": "object",
                            "required": [
                              "locale",
                              "value"
                            ],
                            "properties": {
                              "locale": {
                                "type": "string",
                                "description": "Locale specifies local language."
                              },
                              "value": {
                                "type": "string",
                                "description": "Value has range of the name."
                              }
                            },
                            "description": "Contains locale and value properties.",
                            "_model": "LocalizedTextData"
                          }
                        }
                      },
                      "description": "Generic data type that is capable of holding text data in multiple languages.",
                      "_model": "MultiLanguageTextData"
                    }
                  },
                  "description": "Contains locale, key and value properties.",
                  "_model": "LocalizedKeyValueData"
                }
              }
            },
            "description": "Contains basic fields describing the dynamic attributes.",
            "_model": "DynamicAttributesData"
          }
        },
        "itemId": {
          "type": "object",
          "required": [
            "itemCode"
          ],
          "properties": {
            "itemCode": {
              "type": "string",
              "description": "A unique item (unique per Tenant) code which is used to identify the item.",
              "minLength": 1,
              "maxLength": 40,
              "pattern": "\\p{Alnum}[\\w-]*"
            }
          },
          "description": "Data object to identify an item uniquely.",
          "_model": "ItemIdData"
        },
        "auditTrail": {
          "type": "object",
          "required": [
            "lastUpdated",
            "lastUpdatedByUser"
          ],
          "properties": {
            "lastUpdated": {
              "type": "string",
              "format": "date-time",
              "description": "Date when the object was last updated."
            },
            "lastUpdatedByUser": {
              "type": "string",
              "description": "User name of the user that updated the object."
            }
          },
          "description": "Audit related information that can be associated with objects.",
          "_model": "AuditTrailData"
        }
      },
      "description": "Contains all of the fields of a catalog item, including read-only system generated/assigned fields.",
      "_model": "ItemViewData"
    },
    "GroupViewData": {
      "type": "object",
      "required": [
        "groupId",
        "title",
        "version"
      ],
      "properties": {
        "version": {
          "type": "integer",
          "format": "int64",
          "description": "Version (normally epoch time in millis) representing the version of the object. This field is used to avoid object overrides in environments that allow concurrent modification of data.",
          "minimum": 0
        },
        "tag": {
          "type": "string",
          "description": "Tag to mark the group. This tag is expected to be understood by the client.",
          "minLength": 1,
          "maxLength": 50
        },
        "status": {
          "type": "string",
          "description": "Group status. If set to inactive, indicates that the group is 'deleted' and should not be assigned to the catalog items attributes.<br/>Supported types:<br/><ul><li>ACTIVE: Indicates that object is not active.</li><li>INACTIVE: Indicates that object is active.</li></ul>",
          "enum": [
            "INACTIVE",
            "ACTIVE"
          ],
          "properties": {
            "INACTIVE": {
              "type": "enumitem",
              "value": ""
            },
            "ACTIVE": {
              "type": "enumitem",
              "value": ""
            }
          },
          "enumitems": "INACTIVE,ACTIVE"
        },
        "title": {
          "type": "object",
          "properties": {
            "values": {
              "type": "array",
              "description": "Values containing entries per language (one entry per language is expected).",
              "items": {
                "type": "object",
                "required": [
                  "locale",
                  "value"
                ],
                "properties": {
                  "locale": {
                    "type": "string",
                    "description": "Locale specifies local language."
                  },
                  "value": {
                    "type": "string",
                    "description": "Value has range of the name."
                  }
                },
                "description": "Contains locale and value properties.",
                "_model": "LocalizedTextData"
              }
            }
          },
          "description": "Generic data type that is capable of holding text data in multiple languages.",
          "_model": "MultiLanguageTextData"
        },
        "groupId": {
          "type": "object",
          "required": [
            "groupCode"
          ],
          "properties": {
            "groupCode": {
              "type": "string",
              "description": "Group code that uniquely identifies the group per tenant.",
              "minLength": 1,
              "maxLength": 100,
              "pattern": "\\p{Alnum}[\\w-]*"
            }
          },
          "description": "Represents minimum set of fields that uniquely identifies Group.",
          "_model": "GroupIdData"
        },
        "auditTrail": {
          "type": "object",
          "required": [
            "lastUpdated",
            "lastUpdatedByUser"
          ],
          "properties": {
            "lastUpdated": {
              "type": "string",
              "format": "date-time",
              "description": "Date when the object was last updated."
            },
            "lastUpdatedByUser": {
              "type": "string",
              "description": "User name of the user that updated the object."
            }
          },
          "description": "Audit related information that can be associated with objects.",
          "_model": "AuditTrailData"
        }
      },
      "description": "Represents a complete set of attributes for a catalog group, including read-only and system defined fields.",
      "_model": "GroupViewData"
    },
    "GetGroupsSnapshotResponse": {
      "type": "object",
      "properties": {
        "snapshotVersion": {
          "type": "integer",
          "format": "int64"
        },
        "snapshot": {
          "type": "array",
          "description": "The actual content of the snapshot.",
          "items": {
            "type": "object",
            "required": [
              "groupId",
              "title",
              "version"
            ],
            "properties": {
              "version": {
                "type": "integer",
                "format": "int64",
                "description": "Version (normally epoch time in millis) representing the version of the object. This field is used to avoid object overrides in environments that allow concurrent modification of data.",
                "minimum": 0
              },
              "tag": {
                "type": "string",
                "description": "Tag to mark the group. This tag is expected to be understood by the client.",
                "minLength": 1,
                "maxLength": 50
              },
              "status": {
                "type": "string",
                "description": "Group status. If set to inactive, indicates that the group is 'deleted' and should not be assigned to the catalog items attributes.<br/>Supported types:<br/><ul><li>ACTIVE: Indicates that object is not active.</li><li>INACTIVE: Indicates that object is active.</li></ul>",
                "enum": [
                  "INACTIVE",
                  "ACTIVE"
                ],
                "properties": {
                  "INACTIVE": {
                    "type": "enumitem",
                    "value": ""
                  },
                  "ACTIVE": {
                    "type": "enumitem",
                    "value": ""
                  }
                },
                "enumitems": "INACTIVE,ACTIVE"
              },
              "title": {
                "type": "object",
                "properties": {
                  "values": {
                    "type": "array",
                    "description": "Values containing entries per language (one entry per language is expected).",
                    "items": {
                      "type": "object",
                      "required": [
                        "locale",
                        "value"
                      ],
                      "properties": {
                        "locale": {
                          "type": "string",
                          "description": "Locale specifies local language."
                        },
                        "value": {
                          "type": "string",
                          "description": "Value has range of the name."
                        }
                      },
                      "description": "Contains locale and value properties.",
                      "_model": "LocalizedTextData"
                    }
                  }
                },
                "description": "Generic data type that is capable of holding text data in multiple languages.",
                "_model": "MultiLanguageTextData"
              },
              "groupId": {
                "type": "object",
                "required": [
                  "groupCode"
                ],
                "properties": {
                  "groupCode": {
                    "type": "string",
                    "description": "Group code that uniquely identifies the group per tenant.",
                    "minLength": 1,
                    "maxLength": 100,
                    "pattern": "\\p{Alnum}[\\w-]*"
                  }
                },
                "description": "Represents minimum set of fields that uniquely identifies Group.",
                "_model": "GroupIdData"
              },
              "auditTrail": {
                "type": "object",
                "required": [
                  "lastUpdated",
                  "lastUpdatedByUser"
                ],
                "properties": {
                  "lastUpdated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date when the object was last updated."
                  },
                  "lastUpdatedByUser": {
                    "type": "string",
                    "description": "User name of the user that updated the object."
                  }
                },
                "description": "Audit related information that can be associated with objects.",
                "_model": "AuditTrailData"
              }
            },
            "description": "Represents a complete set of attributes for a catalog group, including read-only and system defined fields.",
            "_model": "GroupViewData"
          }
        }
      },
      "description": "Response object containing snapshot data with catalog groups."
    },
    "GroupWriteData": {
      "type": "object",
      "required": [
        "groupId",
        "title",
        "version"
      ],
      "properties": {
        "version": {
          "type": "integer",
          "format": "int64",
          "description": "Version (normally epoch time in millis) representing the version of the object. This field is used to avoid object overrides in environments that allow concurrent modification of data.",
          "minimum": 0
        },
        "tag": {
          "type": "string",
          "description": "Tag to mark the group. This tag is expected to be understood by the client.",
          "minLength": 1,
          "maxLength": 50
        },
        "status": {
          "type": "string",
          "description": "Group status. If set to inactive, indicates that the group is 'deleted' and should not be assigned to the catalog items attributes.<br/>Supported types:<br/><ul><li>ACTIVE: Indicates that object is not active.</li><li>INACTIVE: Indicates that object is active.</li></ul>",
          "enum": [
            "INACTIVE",
            "ACTIVE"
          ],
          "properties": {
            "INACTIVE": {
              "type": "enumitem",
              "value": ""
            },
            "ACTIVE": {
              "type": "enumitem",
              "value": ""
            }
          },
          "enumitems": "INACTIVE,ACTIVE"
        },
        "title": {
          "type": "object",
          "properties": {
            "values": {
              "type": "array",
              "description": "Values containing entries per language (one entry per language is expected).",
              "items": {
                "type": "object",
                "required": [
                  "locale",
                  "value"
                ],
                "properties": {
                  "locale": {
                    "type": "string",
                    "description": "Locale specifies local language."
                  },
                  "value": {
                    "type": "string",
                    "description": "Value has range of the name."
                  }
                },
                "description": "Contains locale and value properties.",
                "_model": "LocalizedTextData"
              }
            }
          },
          "description": "Generic data type that is capable of holding text data in multiple languages.",
          "_model": "MultiLanguageTextData"
        },
        "groupId": {
          "type": "object",
          "required": [
            "groupCode"
          ],
          "properties": {
            "groupCode": {
              "type": "string",
              "description": "Group code that uniquely identifies the group per tenant.",
              "minLength": 1,
              "maxLength": 100,
              "pattern": "\\p{Alnum}[\\w-]*"
            }
          },
          "description": "Represents minimum set of fields that uniquely identifies Group.",
          "_model": "GroupIdData"
        }
      },
      "description": "Writable group data for bulk operations. ",
      "_model": "GroupWriteData"
    },
    "SaveMultipleGroupsRequest": {
      "type": "object",
      "properties": {
        "groups": {
          "type": "array",
          "description": "Groups to be saved.",
          "items": {
            "type": "object",
            "required": [
              "groupId",
              "title",
              "version"
            ],
            "properties": {
              "version": {
                "type": "integer",
                "format": "int64",
                "description": "Version (normally epoch time in millis) representing the version of the object. This field is used to avoid object overrides in environments that allow concurrent modification of data.",
                "minimum": 0
              },
              "tag": {
                "type": "string",
                "description": "Tag to mark the group. This tag is expected to be understood by the client.",
                "minLength": 1,
                "maxLength": 50
              },
              "status": {
                "type": "string",
                "description": "Group status. If set to inactive, indicates that the group is 'deleted' and should not be assigned to the catalog items attributes.<br/>Supported types:<br/><ul><li>ACTIVE: Indicates that object is not active.</li><li>INACTIVE: Indicates that object is active.</li></ul>",
                "enum": [
                  "INACTIVE",
                  "ACTIVE"
                ],
                "properties": {
                  "INACTIVE": {
                    "type": "enumitem",
                    "value": ""
                  },
                  "ACTIVE": {
                    "type": "enumitem",
                    "value": ""
                  }
                },
                "enumitems": "INACTIVE,ACTIVE"
              },
              "title": {
                "type": "object",
                "properties": {
                  "values": {
                    "type": "array",
                    "description": "Values containing entries per language (one entry per language is expected).",
                    "items": {
                      "type": "object",
                      "required": [
                        "locale",
                        "value"
                      ],
                      "properties": {
                        "locale": {
                          "type": "string",
                          "description": "Locale specifies local language."
                        },
                        "value": {
                          "type": "string",
                          "description": "Value has range of the name."
                        }
                      },
                      "description": "Contains locale and value properties.",
                      "_model": "LocalizedTextData"
                    }
                  }
                },
                "description": "Generic data type that is capable of holding text data in multiple languages.",
                "_model": "MultiLanguageTextData"
              },
              "groupId": {
                "type": "object",
                "required": [
                  "groupCode"
                ],
                "properties": {
                  "groupCode": {
                    "type": "string",
                    "description": "Group code that uniquely identifies the group per tenant.",
                    "minLength": 1,
                    "maxLength": 100,
                    "pattern": "\\p{Alnum}[\\w-]*"
                  }
                },
                "description": "Represents minimum set of fields that uniquely identifies Group.",
                "_model": "GroupIdData"
              }
            },
            "description": "Writable group data for bulk operations. ",
            "_model": "GroupWriteData"
          }
        }
      },
      "description": "Request object to save multiple catalog groups."
    },
    "FindGroupsResponse": {
      "type": "object",
      "properties": {
        "lastPage": {
          "type": "boolean",
          "description": "Indicates whether the return page is last."
        },
        "pageNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Number of the returned page."
        },
        "totalPages": {
          "type": "integer",
          "format": "int64",
          "description": "The total number of result pages available",
          "minimum": 0
        },
        "totalResults": {
          "type": "integer",
          "format": "int64",
          "description": "The total number of results available",
          "minimum": 0
        },
        "pageContent": {
          "type": "array",
          "description": "The results corresponding to the requested page of data",
          "items": {
            "type": "object",
            "required": [
              "groupId",
              "title",
              "version"
            ],
            "properties": {
              "version": {
                "type": "integer",
                "format": "int64",
                "description": "Version (normally epoch time in millis) representing the version of the object. This field is used to avoid object overrides in environments that allow concurrent modification of data.",
                "minimum": 0
              },
              "tag": {
                "type": "string",
                "description": "Tag to mark the group. This tag is expected to be understood by the client.",
                "minLength": 1,
                "maxLength": 50
              },
              "status": {
                "type": "string",
                "description": "Group status. If set to inactive, indicates that the group is 'deleted' and should not be assigned to the catalog items attributes.<br/>Supported types:<br/><ul><li>ACTIVE: Indicates that object is not active.</li><li>INACTIVE: Indicates that object is active.</li></ul>",
                "enum": [
                  "INACTIVE",
                  "ACTIVE"
                ],
                "properties": {
                  "INACTIVE": {
                    "type": "enumitem",
                    "value": ""
                  },
                  "ACTIVE": {
                    "type": "enumitem",
                    "value": ""
                  }
                },
                "enumitems": "INACTIVE,ACTIVE"
              },
              "groupId": {
                "type": "object",
                "required": [
                  "groupCode"
                ],
                "properties": {
                  "groupCode": {
                    "type": "string",
                    "description": "Group code that uniquely identifies the group per tenant.",
                    "minLength": 1,
                    "maxLength": 100,
                    "pattern": "\\p{Alnum}[\\w-]*"
                  }
                },
                "description": "Represents minimum set of fields that uniquely identifies Group.",
                "_model": "GroupIdData"
              },
              "title": {
                "type": "object",
                "required": [
                  "locale",
                  "value"
                ],
                "properties": {
                  "locale": {
                    "type": "string",
                    "description": "Locale specifies local language."
                  },
                  "value": {
                    "type": "string",
                    "description": "Value has range of the name."
                  }
                },
                "description": "Contains locale and value properties.",
                "_model": "LocalizedTextData"
              }
            },
            "description": "Represents basic view data for a group that can be returned in response to the search operations.",
            "_model": "GroupBasicViewData"
          }
        }
      },
      "description": "Response object for finder methods that returns Group objects matching the given search criteria."
    },
    "GroupBasicViewData": {
      "type": "object",
      "required": [
        "groupId",
        "title",
        "version"
      ],
      "properties": {
        "version": {
          "type": "integer",
          "format": "int64",
          "description": "Version (normally epoch time in millis) representing the version of the object. This field is used to avoid object overrides in environments that allow concurrent modification of data.",
          "minimum": 0
        },
        "tag": {
          "type": "string",
          "description": "Tag to mark the group. This tag is expected to be understood by the client.",
          "minLength": 1,
          "maxLength": 50
        },
        "status": {
          "type": "string",
          "description": "Group status. If set to inactive, indicates that the group is 'deleted' and should not be assigned to the catalog items attributes.<br/>Supported types:<br/><ul><li>ACTIVE: Indicates that object is not active.</li><li>INACTIVE: Indicates that object is active.</li></ul>",
          "enum": [
            "INACTIVE",
            "ACTIVE"
          ],
          "properties": {
            "INACTIVE": {
              "type": "enumitem",
              "value": ""
            },
            "ACTIVE": {
              "type": "enumitem",
              "value": ""
            }
          },
          "enumitems": "INACTIVE,ACTIVE"
        },
        "groupId": {
          "type": "object",
          "required": [
            "groupCode"
          ],
          "properties": {
            "groupCode": {
              "type": "string",
              "description": "Group code that uniquely identifies the group per tenant.",
              "minLength": 1,
              "maxLength": 100,
              "pattern": "\\p{Alnum}[\\w-]*"
            }
          },
          "description": "Represents minimum set of fields that uniquely identifies Group.",
          "_model": "GroupIdData"
        },
        "title": {
          "type": "object",
          "required": [
            "locale",
            "value"
          ],
          "properties": {
            "locale": {
              "type": "string",
              "description": "Locale specifies local language."
            },
            "value": {
              "type": "string",
              "description": "Value has range of the name."
            }
          },
          "description": "Contains locale and value properties.",
          "_model": "LocalizedTextData"
        }
      },
      "description": "Represents basic view data for a group that can be returned in response to the search operations.",
      "_model": "GroupBasicViewData"
    },
    "ItemData": {
      "type": "object",
      "required": [
        "departmentId",
        "merchandiseCategory",
        "nonMerchandise",
        "shortDescription",
        "status",
        "version"
      ],
      "properties": {
        "version": {
          "type": "integer",
          "format": "int64",
          "description": "Version (normally epoch time in millis) representing the version of the object. This field is used to avoid object overrides in environments that allow concurrent modification of data.",
          "minimum": 0
        },
        "packageIdentifiers": {
          "type": "array",
          "description": "Customer specific package identifiers..",
          "items": {
            "type": "object",
            "required": [
              "type",
              "value"
            ],
            "properties": {
              "type": {
                "type": "string",
                "description": "Identifier's type.",
                "minLength": 1,
                "maxLength": 20,
                "pattern": "^\\p{Alnum}[\\w\\s\\-]*$"
              },
              "value": {
                "type": "string",
                "description": "Identifier's value.",
                "minLength": 1,
                "maxLength": 60
              }
            },
            "description": "Data object to store additional specific identifier of the customer for an item. Attributes are used to provideadditional information on the items, for example, the attribute may contain the item ingredients.",
            "_model": "ItemPackageIdData"
          }
        },
        "longDescription": {
          "type": "object",
          "properties": {
            "values": {
              "type": "array",
              "description": "Values containing entries per language (one entry per language is expected).",
              "items": {
                "type": "object",
                "required": [
                  "locale",
                  "value"
                ],
                "properties": {
                  "locale": {
                    "type": "string",
                    "description": "Locale specifies local language."
                  },
                  "value": {
                    "type": "string",
                    "description": "Value has range of the name."
                  }
                },
                "description": "Contains locale and value properties.",
                "_model": "LocalizedTextData"
              }
            }
          },
          "description": "Generic data type that is capable of holding text data in multiple languages.",
          "_model": "MultiLanguageTextData"
        },
        "shortDescription": {},
        "merchandiseCategory": {
          "type": "object",
          "required": [
            "nodeId"
          ],
          "properties": {
            "nodeId": {
              "type": "string",
              "description": "A unique code which is used to identify a node in hierarchy.",
              "minLength": 1,
              "maxLength": 120,
              "pattern": "\\p{Alnum}[\\w-]*"
            }
          },
          "description": "Data Object to identify a node in hierarchy uniquely.",
          "_model": "NodeIdData"
        },
        "alternateCategories": {
          "type": "array",
          "description": "Collection of custom categories nodes associated with the item. No restrictions are placed to  the kind of nodes that can be associated with an item. Nodes may be leaf or non-leaf nodes. They may be from the same root or different roots.",
          "items": {}
        },
        "status": {
          "type": "string",
          "description": "Item status will be used to mark items as active, inactive or other.<br/>Supported types:<br/><ul><li>ACTIVE: Indicates that object is not active.</li><li>INACTIVE: Indicates that object is active.</li></ul>",
          "enum": [
            "INACTIVE",
            "ACTIVE"
          ],
          "properties": {
            "INACTIVE": {
              "type": "enumitem",
              "value": ""
            },
            "ACTIVE": {
              "type": "enumitem",
              "value": ""
            }
          },
          "enumitems": "INACTIVE,ACTIVE"
        },
        "departmentId": {
          "type": "string",
          "description": "The department id.",
          "minLength": 1,
          "maxLength": 100
        },
        "familyCode": {
          "type": "string",
          "description": "The family code of the item.",
          "minLength": 1,
          "maxLength": 2147483647
        },
        "manufacturerCode": {
          "type": "string",
          "description": "The manufacture code of the item.",
          "minLength": 1,
          "maxLength": 2147483647
        },
        "nonMerchandise": {
          "type": "boolean",
          "description": "Whether is a non merchandise or not."
        },
        "dynamicAttributes": {
          "type": "array",
          "description": "Customer or product specific dynamic attributes. These can contain any number of attributes that may drive client application behavior (such as POS logic).",
          "items": {
            "type": "object",
            "required": [
              "attributes",
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "minLength": 1,
                "maxLength": 64,
                "pattern": "\\p{Alnum}[\\w-]*"
              },
              "attributes": {
                "type": "array",
                "description": "Collection of key value data.",
                "items": {
                  "type": "object",
                  "required": [
                    "key"
                  ],
                  "properties": {
                    "key": {
                      "type": "string",
                      "description": "Key that identifies this key value pair."
                    },
                    "value": {
                      "type": "string",
                      "description": "Value associated with the key.",
                      "minLength": 1,
                      "maxLength": 512
                    },
                    "localizedValue": {
                      "type": "object",
                      "properties": {
                        "values": {
                          "type": "array",
                          "description": "Values containing entries per language (one entry per language is expected).",
                          "items": {
                            "type": "object",
                            "required": [
                              "locale",
                              "value"
                            ],
                            "properties": {
                              "locale": {
                                "type": "string",
                                "description": "Locale specifies local language."
                              },
                              "value": {
                                "type": "string",
                                "description": "Value has range of the name."
                              }
                            },
                            "description": "Contains locale and value properties.",
                            "_model": "LocalizedTextData"
                          }
                        }
                      },
                      "description": "Generic data type that is capable of holding text data in multiple languages.",
                      "_model": "MultiLanguageTextData"
                    }
                  },
                  "description": "Contains locale, key and value properties.",
                  "_model": "LocalizedKeyValueData"
                }
              }
            },
            "description": "Contains basic fields describing the dynamic attributes.",
            "_model": "DynamicAttributesData"
          }
        }
      },
      "description": "Defines complete set of properties for item."
    },
    "GetItemsSnapshotResponse": {
      "type": "object",
      "properties": {
        "snapshotVersion": {
          "type": "integer",
          "format": "int64"
        },
        "snapshot": {
          "type": "array",
          "description": "The actual content of the snapshot.",
          "items": {
            "type": "object",
            "required": [
              "departmentId",
              "itemId",
              "merchandiseCategory",
              "nonMerchandise",
              "shortDescription",
              "status",
              "version"
            ],
            "properties": {
              "version": {
                "type": "integer",
                "format": "int64",
                "description": "Version (normally epoch time in millis) representing the version of the object. This field is used to avoid object overrides in environments that allow concurrent modification of data.",
                "minimum": 0
              },
              "packageIdentifiers": {
                "type": "array",
                "description": "Customer specific package identifiers..",
                "items": {
                  "type": "object",
                  "required": [
                    "type",
                    "value"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Identifier's type.",
                      "minLength": 1,
                      "maxLength": 20,
                      "pattern": "^\\p{Alnum}[\\w\\s\\-]*$"
                    },
                    "value": {
                      "type": "string",
                      "description": "Identifier's value.",
                      "minLength": 1,
                      "maxLength": 60
                    }
                  },
                  "description": "Data object to store additional specific identifier of the customer for an item. Attributes are used to provideadditional information on the items, for example, the attribute may contain the item ingredients.",
                  "_model": "ItemPackageIdData"
                }
              },
              "longDescription": {
                "type": "object",
                "properties": {
                  "values": {
                    "type": "array",
                    "description": "Values containing entries per language (one entry per language is expected).",
                    "items": {
                      "type": "object",
                      "required": [
                        "locale",
                        "value"
                      ],
                      "properties": {
                        "locale": {
                          "type": "string",
                          "description": "Locale specifies local language."
                        },
                        "value": {
                          "type": "string",
                          "description": "Value has range of the name."
                        }
                      },
                      "description": "Contains locale and value properties.",
                      "_model": "LocalizedTextData"
                    }
                  }
                },
                "description": "Generic data type that is capable of holding text data in multiple languages.",
                "_model": "MultiLanguageTextData"
              },
              "shortDescription": {},
              "merchandiseCategory": {
                "type": "object",
                "required": [
                  "nodeId"
                ],
                "properties": {
                  "nodeId": {
                    "type": "string",
                    "description": "A unique code which is used to identify a node in hierarchy.",
                    "minLength": 1,
                    "maxLength": 120,
                    "pattern": "\\p{Alnum}[\\w-]*"
                  }
                },
                "description": "Data Object to identify a node in hierarchy uniquely.",
                "_model": "NodeIdData"
              },
              "alternateCategories": {
                "type": "array",
                "description": "Collection of custom categories nodes associated with the item. No restrictions are placed to  the kind of nodes that can be associated with an item. Nodes may be leaf or non-leaf nodes. They may be from the same root or different roots.",
                "items": {}
              },
              "status": {
                "type": "string",
                "description": "Item status will be used to mark items as active, inactive or other.<br/>Supported types:<br/><ul><li>ACTIVE: Indicates that object is not active.</li><li>INACTIVE: Indicates that object is active.</li></ul>",
                "enum": [
                  "INACTIVE",
                  "ACTIVE"
                ],
                "properties": {
                  "INACTIVE": {
                    "type": "enumitem",
                    "value": ""
                  },
                  "ACTIVE": {
                    "type": "enumitem",
                    "value": ""
                  }
                },
                "enumitems": "INACTIVE,ACTIVE"
              },
              "departmentId": {
                "type": "string",
                "description": "The department id.",
                "minLength": 1,
                "maxLength": 100
              },
              "familyCode": {
                "type": "string",
                "description": "The family code of the item.",
                "minLength": 1,
                "maxLength": 2147483647
              },
              "manufacturerCode": {
                "type": "string",
                "description": "The manufacture code of the item.",
                "minLength": 1,
                "maxLength": 2147483647
              },
              "nonMerchandise": {
                "type": "boolean",
                "description": "Whether is a non merchandise or not."
              },
              "dynamicAttributes": {
                "type": "array",
                "description": "Customer or product specific dynamic attributes. These can contain any number of attributes that may drive client application behavior (such as POS logic).",
                "items": {
                  "type": "object",
                  "required": [
                    "attributes",
                    "type"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 64,
                      "pattern": "\\p{Alnum}[\\w-]*"
                    },
                    "attributes": {
                      "type": "array",
                      "description": "Collection of key value data.",
                      "items": {
                        "type": "object",
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "type": "string",
                            "description": "Key that identifies this key value pair."
                          },
                          "value": {
                            "type": "string",
                            "description": "Value associated with the key.",
                            "minLength": 1,
                            "maxLength": 512
                          },
                          "localizedValue": {
                            "type": "object",
                            "properties": {
                              "values": {
                                "type": "array",
                                "description": "Values containing entries per language (one entry per language is expected).",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "locale",
                                    "value"
                                  ],
                                  "properties": {
                                    "locale": {
                                      "type": "string",
                                      "description": "Locale specifies local language."
                                    },
                                    "value": {
                                      "type": "string",
                                      "description": "Value has range of the name."
                                    }
                                  },
                                  "description": "Contains locale and value properties.",
                                  "_model": "LocalizedTextData"
                                }
                              }
                            },
                            "description": "Generic data type that is capable of holding text data in multiple languages.",
                            "_model": "MultiLanguageTextData"
                          }
                        },
                        "description": "Contains locale, key and value properties.",
                        "_model": "LocalizedKeyValueData"
                      }
                    }
                  },
                  "description": "Contains basic fields describing the dynamic attributes.",
                  "_model": "DynamicAttributesData"
                }
              },
              "itemId": {
                "type": "object",
                "required": [
                  "itemCode"
                ],
                "properties": {
                  "itemCode": {
                    "type": "string",
                    "description": "A unique item (unique per Tenant) code which is used to identify the item.",
                    "minLength": 1,
                    "maxLength": 40,
                    "pattern": "\\p{Alnum}[\\w-]*"
                  }
                },
                "description": "Data object to identify an item uniquely.",
                "_model": "ItemIdData"
              },
              "auditTrail": {
                "type": "object",
                "required": [
                  "lastUpdated",
                  "lastUpdatedByUser"
                ],
                "properties": {
                  "lastUpdated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date when the object was last updated."
                  },
                  "lastUpdatedByUser": {
                    "type": "string",
                    "description": "User name of the user that updated the object."
                  }
                },
                "description": "Audit related information that can be associated with objects.",
                "_model": "AuditTrailData"
              }
            },
            "description": "Contains all of the fields of a catalog item, including read-only system generated/assigned fields.",
            "_model": "ItemViewData"
          }
        }
      },
      "description": "Response object containing snapshot data with catalog items."
    },
    "FindItemsResponse": {
      "type": "object",
      "properties": {
        "lastPage": {
          "type": "boolean",
          "description": "Indicates whether the return page is last."
        },
        "pageNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Number of the returned page."
        },
        "totalPages": {
          "type": "integer",
          "format": "int64",
          "description": "The total number of result pages available",
          "minimum": 0
        },
        "totalResults": {
          "type": "integer",
          "format": "int64",
          "description": "The total number of results available",
          "minimum": 0
        },
        "pageContent": {
          "type": "array",
          "description": "The results corresponding to the requested page of data",
          "items": {
            "type": "object",
            "required": [
              "departmentId",
              "itemId",
              "merchandiseCategory",
              "nonMerchandise",
              "version"
            ],
            "properties": {
              "version": {
                "type": "integer",
                "format": "int64",
                "description": "Version (normally epoch time in millis) representing the version of the object. This field is used to avoid object overrides in environments that allow concurrent modification of data.",
                "minimum": 0
              },
              "itemId": {
                "type": "object",
                "required": [
                  "itemCode"
                ],
                "properties": {
                  "itemCode": {
                    "type": "string",
                    "description": "A unique item (unique per Tenant) code which is used to identify the item.",
                    "minLength": 1,
                    "maxLength": 40,
                    "pattern": "\\p{Alnum}[\\w-]*"
                  }
                },
                "description": "Data object to identify an item uniquely.",
                "_model": "ItemIdData"
              },
              "packageIdentifiers": {
                "type": "array",
                "description": "A set of package identifiers with no type specification.",
                "items": {
                  "type": "string"
                }
              },
              "shortDescription": {
                "type": "object",
                "required": [
                  "locale",
                  "value"
                ],
                "properties": {
                  "locale": {
                    "type": "string",
                    "description": "Locale specifies local language."
                  },
                  "value": {
                    "type": "string",
                    "description": "Value has range of the name."
                  }
                },
                "description": "Contains locale and value properties.",
                "_model": "LocalizedTextData"
              },
              "longDescription": {},
              "status": {
                "type": "string",
                "description": "Item status.<br/>Supported types:<br/><ul><li>ACTIVE: Indicates that object is not active.</li><li>INACTIVE: Indicates that object is active.</li></ul>",
                "enum": [
                  "INACTIVE",
                  "ACTIVE"
                ],
                "properties": {
                  "INACTIVE": {
                    "type": "enumitem",
                    "value": ""
                  },
                  "ACTIVE": {
                    "type": "enumitem",
                    "value": ""
                  }
                },
                "enumitems": "INACTIVE,ACTIVE"
              },
              "merchandiseCategory": {
                "type": "object",
                "required": [
                  "nodeId"
                ],
                "properties": {
                  "nodeId": {
                    "type": "string",
                    "description": "A unique code which is used to identify a node in hierarchy.",
                    "minLength": 1,
                    "maxLength": 120,
                    "pattern": "\\p{Alnum}[\\w-]*"
                  }
                },
                "description": "Data Object to identify a node in hierarchy uniquely.",
                "_model": "NodeIdData"
              },
              "departmentId": {
                "type": "string",
                "description": "The department id.",
                "minLength": 1,
                "maxLength": 100
              },
              "familyCode": {
                "type": "string",
                "description": "The family code of the item.",
                "minLength": 1,
                "maxLength": 2147483647
              },
              "manufacturerCode": {
                "type": "string",
                "description": "The manufacture code of the item.",
                "minLength": 1,
                "maxLength": 2147483647
              },
              "nonMerchandise": {
                "type": "boolean",
                "description": "Whether is a non merchandise or not."
              }
            },
            "description": "Data object contains basic view properties for item.",
            "_model": "ItemBasicViewData"
          }
        }
      },
      "description": "Response object for finder methods that returns Item objects matching the given search criteria."
    },
    "ItemBasicViewData": {
      "type": "object",
      "required": [
        "departmentId",
        "itemId",
        "merchandiseCategory",
        "nonMerchandise",
        "version"
      ],
      "properties": {
        "version": {
          "type": "integer",
          "format": "int64",
          "description": "Version (normally epoch time in millis) representing the version of the object. This field is used to avoid object overrides in environments that allow concurrent modification of data.",
          "minimum": 0
        },
        "itemId": {
          "type": "object",
          "required": [
            "itemCode"
          ],
          "properties": {
            "itemCode": {
              "type": "string",
              "description": "A unique item (unique per Tenant) code which is used to identify the item.",
              "minLength": 1,
              "maxLength": 40,
              "pattern": "\\p{Alnum}[\\w-]*"
            }
          },
          "description": "Data object to identify an item uniquely.",
          "_model": "ItemIdData"
        },
        "packageIdentifiers": {
          "type": "array",
          "description": "A set of package identifiers with no type specification.",
          "items": {
            "type": "string"
          }
        },
        "shortDescription": {
          "type": "object",
          "required": [
            "locale",
            "value"
          ],
          "properties": {
            "locale": {
              "type": "string",
              "description": "Locale specifies local language."
            },
            "value": {
              "type": "string",
              "description": "Value has range of the name."
            }
          },
          "description": "Contains locale and value properties.",
          "_model": "LocalizedTextData"
        },
        "longDescription": {},
        "status": {
          "type": "string",
          "description": "Item status.<br/>Supported types:<br/><ul><li>ACTIVE: Indicates that object is not active.</li><li>INACTIVE: Indicates that object is active.</li></ul>",
          "enum": [
            "INACTIVE",
            "ACTIVE"
          ],
          "properties": {
            "INACTIVE": {
              "type": "enumitem",
              "value": ""
            },
            "ACTIVE": {
              "type": "enumitem",
              "value": ""
            }
          },
          "enumitems": "INACTIVE,ACTIVE"
        },
        "merchandiseCategory": {
          "type": "object",
          "required": [
            "nodeId"
          ],
          "properties": {
            "nodeId": {
              "type": "string",
              "description": "A unique code which is used to identify a node in hierarchy.",
              "minLength": 1,
              "maxLength": 120,
              "pattern": "\\p{Alnum}[\\w-]*"
            }
          },
          "description": "Data Object to identify a node in hierarchy uniquely.",
          "_model": "NodeIdData"
        },
        "departmentId": {
          "type": "string",
          "description": "The department id.",
          "minLength": 1,
          "maxLength": 100
        },
        "familyCode": {
          "type": "string",
          "description": "The family code of the item.",
          "minLength": 1,
          "maxLength": 2147483647
        },
        "manufacturerCode": {
          "type": "string",
          "description": "The manufacture code of the item.",
          "minLength": 1,
          "maxLength": 2147483647
        },
        "nonMerchandise": {
          "type": "boolean",
          "description": "Whether is a non merchandise or not."
        }
      },
      "description": "Data object contains basic view properties for item.",
      "_model": "ItemBasicViewData"
    },
    "LinkGroupViewData": {
      "type": "object",
      "required": [
        "linkGroupId",
        "linkGroupType",
        "restriction",
        "status",
        "version"
      ],
      "properties": {
        "version": {
          "type": "integer",
          "format": "int64",
          "description": "Version (normally epoch time in millis) representing the version of the object. This field is used to avoid object overrides in environments that allow concurrent modification of data.",
          "minimum": 0
        },
        "linkGroupType": {
          "type": "string",
          "description": "Type of the link group. May drive behavior of the POS / Client when an item associated with the link group is selected for ordering.<br/>Supported types:<br/><ul><li>DEPOSIT: Identifies a linked deposit, such as bottle deposit, CRV</li><li>MODIFIER: Identifies items that maybe used to modify the order (ingredients, warranty, activation cards, etc.)</li><li>SUGGESTION: Identifies suggestions that may be presented to the user. These suggestions are 'statically' defined in the catalog, as opposed to the suggestions that are dynamic in nature and depend on the transaction context (consumer information, targeted advertisement, etc.).</li><li>SUBSTITUTION: Identifies items that may be used as substitutions for a given item.</li><li>CUSTOM: Custom group type. The API client is expected to understand how handle this type of link groups.</li></ul>",
          "enum": [
            "DEPOSIT",
            "MODIFIER",
            "SUGGESTION",
            "SUBSTITUTION",
            "CUSTOM"
          ],
          "properties": {
            "DEPOSIT": {
              "type": "enumitem",
              "value": ""
            },
            "MODIFIER": {
              "type": "enumitem",
              "value": ""
            },
            "SUGGESTION": {
              "type": "enumitem",
              "value": ""
            },
            "SUBSTITUTION": {
              "type": "enumitem",
              "value": ""
            },
            "CUSTOM": {
              "type": "enumitem",
              "value": ""
            }
          },
          "enumitems": "DEPOSIT,MODIFIER,SUGGESTION,SUBSTITUTION,CUSTOM"
        },
        "description": {
          "type": "object",
          "properties": {
            "values": {
              "type": "array",
              "description": "Values containing entries per language (one entry per language is expected).",
              "items": {
                "type": "object",
                "required": [
                  "locale",
                  "value"
                ],
                "properties": {
                  "locale": {
                    "type": "string",
                    "description": "Locale specifies local language."
                  },
                  "value": {
                    "type": "string",
                    "description": "Value has range of the name."
                  }
                },
                "description": "Contains locale and value properties.",
                "_model": "LocalizedTextData"
              }
            }
          },
          "description": "Generic data type that is capable of holding text data in multiple languages.",
          "_model": "MultiLanguageTextData"
        },
        "tag": {
          "type": "string",
          "description": "Tag to mark the group. This tag is expected to be understood by the client. Tag defines the type of the link group: suggestion, substitutes, kit, deposit, etc.",
          "minLength": 1,
          "maxLength": 50
        },
        "status": {
          "type": "string",
          "description": "Link group status. If set to inactive, indicates that the link group is 'deleted' and should not be assigned to the catalog items attributes.<br/>Supported types:<br/><ul><li>ACTIVE: Indicates that object is not active.</li><li>INACTIVE: Indicates that object is active.</li></ul>",
          "enum": [
            "INACTIVE",
            "ACTIVE"
          ],
          "properties": {
            "INACTIVE": {
              "type": "enumitem",
              "value": ""
            },
            "ACTIVE": {
              "type": "enumitem",
              "value": ""
            }
          },
          "enumitems": "INACTIVE,ACTIVE"
        },
        "restriction": {
          "type": "object",
          "properties": {
            "maxQuantity": {
              "type": "integer",
              "format": "int32",
              "description": "Restriction defining the maximum of item instances (portions, units) can be provided as a part of the link.",
              "minimum": 0
            },
            "minQuantity": {
              "type": "integer",
              "format": "int32",
              "description": "Restriction defining the minimum number of item instances (portions, units) that can be provided as part of the link (group or individual item). For example, the setting of 1 will require at least one item instances to be included with the link. It can be used to define kits or strong linkage such as bottle deposit that must be sold along with the item.",
              "minimum": 0
            },
            "freeQuantity": {
              "type": "integer",
              "format": "int32",
              "description": "Restriction defining the number of item instances (portions, units) that can be provided free as part of the link (group or individual item). For example, the setting of 1 means that one item instance is provided at no charge.",
              "minimum": 0
            },
            "defaultQuantity": {
              "type": "integer",
              "format": "int32",
              "description": "Default setting of the restriction (the client will apply this setting by default). In a general case it should not contradict the min/max restrictions, however, the service will not enforce this validation.",
              "minimum": 0
            }
          },
          "description": "Represents restrictions that are set at the link item or group level.",
          "_model": "LinkRestrictionData"
        },
        "linkItems": {
          "type": "array",
          "description": "Collection of linked items that represents a logically connected group of the catalog items at the enterprise unit level). Linked item reference allows specifying additional attributes at the association level.",
          "items": {
            "type": "object",
            "required": [
              "itemCode",
              "restriction"
            ],
            "properties": {
              "itemCode": {
                "type": "string",
                "description": "A unique item (unique per Tenant) code which is used to identify the item.",
                "minLength": 1,
                "maxLength": 40,
                "pattern": "\\p{Alnum}[\\w-]*"
              },
              "restriction": {
                "type": "object",
                "properties": {
                  "maxQuantity": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Restriction defining the maximum of item instances (portions, units) can be provided as a part of the link.",
                    "minimum": 0
                  },
                  "minQuantity": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Restriction defining the minimum number of item instances (portions, units) that can be provided as part of the link (group or individual item). For example, the setting of 1 will require at least one item instances to be included with the link. It can be used to define kits or strong linkage such as bottle deposit that must be sold along with the item.",
                    "minimum": 0
                  },
                  "freeQuantity": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Restriction defining the number of item instances (portions, units) that can be provided free as part of the link (group or individual item). For example, the setting of 1 means that one item instance is provided at no charge.",
                    "minimum": 0
                  },
                  "defaultQuantity": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Default setting of the restriction (the client will apply this setting by default). In a general case it should not contradict the min/max restrictions, however, the service will not enforce this validation.",
                    "minimum": 0
                  }
                },
                "description": "Represents restrictions that are set at the link item or group level.",
                "_model": "LinkRestrictionData"
              },
              "itemFactor": {
                "type": "integer",
                "format": "int32",
                "minimum": 1
              },
              "dynamicAttributes": {
                "type": "array",
                "description": "Dynamic attributes stored at the linked group level. These may contain domain-specific attributes such as maxportions (e.g. two portions of ketchup are allowed with one sale of a hamburger.",
                "items": {
                  "type": "object",
                  "required": [
                    "attributes",
                    "type"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 64,
                      "pattern": "\\p{Alnum}[\\w-]*"
                    },
                    "attributes": {
                      "type": "array",
                      "description": "Collection of key value data.",
                      "items": {
                        "type": "object",
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "type": "string",
                            "description": "Key that identifies this key value pair."
                          },
                          "value": {
                            "type": "string",
                            "description": "Value associated with the key.",
                            "minLength": 1,
                            "maxLength": 512
                          },
                          "localizedValue": {
                            "type": "object",
                            "properties": {
                              "values": {
                                "type": "array",
                                "description": "Values containing entries per language (one entry per language is expected).",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "locale",
                                    "value"
                                  ],
                                  "properties": {
                                    "locale": {
                                      "type": "string",
                                      "description": "Locale specifies local language."
                                    },
                                    "value": {
                                      "type": "string",
                                      "description": "Value has range of the name."
                                    }
                                  },
                                  "description": "Contains locale and value properties.",
                                  "_model": "LocalizedTextData"
                                }
                              }
                            },
                            "description": "Generic data type that is capable of holding text data in multiple languages.",
                            "_model": "MultiLanguageTextData"
                          }
                        },
                        "description": "Contains locale, key and value properties.",
                        "_model": "LocalizedKeyValueData"
                      }
                    }
                  },
                  "description": "Contains basic fields describing the dynamic attributes.",
                  "_model": "DynamicAttributesData"
                }
              }
            },
            "description": "Represents a denormalized reference to a linked item. Item linking allows creating product kits: e.g. products that together present a single offering. For example TV-set and warranty, hamburger and ketchup.",
            "_model": "LinkedItemReferenceData"
          }
        },
        "substitutionGroup": {
          "type": "object",
          "required": [
            "linkGroupCode"
          ],
          "properties": {
            "linkGroupCode": {
              "type": "string",
              "description": "A unique (per tenant) link group code that identifies the link group.",
              "minLength": 1,
              "maxLength": 100,
              "pattern": "\\p{Alnum}[\\w-]*"
            }
          },
          "description": "Represents minimum set of fields that uniquely identify a link group.",
          "_model": "LinkGroupIdData"
        },
        "dynamicAttributes": {
          "type": "array",
          "description": "Customer specific dynamic attributes.",
          "items": {
            "type": "object",
            "required": [
              "attributes",
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "minLength": 1,
                "maxLength": 64,
                "pattern": "\\p{Alnum}[\\w-]*"
              },
              "attributes": {
                "type": "array",
                "description": "Collection of key value data.",
                "items": {
                  "type": "object",
                  "required": [
                    "key"
                  ],
                  "properties": {
                    "key": {
                      "type": "string",
                      "description": "Key that identifies this key value pair."
                    },
                    "value": {
                      "type": "string",
                      "description": "Value associated with the key.",
                      "minLength": 1,
                      "maxLength": 512
                    },
                    "localizedValue": {
                      "type": "object",
                      "properties": {
                        "values": {
                          "type": "array",
                          "description": "Values containing entries per language (one entry per language is expected).",
                          "items": {
                            "type": "object",
                            "required": [
                              "locale",
                              "value"
                            ],
                            "properties": {
                              "locale": {
                                "type": "string",
                                "description": "Locale specifies local language."
                              },
                              "value": {
                                "type": "string",
                                "description": "Value has range of the name."
                              }
                            },
                            "description": "Contains locale and value properties.",
                            "_model": "LocalizedTextData"
                          }
                        }
                      },
                      "description": "Generic data type that is capable of holding text data in multiple languages.",
                      "_model": "MultiLanguageTextData"
                    }
                  },
                  "description": "Contains locale, key and value properties.",
                  "_model": "LocalizedKeyValueData"
                }
              }
            },
            "description": "Contains basic fields describing the dynamic attributes.",
            "_model": "DynamicAttributesData"
          }
        },
        "linkGroupId": {},
        "enterpriseUnitId": {
          "type": "string",
          "description": "Enterprise unit identifier that may be used for filtering of the link groups that are relevant for the caller. It is assumed that if a request to get link groups is provided with the enterprise unit specified, then all link groups that match the enterprise unit exactly, or groups with the enterprise units that are parents of the provided enterprise unit or all groups that don't have enterprise unit specified (global groups) are applicable."
        },
        "auditTrail": {
          "type": "object",
          "required": [
            "lastUpdated",
            "lastUpdatedByUser"
          ],
          "properties": {
            "lastUpdated": {
              "type": "string",
              "format": "date-time",
              "description": "Date when the object was last updated."
            },
            "lastUpdatedByUser": {
              "type": "string",
              "description": "User name of the user that updated the object."
            }
          },
          "description": "Audit related information that can be associated with objects.",
          "_model": "AuditTrailData"
        }
      },
      "description": "Represents a complete set of attributes for a link group of catalog items, including read-only and system defined fields.",
      "_model": "LinkGroupViewData"
    },
    "LinkRestrictionData": {
      "type": "object",
      "properties": {
        "maxQuantity": {
          "type": "integer",
          "format": "int32",
          "description": "Restriction defining the maximum of item instances (portions, units) can be provided as a part of the link.",
          "minimum": 0
        },
        "minQuantity": {
          "type": "integer",
          "format": "int32",
          "description": "Restriction defining the minimum number of item instances (portions, units) that can be provided as part of the link (group or individual item). For example, the setting of 1 will require at least one item instances to be included with the link. It can be used to define kits or strong linkage such as bottle deposit that must be sold along with the item.",
          "minimum": 0
        },
        "freeQuantity": {
          "type": "integer",
          "format": "int32",
          "description": "Restriction defining the number of item instances (portions, units) that can be provided free as part of the link (group or individual item). For example, the setting of 1 means that one item instance is provided at no charge.",
          "minimum": 0
        },
        "defaultQuantity": {
          "type": "integer",
          "format": "int32",
          "description": "Default setting of the restriction (the client will apply this setting by default). In a general case it should not contradict the min/max restrictions, however, the service will not enforce this validation.",
          "minimum": 0
        }
      },
      "description": "Represents restrictions that are set at the link item or group level.",
      "_model": "LinkRestrictionData"
    },
    "LinkedItemReferenceData": {
      "type": "object",
      "required": [
        "itemCode",
        "restriction"
      ],
      "properties": {
        "itemCode": {
          "type": "string",
          "description": "A unique item (unique per Tenant) code which is used to identify the item.",
          "minLength": 1,
          "maxLength": 40,
          "pattern": "\\p{Alnum}[\\w-]*"
        },
        "restriction": {
          "type": "object",
          "properties": {
            "maxQuantity": {
              "type": "integer",
              "format": "int32",
              "description": "Restriction defining the maximum of item instances (portions, units) can be provided as a part of the link.",
              "minimum": 0
            },
            "minQuantity": {
              "type": "integer",
              "format": "int32",
              "description": "Restriction defining the minimum number of item instances (portions, units) that can be provided as part of the link (group or individual item). For example, the setting of 1 will require at least one item instances to be included with the link. It can be used to define kits or strong linkage such as bottle deposit that must be sold along with the item.",
              "minimum": 0
            },
            "freeQuantity": {
              "type": "integer",
              "format": "int32",
              "description": "Restriction defining the number of item instances (portions, units) that can be provided free as part of the link (group or individual item). For example, the setting of 1 means that one item instance is provided at no charge.",
              "minimum": 0
            },
            "defaultQuantity": {
              "type": "integer",
              "format": "int32",
              "description": "Default setting of the restriction (the client will apply this setting by default). In a general case it should not contradict the min/max restrictions, however, the service will not enforce this validation.",
              "minimum": 0
            }
          },
          "description": "Represents restrictions that are set at the link item or group level.",
          "_model": "LinkRestrictionData"
        },
        "itemFactor": {
          "type": "integer",
          "format": "int32",
          "minimum": 1
        },
        "dynamicAttributes": {
          "type": "array",
          "description": "Dynamic attributes stored at the linked group level. These may contain domain-specific attributes such as maxportions (e.g. two portions of ketchup are allowed with one sale of a hamburger.",
          "items": {
            "type": "object",
            "required": [
              "attributes",
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "minLength": 1,
                "maxLength": 64,
                "pattern": "\\p{Alnum}[\\w-]*"
              },
              "attributes": {
                "type": "array",
                "description": "Collection of key value data.",
                "items": {
                  "type": "object",
                  "required": [
                    "key"
                  ],
                  "properties": {
                    "key": {
                      "type": "string",
                      "description": "Key that identifies this key value pair."
                    },
                    "value": {
                      "type": "string",
                      "description": "Value associated with the key.",
                      "minLength": 1,
                      "maxLength": 512
                    },
                    "localizedValue": {
                      "type": "object",
                      "properties": {
                        "values": {
                          "type": "array",
                          "description": "Values containing entries per language (one entry per language is expected).",
                          "items": {
                            "type": "object",
                            "required": [
                              "locale",
                              "value"
                            ],
                            "properties": {
                              "locale": {
                                "type": "string",
                                "description": "Locale specifies local language."
                              },
                              "value": {
                                "type": "string",
                                "description": "Value has range of the name."
                              }
                            },
                            "description": "Contains locale and value properties.",
                            "_model": "LocalizedTextData"
                          }
                        }
                      },
                      "description": "Generic data type that is capable of holding text data in multiple languages.",
                      "_model": "MultiLanguageTextData"
                    }
                  },
                  "description": "Contains locale, key and value properties.",
                  "_model": "LocalizedKeyValueData"
                }
              }
            },
            "description": "Contains basic fields describing the dynamic attributes.",
            "_model": "DynamicAttributesData"
          }
        }
      },
      "description": "Represents a denormalized reference to a linked item. Item linking allows creating product kits: e.g. products that together present a single offering. For example TV-set and warranty, hamburger and ketchup.",
      "_model": "LinkedItemReferenceData"
    },
    "LinkGroupData": {
      "type": "object",
      "required": [
        "linkGroupType",
        "restriction",
        "status",
        "version"
      ],
      "properties": {
        "version": {
          "type": "integer",
          "format": "int64",
          "description": "Version (normally epoch time in millis) representing the version of the object. This field is used to avoid object overrides in environments that allow concurrent modification of data.",
          "minimum": 0
        },
        "linkGroupType": {
          "type": "string",
          "description": "Type of the link group. May drive behavior of the POS / Client when an item associated with the link group is selected for ordering.<br/>Supported types:<br/><ul><li>DEPOSIT: Identifies a linked deposit, such as bottle deposit, CRV</li><li>MODIFIER: Identifies items that maybe used to modify the order (ingredients, warranty, activation cards, etc.)</li><li>SUGGESTION: Identifies suggestions that may be presented to the user. These suggestions are 'statically' defined in the catalog, as opposed to the suggestions that are dynamic in nature and depend on the transaction context (consumer information, targeted advertisement, etc.).</li><li>SUBSTITUTION: Identifies items that may be used as substitutions for a given item.</li><li>CUSTOM: Custom group type. The API client is expected to understand how handle this type of link groups.</li></ul>",
          "enum": [
            "DEPOSIT",
            "MODIFIER",
            "SUGGESTION",
            "SUBSTITUTION",
            "CUSTOM"
          ],
          "properties": {
            "DEPOSIT": {
              "type": "enumitem",
              "value": ""
            },
            "MODIFIER": {
              "type": "enumitem",
              "value": ""
            },
            "SUGGESTION": {
              "type": "enumitem",
              "value": ""
            },
            "SUBSTITUTION": {
              "type": "enumitem",
              "value": ""
            },
            "CUSTOM": {
              "type": "enumitem",
              "value": ""
            }
          },
          "enumitems": "DEPOSIT,MODIFIER,SUGGESTION,SUBSTITUTION,CUSTOM"
        },
        "description": {
          "type": "object",
          "properties": {
            "values": {
              "type": "array",
              "description": "Values containing entries per language (one entry per language is expected).",
              "items": {
                "type": "object",
                "required": [
                  "locale",
                  "value"
                ],
                "properties": {
                  "locale": {
                    "type": "string",
                    "description": "Locale specifies local language."
                  },
                  "value": {
                    "type": "string",
                    "description": "Value has range of the name."
                  }
                },
                "description": "Contains locale and value properties.",
                "_model": "LocalizedTextData"
              }
            }
          },
          "description": "Generic data type that is capable of holding text data in multiple languages.",
          "_model": "MultiLanguageTextData"
        },
        "tag": {
          "type": "string",
          "description": "Tag to mark the group. This tag is expected to be understood by the client. Tag defines the type of the link group: suggestion, substitutes, kit, deposit, etc.",
          "minLength": 1,
          "maxLength": 50
        },
        "status": {
          "type": "string",
          "description": "Link group status. If set to inactive, indicates that the link group is 'deleted' and should not be assigned to the catalog items attributes.<br/>Supported types:<br/><ul><li>ACTIVE: Indicates that object is not active.</li><li>INACTIVE: Indicates that object is active.</li></ul>",
          "enum": [
            "INACTIVE",
            "ACTIVE"
          ],
          "properties": {
            "INACTIVE": {
              "type": "enumitem",
              "value": ""
            },
            "ACTIVE": {
              "type": "enumitem",
              "value": ""
            }
          },
          "enumitems": "INACTIVE,ACTIVE"
        },
        "restriction": {
          "type": "object",
          "properties": {
            "maxQuantity": {
              "type": "integer",
              "format": "int32",
              "description": "Restriction defining the maximum of item instances (portions, units) can be provided as a part of the link.",
              "minimum": 0
            },
            "minQuantity": {
              "type": "integer",
              "format": "int32",
              "description": "Restriction defining the minimum number of item instances (portions, units) that can be provided as part of the link (group or individual item). For example, the setting of 1 will require at least one item instances to be included with the link. It can be used to define kits or strong linkage such as bottle deposit that must be sold along with the item.",
              "minimum": 0
            },
            "freeQuantity": {
              "type": "integer",
              "format": "int32",
              "description": "Restriction defining the number of item instances (portions, units) that can be provided free as part of the link (group or individual item). For example, the setting of 1 means that one item instance is provided at no charge.",
              "minimum": 0
            },
            "defaultQuantity": {
              "type": "integer",
              "format": "int32",
              "description": "Default setting of the restriction (the client will apply this setting by default). In a general case it should not contradict the min/max restrictions, however, the service will not enforce this validation.",
              "minimum": 0
            }
          },
          "description": "Represents restrictions that are set at the link item or group level.",
          "_model": "LinkRestrictionData"
        },
        "linkItems": {
          "type": "array",
          "description": "Collection of linked items that represents a logically connected group of the catalog items at the enterprise unit level). Linked item reference allows specifying additional attributes at the association level.",
          "items": {
            "type": "object",
            "required": [
              "itemCode",
              "restriction"
            ],
            "properties": {
              "itemCode": {
                "type": "string",
                "description": "A unique item (unique per Tenant) code which is used to identify the item.",
                "minLength": 1,
                "maxLength": 40,
                "pattern": "\\p{Alnum}[\\w-]*"
              },
              "restriction": {
                "type": "object",
                "properties": {
                  "maxQuantity": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Restriction defining the maximum of item instances (portions, units) can be provided as a part of the link.",
                    "minimum": 0
                  },
                  "minQuantity": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Restriction defining the minimum number of item instances (portions, units) that can be provided as part of the link (group or individual item). For example, the setting of 1 will require at least one item instances to be included with the link. It can be used to define kits or strong linkage such as bottle deposit that must be sold along with the item.",
                    "minimum": 0
                  },
                  "freeQuantity": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Restriction defining the number of item instances (portions, units) that can be provided free as part of the link (group or individual item). For example, the setting of 1 means that one item instance is provided at no charge.",
                    "minimum": 0
                  },
                  "defaultQuantity": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Default setting of the restriction (the client will apply this setting by default). In a general case it should not contradict the min/max restrictions, however, the service will not enforce this validation.",
                    "minimum": 0
                  }
                },
                "description": "Represents restrictions that are set at the link item or group level.",
                "_model": "LinkRestrictionData"
              },
              "itemFactor": {
                "type": "integer",
                "format": "int32",
                "minimum": 1
              },
              "dynamicAttributes": {
                "type": "array",
                "description": "Dynamic attributes stored at the linked group level. These may contain domain-specific attributes such as maxportions (e.g. two portions of ketchup are allowed with one sale of a hamburger.",
                "items": {
                  "type": "object",
                  "required": [
                    "attributes",
                    "type"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 64,
                      "pattern": "\\p{Alnum}[\\w-]*"
                    },
                    "attributes": {
                      "type": "array",
                      "description": "Collection of key value data.",
                      "items": {
                        "type": "object",
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "type": "string",
                            "description": "Key that identifies this key value pair."
                          },
                          "value": {
                            "type": "string",
                            "description": "Value associated with the key.",
                            "minLength": 1,
                            "maxLength": 512
                          },
                          "localizedValue": {
                            "type": "object",
                            "properties": {
                              "values": {
                                "type": "array",
                                "description": "Values containing entries per language (one entry per language is expected).",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "locale",
                                    "value"
                                  ],
                                  "properties": {
                                    "locale": {
                                      "type": "string",
                                      "description": "Locale specifies local language."
                                    },
                                    "value": {
                                      "type": "string",
                                      "description": "Value has range of the name."
                                    }
                                  },
                                  "description": "Contains locale and value properties.",
                                  "_model": "LocalizedTextData"
                                }
                              }
                            },
                            "description": "Generic data type that is capable of holding text data in multiple languages.",
                            "_model": "MultiLanguageTextData"
                          }
                        },
                        "description": "Contains locale, key and value properties.",
                        "_model": "LocalizedKeyValueData"
                      }
                    }
                  },
                  "description": "Contains basic fields describing the dynamic attributes.",
                  "_model": "DynamicAttributesData"
                }
              }
            },
            "description": "Represents a denormalized reference to a linked item. Item linking allows creating product kits: e.g. products that together present a single offering. For example TV-set and warranty, hamburger and ketchup.",
            "_model": "LinkedItemReferenceData"
          }
        },
        "substitutionGroup": {
          "type": "object",
          "required": [
            "linkGroupCode"
          ],
          "properties": {
            "linkGroupCode": {
              "type": "string",
              "description": "A unique (per tenant) link group code that identifies the link group.",
              "minLength": 1,
              "maxLength": 100,
              "pattern": "\\p{Alnum}[\\w-]*"
            }
          },
          "description": "Represents minimum set of fields that uniquely identify a link group.",
          "_model": "LinkGroupIdData"
        },
        "dynamicAttributes": {
          "type": "array",
          "description": "Customer specific dynamic attributes.",
          "items": {
            "type": "object",
            "required": [
              "attributes",
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "minLength": 1,
                "maxLength": 64,
                "pattern": "\\p{Alnum}[\\w-]*"
              },
              "attributes": {
                "type": "array",
                "description": "Collection of key value data.",
                "items": {
                  "type": "object",
                  "required": [
                    "key"
                  ],
                  "properties": {
                    "key": {
                      "type": "string",
                      "description": "Key that identifies this key value pair."
                    },
                    "value": {
                      "type": "string",
                      "description": "Value associated with the key.",
                      "minLength": 1,
                      "maxLength": 512
                    },
                    "localizedValue": {
                      "type": "object",
                      "properties": {
                        "values": {
                          "type": "array",
                          "description": "Values containing entries per language (one entry per language is expected).",
                          "items": {
                            "type": "object",
                            "required": [
                              "locale",
                              "value"
                            ],
                            "properties": {
                              "locale": {
                                "type": "string",
                                "description": "Locale specifies local language."
                              },
                              "value": {
                                "type": "string",
                                "description": "Value has range of the name."
                              }
                            },
                            "description": "Contains locale and value properties.",
                            "_model": "LocalizedTextData"
                          }
                        }
                      },
                      "description": "Generic data type that is capable of holding text data in multiple languages.",
                      "_model": "MultiLanguageTextData"
                    }
                  },
                  "description": "Contains locale, key and value properties.",
                  "_model": "LocalizedKeyValueData"
                }
              }
            },
            "description": "Contains basic fields describing the dynamic attributes.",
            "_model": "DynamicAttributesData"
          }
        }
      },
      "description": "Link groups allow linking catalog items with other items to implement use cases such as kits, suggestions, substitutes."
    },
    "GetLinkGroupsSnapshotResponse": {
      "type": "object",
      "properties": {
        "snapshotVersion": {
          "type": "integer",
          "format": "int64"
        },
        "snapshot": {
          "type": "array",
          "description": "The actual content of the snapshot.",
          "items": {
            "type": "object",
            "required": [
              "linkGroupId",
              "linkGroupType",
              "restriction",
              "status",
              "version"
            ],
            "properties": {
              "version": {
                "type": "integer",
                "format": "int64",
                "description": "Version (normally epoch time in millis) representing the version of the object. This field is used to avoid object overrides in environments that allow concurrent modification of data.",
                "minimum": 0
              },
              "linkGroupType": {
                "type": "string",
                "description": "Type of the link group. May drive behavior of the POS / Client when an item associated with the link group is selected for ordering.<br/>Supported types:<br/><ul><li>DEPOSIT: Identifies a linked deposit, such as bottle deposit, CRV</li><li>MODIFIER: Identifies items that maybe used to modify the order (ingredients, warranty, activation cards, etc.)</li><li>SUGGESTION: Identifies suggestions that may be presented to the user. These suggestions are 'statically' defined in the catalog, as opposed to the suggestions that are dynamic in nature and depend on the transaction context (consumer information, targeted advertisement, etc.).</li><li>SUBSTITUTION: Identifies items that may be used as substitutions for a given item.</li><li>CUSTOM: Custom group type. The API client is expected to understand how handle this type of link groups.</li></ul>",
                "enum": [
                  "DEPOSIT",
                  "MODIFIER",
                  "SUGGESTION",
                  "SUBSTITUTION",
                  "CUSTOM"
                ],
                "properties": {
                  "DEPOSIT": {
                    "type": "enumitem",
                    "value": ""
                  },
                  "MODIFIER": {
                    "type": "enumitem",
                    "value": ""
                  },
                  "SUGGESTION": {
                    "type": "enumitem",
                    "value": ""
                  },
                  "SUBSTITUTION": {
                    "type": "enumitem",
                    "value": ""
                  },
                  "CUSTOM": {
                    "type": "enumitem",
                    "value": ""
                  }
                },
                "enumitems": "DEPOSIT,MODIFIER,SUGGESTION,SUBSTITUTION,CUSTOM"
              },
              "description": {
                "type": "object",
                "properties": {
                  "values": {
                    "type": "array",
                    "description": "Values containing entries per language (one entry per language is expected).",
                    "items": {
                      "type": "object",
                      "required": [
                        "locale",
                        "value"
                      ],
                      "properties": {
                        "locale": {
                          "type": "string",
                          "description": "Locale specifies local language."
                        },
                        "value": {
                          "type": "string",
                          "description": "Value has range of the name."
                        }
                      },
                      "description": "Contains locale and value properties.",
                      "_model": "LocalizedTextData"
                    }
                  }
                },
                "description": "Generic data type that is capable of holding text data in multiple languages.",
                "_model": "MultiLanguageTextData"
              },
              "tag": {
                "type": "string",
                "description": "Tag to mark the group. This tag is expected to be understood by the client. Tag defines the type of the link group: suggestion, substitutes, kit, deposit, etc.",
                "minLength": 1,
                "maxLength": 50
              },
              "status": {
                "type": "string",
                "description": "Link group status. If set to inactive, indicates that the link group is 'deleted' and should not be assigned to the catalog items attributes.<br/>Supported types:<br/><ul><li>ACTIVE: Indicates that object is not active.</li><li>INACTIVE: Indicates that object is active.</li></ul>",
                "enum": [
                  "INACTIVE",
                  "ACTIVE"
                ],
                "properties": {
                  "INACTIVE": {
                    "type": "enumitem",
                    "value": ""
                  },
                  "ACTIVE": {
                    "type": "enumitem",
                    "value": ""
                  }
                },
                "enumitems": "INACTIVE,ACTIVE"
              },
              "restriction": {
                "type": "object",
                "properties": {
                  "maxQuantity": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Restriction defining the maximum of item instances (portions, units) can be provided as a part of the link.",
                    "minimum": 0
                  },
                  "minQuantity": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Restriction defining the minimum number of item instances (portions, units) that can be provided as part of the link (group or individual item). For example, the setting of 1 will require at least one item instances to be included with the link. It can be used to define kits or strong linkage such as bottle deposit that must be sold along with the item.",
                    "minimum": 0
                  },
                  "freeQuantity": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Restriction defining the number of item instances (portions, units) that can be provided free as part of the link (group or individual item). For example, the setting of 1 means that one item instance is provided at no charge.",
                    "minimum": 0
                  },
                  "defaultQuantity": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Default setting of the restriction (the client will apply this setting by default). In a general case it should not contradict the min/max restrictions, however, the service will not enforce this validation.",
                    "minimum": 0
                  }
                },
                "description": "Represents restrictions that are set at the link item or group level.",
                "_model": "LinkRestrictionData"
              },
              "linkItems": {
                "type": "array",
                "description": "Collection of linked items that represents a logically connected group of the catalog items at the enterprise unit level). Linked item reference allows specifying additional attributes at the association level.",
                "items": {
                  "type": "object",
                  "required": [
                    "itemCode",
                    "restriction"
                  ],
                  "properties": {
                    "itemCode": {
                      "type": "string",
                      "description": "A unique item (unique per Tenant) code which is used to identify the item.",
                      "minLength": 1,
                      "maxLength": 40,
                      "pattern": "\\p{Alnum}[\\w-]*"
                    },
                    "restriction": {
                      "type": "object",
                      "properties": {
                        "maxQuantity": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Restriction defining the maximum of item instances (portions, units) can be provided as a part of the link.",
                          "minimum": 0
                        },
                        "minQuantity": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Restriction defining the minimum number of item instances (portions, units) that can be provided as part of the link (group or individual item). For example, the setting of 1 will require at least one item instances to be included with the link. It can be used to define kits or strong linkage such as bottle deposit that must be sold along with the item.",
                          "minimum": 0
                        },
                        "freeQuantity": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Restriction defining the number of item instances (portions, units) that can be provided free as part of the link (group or individual item). For example, the setting of 1 means that one item instance is provided at no charge.",
                          "minimum": 0
                        },
                        "defaultQuantity": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Default setting of the restriction (the client will apply this setting by default). In a general case it should not contradict the min/max restrictions, however, the service will not enforce this validation.",
                          "minimum": 0
                        }
                      },
                      "description": "Represents restrictions that are set at the link item or group level.",
                      "_model": "LinkRestrictionData"
                    },
                    "itemFactor": {
                      "type": "integer",
                      "format": "int32",
                      "minimum": 1
                    },
                    "dynamicAttributes": {
                      "type": "array",
                      "description": "Dynamic attributes stored at the linked group level. These may contain domain-specific attributes such as maxportions (e.g. two portions of ketchup are allowed with one sale of a hamburger.",
                      "items": {
                        "type": "object",
                        "required": [
                          "attributes",
                          "type"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 64,
                            "pattern": "\\p{Alnum}[\\w-]*"
                          },
                          "attributes": {
                            "type": "array",
                            "description": "Collection of key value data.",
                            "items": {
                              "type": "object",
                              "required": [
                                "key"
                              ],
                              "properties": {
                                "key": {
                                  "type": "string",
                                  "description": "Key that identifies this key value pair."
                                },
                                "value": {
                                  "type": "string",
                                  "description": "Value associated with the key.",
                                  "minLength": 1,
                                  "maxLength": 512
                                },
                                "localizedValue": {
                                  "type": "object",
                                  "properties": {
                                    "values": {
                                      "type": "array",
                                      "description": "Values containing entries per language (one entry per language is expected).",
                                      "items": {
                                        "type": "object",
                                        "required": [
                                          "locale",
                                          "value"
                                        ],
                                        "properties": {
                                          "locale": {
                                            "type": "string",
                                            "description": "Locale specifies local language."
                                          },
                                          "value": {
                                            "type": "string",
                                            "description": "Value has range of the name."
                                          }
                                        },
                                        "description": "Contains locale and value properties.",
                                        "_model": "LocalizedTextData"
                                      }
                                    }
                                  },
                                  "description": "Generic data type that is capable of holding text data in multiple languages.",
                                  "_model": "MultiLanguageTextData"
                                }
                              },
                              "description": "Contains locale, key and value properties.",
                              "_model": "LocalizedKeyValueData"
                            }
                          }
                        },
                        "description": "Contains basic fields describing the dynamic attributes.",
                        "_model": "DynamicAttributesData"
                      }
                    }
                  },
                  "description": "Represents a denormalized reference to a linked item. Item linking allows creating product kits: e.g. products that together present a single offering. For example TV-set and warranty, hamburger and ketchup.",
                  "_model": "LinkedItemReferenceData"
                }
              },
              "substitutionGroup": {
                "type": "object",
                "required": [
                  "linkGroupCode"
                ],
                "properties": {
                  "linkGroupCode": {
                    "type": "string",
                    "description": "A unique (per tenant) link group code that identifies the link group.",
                    "minLength": 1,
                    "maxLength": 100,
                    "pattern": "\\p{Alnum}[\\w-]*"
                  }
                },
                "description": "Represents minimum set of fields that uniquely identify a link group.",
                "_model": "LinkGroupIdData"
              },
              "dynamicAttributes": {
                "type": "array",
                "description": "Customer specific dynamic attributes.",
                "items": {
                  "type": "object",
                  "required": [
                    "attributes",
                    "type"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 64,
                      "pattern": "\\p{Alnum}[\\w-]*"
                    },
                    "attributes": {
                      "type": "array",
                      "description": "Collection of key value data.",
                      "items": {
                        "type": "object",
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "type": "string",
                            "description": "Key that identifies this key value pair."
                          },
                          "value": {
                            "type": "string",
                            "description": "Value associated with the key.",
                            "minLength": 1,
                            "maxLength": 512
                          },
                          "localizedValue": {
                            "type": "object",
                            "properties": {
                              "values": {
                                "type": "array",
                                "description": "Values containing entries per language (one entry per language is expected).",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "locale",
                                    "value"
                                  ],
                                  "properties": {
                                    "locale": {
                                      "type": "string",
                                      "description": "Locale specifies local language."
                                    },
                                    "value": {
                                      "type": "string",
                                      "description": "Value has range of the name."
                                    }
                                  },
                                  "description": "Contains locale and value properties.",
                                  "_model": "LocalizedTextData"
                                }
                              }
                            },
                            "description": "Generic data type that is capable of holding text data in multiple languages.",
                            "_model": "MultiLanguageTextData"
                          }
                        },
                        "description": "Contains locale, key and value properties.",
                        "_model": "LocalizedKeyValueData"
                      }
                    }
                  },
                  "description": "Contains basic fields describing the dynamic attributes.",
                  "_model": "DynamicAttributesData"
                }
              },
              "linkGroupId": {},
              "enterpriseUnitId": {
                "type": "string",
                "description": "Enterprise unit identifier that may be used for filtering of the link groups that are relevant for the caller. It is assumed that if a request to get link groups is provided with the enterprise unit specified, then all link groups that match the enterprise unit exactly, or groups with the enterprise units that are parents of the provided enterprise unit or all groups that don't have enterprise unit specified (global groups) are applicable."
              },
              "auditTrail": {
                "type": "object",
                "required": [
                  "lastUpdated",
                  "lastUpdatedByUser"
                ],
                "properties": {
                  "lastUpdated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date when the object was last updated."
                  },
                  "lastUpdatedByUser": {
                    "type": "string",
                    "description": "User name of the user that updated the object."
                  }
                },
                "description": "Audit related information that can be associated with objects.",
                "_model": "AuditTrailData"
              }
            },
            "description": "Represents a complete set of attributes for a link group of catalog items, including read-only and system defined fields.",
            "_model": "LinkGroupViewData"
          }
        }
      },
      "description": "Response object containing snapshot data with catalog link groups."
    },
    "FindLinkGroupsResponse": {
      "type": "object",
      "properties": {
        "lastPage": {
          "type": "boolean",
          "description": "Indicates whether the return page is last."
        },
        "pageNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Number of the returned page."
        },
        "totalPages": {
          "type": "integer",
          "format": "int64",
          "description": "The total number of result pages available",
          "minimum": 0
        },
        "totalResults": {
          "type": "integer",
          "format": "int64",
          "description": "The total number of results available",
          "minimum": 0
        },
        "pageContent": {
          "type": "array",
          "description": "The results corresponding to the requested page of data",
          "items": {
            "type": "object",
            "required": [
              "linkGroupId",
              "linkGroupType",
              "status",
              "version"
            ],
            "properties": {
              "version": {
                "type": "integer",
                "format": "int64",
                "description": "Version (normally epoch time in millis) representing the version of the object. This field is used to avoid object overrides in environments that allow concurrent modification of data.",
                "minimum": 0
              },
              "linkGroupType": {
                "type": "string",
                "description": "Type of the link group. May drive behavior of the POS / Client when an item associated with the link group is selected for ordering.<br/>Supported types:<br/><ul><li>DEPOSIT: Identifies a linked deposit, such as bottle deposit, CRV</li><li>MODIFIER: Identifies items that maybe used to modify the order (ingredients, warranty, activation cards, etc.)</li><li>SUGGESTION: Identifies suggestions that may be presented to the user. These suggestions are 'statically' defined in the catalog, as opposed to the suggestions that are dynamic in nature and depend on the transaction context (consumer information, targeted advertisement, etc.).</li><li>SUBSTITUTION: Identifies items that may be used as substitutions for a given item.</li><li>CUSTOM: Custom group type. The API client is expected to understand how handle this type of link groups.</li></ul>",
                "enum": [
                  "DEPOSIT",
                  "MODIFIER",
                  "SUGGESTION",
                  "SUBSTITUTION",
                  "CUSTOM"
                ],
                "properties": {
                  "DEPOSIT": {
                    "type": "enumitem",
                    "value": ""
                  },
                  "MODIFIER": {
                    "type": "enumitem",
                    "value": ""
                  },
                  "SUGGESTION": {
                    "type": "enumitem",
                    "value": ""
                  },
                  "SUBSTITUTION": {
                    "type": "enumitem",
                    "value": ""
                  },
                  "CUSTOM": {
                    "type": "enumitem",
                    "value": ""
                  }
                },
                "enumitems": "DEPOSIT,MODIFIER,SUGGESTION,SUBSTITUTION,CUSTOM"
              },
              "description": {
                "type": "object",
                "properties": {
                  "values": {
                    "type": "array",
                    "description": "Values containing entries per language (one entry per language is expected).",
                    "items": {
                      "type": "object",
                      "required": [
                        "locale",
                        "value"
                      ],
                      "properties": {
                        "locale": {
                          "type": "string",
                          "description": "Locale specifies local language."
                        },
                        "value": {
                          "type": "string",
                          "description": "Value has range of the name."
                        }
                      },
                      "description": "Contains locale and value properties.",
                      "_model": "LocalizedTextData"
                    }
                  }
                },
                "description": "Generic data type that is capable of holding text data in multiple languages.",
                "_model": "MultiLanguageTextData"
              },
              "tag": {
                "type": "string",
                "description": "Tag to mark the group. This tag is expected to be understood by the client. Tag defines the type of the link group: suggestion, substitutes, kit, deposit, etc.",
                "minLength": 1,
                "maxLength": 50
              },
              "status": {
                "type": "string",
                "description": "Link group status. If set to inactive, indicates that the link group is 'deleted' and should not be assigned to the catalog items attributes.<br/>Supported types:<br/><ul><li>ACTIVE: Indicates that object is not active.</li><li>INACTIVE: Indicates that object is active.</li></ul>",
                "enum": [
                  "INACTIVE",
                  "ACTIVE"
                ],
                "properties": {
                  "INACTIVE": {
                    "type": "enumitem",
                    "value": ""
                  },
                  "ACTIVE": {
                    "type": "enumitem",
                    "value": ""
                  }
                },
                "enumitems": "INACTIVE,ACTIVE"
              },
              "linkGroupId": {
                "type": "object",
                "required": [
                  "linkGroupCode"
                ],
                "properties": {
                  "linkGroupCode": {
                    "type": "string",
                    "description": "A unique (per tenant) link group code that identifies the link group.",
                    "minLength": 1,
                    "maxLength": 100,
                    "pattern": "\\p{Alnum}[\\w-]*"
                  }
                },
                "description": "Represents minimum set of fields that uniquely identify a link group.",
                "_model": "LinkGroupIdData"
              },
              "enterpriseUnitId": {
                "type": "string",
                "description": "Enterprise unit identifier that may be used for filtering of the link groups that are relevant for the caller. It is assumed that if a request to get link groups is provided with the enterprise unit specified, then all link groups that match the enterprise unit exactly, or groups with the enterprise units that are parents of the provided enterprise unit or all groups that don't have enterprise unit specified (global groups) are applicable."
              }
            },
            "description": "Data object contains basic view properties for link group.",
            "_model": "LinkGroupBasicViewData"
          }
        }
      },
      "description": "Response object for finder methods that returns Link group objects matching the given search criteria."
    },
    "LinkGroupBasicViewData": {
      "type": "object",
      "required": [
        "linkGroupId",
        "linkGroupType",
        "status",
        "version"
      ],
      "properties": {
        "version": {
          "type": "integer",
          "format": "int64",
          "description": "Version (normally epoch time in millis) representing the version of the object. This field is used to avoid object overrides in environments that allow concurrent modification of data.",
          "minimum": 0
        },
        "linkGroupType": {
          "type": "string",
          "description": "Type of the link group. May drive behavior of the POS / Client when an item associated with the link group is selected for ordering.<br/>Supported types:<br/><ul><li>DEPOSIT: Identifies a linked deposit, such as bottle deposit, CRV</li><li>MODIFIER: Identifies items that maybe used to modify the order (ingredients, warranty, activation cards, etc.)</li><li>SUGGESTION: Identifies suggestions that may be presented to the user. These suggestions are 'statically' defined in the catalog, as opposed to the suggestions that are dynamic in nature and depend on the transaction context (consumer information, targeted advertisement, etc.).</li><li>SUBSTITUTION: Identifies items that may be used as substitutions for a given item.</li><li>CUSTOM: Custom group type. The API client is expected to understand how handle this type of link groups.</li></ul>",
          "enum": [
            "DEPOSIT",
            "MODIFIER",
            "SUGGESTION",
            "SUBSTITUTION",
            "CUSTOM"
          ],
          "properties": {
            "DEPOSIT": {
              "type": "enumitem",
              "value": ""
            },
            "MODIFIER": {
              "type": "enumitem",
              "value": ""
            },
            "SUGGESTION": {
              "type": "enumitem",
              "value": ""
            },
            "SUBSTITUTION": {
              "type": "enumitem",
              "value": ""
            },
            "CUSTOM": {
              "type": "enumitem",
              "value": ""
            }
          },
          "enumitems": "DEPOSIT,MODIFIER,SUGGESTION,SUBSTITUTION,CUSTOM"
        },
        "description": {
          "type": "object",
          "properties": {
            "values": {
              "type": "array",
              "description": "Values containing entries per language (one entry per language is expected).",
              "items": {
                "type": "object",
                "required": [
                  "locale",
                  "value"
                ],
                "properties": {
                  "locale": {
                    "type": "string",
                    "description": "Locale specifies local language."
                  },
                  "value": {
                    "type": "string",
                    "description": "Value has range of the name."
                  }
                },
                "description": "Contains locale and value properties.",
                "_model": "LocalizedTextData"
              }
            }
          },
          "description": "Generic data type that is capable of holding text data in multiple languages.",
          "_model": "MultiLanguageTextData"
        },
        "tag": {
          "type": "string",
          "description": "Tag to mark the group. This tag is expected to be understood by the client. Tag defines the type of the link group: suggestion, substitutes, kit, deposit, etc.",
          "minLength": 1,
          "maxLength": 50
        },
        "status": {
          "type": "string",
          "description": "Link group status. If set to inactive, indicates that the link group is 'deleted' and should not be assigned to the catalog items attributes.<br/>Supported types:<br/><ul><li>ACTIVE: Indicates that object is not active.</li><li>INACTIVE: Indicates that object is active.</li></ul>",
          "enum": [
            "INACTIVE",
            "ACTIVE"
          ],
          "properties": {
            "INACTIVE": {
              "type": "enumitem",
              "value": ""
            },
            "ACTIVE": {
              "type": "enumitem",
              "value": ""
            }
          },
          "enumitems": "INACTIVE,ACTIVE"
        },
        "linkGroupId": {
          "type": "object",
          "required": [
            "linkGroupCode"
          ],
          "properties": {
            "linkGroupCode": {
              "type": "string",
              "description": "A unique (per tenant) link group code that identifies the link group.",
              "minLength": 1,
              "maxLength": 100,
              "pattern": "\\p{Alnum}[\\w-]*"
            }
          },
          "description": "Represents minimum set of fields that uniquely identify a link group.",
          "_model": "LinkGroupIdData"
        },
        "enterpriseUnitId": {
          "type": "string",
          "description": "Enterprise unit identifier that may be used for filtering of the link groups that are relevant for the caller. It is assumed that if a request to get link groups is provided with the enterprise unit specified, then all link groups that match the enterprise unit exactly, or groups with the enterprise units that are parents of the provided enterprise unit or all groups that don't have enterprise unit specified (global groups) are applicable."
        }
      },
      "description": "Data object contains basic view properties for link group.",
      "_model": "LinkGroupBasicViewData"
    },
    "ItemPriceIdData": {
      "type": "object",
      "required": [
        "enterpriseUnitId",
        "itemCode",
        "priceCode"
      ],
      "properties": {
        "itemCode": {
          "type": "string",
          "description": "A unique item (unique per Tenant) code which is used to identify the item.",
          "minLength": 1,
          "maxLength": 40,
          "pattern": "\\p{Alnum}[\\w-]*"
        },
        "enterpriseUnitId": {
          "type": "string",
          "description": "Enterprise unit identifier for which the item prices are defined."
        },
        "priceCode": {
          "type": "string",
          "description": "Identifier of the price provided by the external system. It is expected to be unique in the context of the item and enterprise unit, since each combination of item code, enterprise unit and price identifier are part of the composite id. This identifier is mandatory to facilitate price updates. For example a price scheduled in the future may be cancelled and this is expected to be communicated to the clients that replicate the catalog item price document.",
          "minLength": 1,
          "maxLength": 100
        }
      },
      "description": "Id of item price document that defines prices associated with a catalog item at the enterprise unit level. Each item can have more thana single price associated with it at the enterprise unit level.",
      "_model": "ItemPriceIdData"
    },
    "ItemPriceViewData": {
      "type": "object",
      "required": [
        "currency",
        "effectiveDate",
        "price",
        "priceId",
        "status",
        "version"
      ],
      "properties": {
        "version": {
          "type": "integer",
          "format": "int64",
          "description": "Version (normally epoch time in millis) representing the version of the object. This field is used to avoid object overrides in environments that allow concurrent modification of data.",
          "minimum": 0
        },
        "price": {
          "type": "number",
          "description": "Price value.",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "currency": {
          "type": "string",
          "description": "Currency of the price value.",
          "minLength": 1,
          "maxLength": 10
        },
        "effectiveDate": {
          "type": "string",
          "format": "date-time",
          "description": "Effective date for the price."
        },
        "endDate": {
          "type": "string",
          "format": "date-time",
          "description": "End date for the price. The price may be considered expired after the specified date."
        },
        "status": {
          "type": "string",
          "description": "Status of the price object. More than one price can be active at a time.<br/>Supported types:<br/><ul><li>ACTIVE: Indicates that object is not active.</li><li>INACTIVE: Indicates that object is active.</li></ul>",
          "enum": [
            "INACTIVE",
            "ACTIVE"
          ],
          "properties": {
            "INACTIVE": {
              "type": "enumitem",
              "value": ""
            },
            "ACTIVE": {
              "type": "enumitem",
              "value": ""
            }
          },
          "enumitems": "INACTIVE,ACTIVE"
        },
        "basePrice": {
          "type": "boolean",
          "description": "To determine the price is base price or not."
        },
        "linkGroupId": {
          "type": "object",
          "required": [
            "linkGroupCode"
          ],
          "properties": {
            "linkGroupCode": {
              "type": "string",
              "description": "A unique (per tenant) link group code that identifies the link group.",
              "minLength": 1,
              "maxLength": 100,
              "pattern": "\\p{Alnum}[\\w-]*"
            }
          },
          "description": "Represents minimum set of fields that uniquely identify a link group.",
          "_model": "LinkGroupIdData"
        },
        "dynamicAttributes": {
          "type": "array",
          "description": "Customer or product specific dynamic attributes. These can contain any number of attributes that may drive client application behavior (such as POS logic).",
          "items": {
            "type": "object",
            "required": [
              "attributes",
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "minLength": 1,
                "maxLength": 64,
                "pattern": "\\p{Alnum}[\\w-]*"
              },
              "attributes": {
                "type": "array",
                "description": "Collection of key value data.",
                "items": {
                  "type": "object",
                  "required": [
                    "key"
                  ],
                  "properties": {
                    "key": {
                      "type": "string",
                      "description": "Key that identifies this key value pair."
                    },
                    "value": {
                      "type": "string",
                      "description": "Value associated with the key.",
                      "minLength": 1,
                      "maxLength": 512
                    },
                    "localizedValue": {
                      "type": "object",
                      "properties": {
                        "values": {
                          "type": "array",
                          "description": "Values containing entries per language (one entry per language is expected).",
                          "items": {
                            "type": "object",
                            "required": [
                              "locale",
                              "value"
                            ],
                            "properties": {
                              "locale": {
                                "type": "string",
                                "description": "Locale specifies local language."
                              },
                              "value": {
                                "type": "string",
                                "description": "Value has range of the name."
                              }
                            },
                            "description": "Contains locale and value properties.",
                            "_model": "LocalizedTextData"
                          }
                        }
                      },
                      "description": "Generic data type that is capable of holding text data in multiple languages.",
                      "_model": "MultiLanguageTextData"
                    }
                  },
                  "description": "Contains locale, key and value properties.",
                  "_model": "LocalizedKeyValueData"
                }
              }
            },
            "description": "Contains basic fields describing the dynamic attributes.",
            "_model": "DynamicAttributesData"
          }
        },
        "priceId": {
          "type": "object",
          "required": [
            "enterpriseUnitId",
            "itemCode",
            "priceCode"
          ],
          "properties": {
            "itemCode": {
              "type": "string",
              "description": "A unique item (unique per Tenant) code which is used to identify the item.",
              "minLength": 1,
              "maxLength": 40,
              "pattern": "\\p{Alnum}[\\w-]*"
            },
            "enterpriseUnitId": {
              "type": "string",
              "description": "Enterprise unit identifier for which the item prices are defined."
            },
            "priceCode": {
              "type": "string",
              "description": "Identifier of the price provided by the external system. It is expected to be unique in the context of the item and enterprise unit, since each combination of item code, enterprise unit and price identifier are part of the composite id. This identifier is mandatory to facilitate price updates. For example a price scheduled in the future may be cancelled and this is expected to be communicated to the clients that replicate the catalog item price document.",
              "minLength": 1,
              "maxLength": 100
            }
          },
          "description": "Id of item price document that defines prices associated with a catalog item at the enterprise unit level. Each item can have more thana single price associated with it at the enterprise unit level.",
          "_model": "ItemPriceIdData"
        },
        "auditTrail": {
          "type": "object",
          "required": [
            "lastUpdated",
            "lastUpdatedByUser"
          ],
          "properties": {
            "lastUpdated": {
              "type": "string",
              "format": "date-time",
              "description": "Date when the object was last updated."
            },
            "lastUpdatedByUser": {
              "type": "string",
              "description": "User name of the user that updated the object."
            }
          },
          "description": "Audit related information that can be associated with objects.",
          "_model": "AuditTrailData"
        }
      },
      "description": "Contains all of the fields of a catalog item price, including read-only system generated/assigned fields.",
      "_model": "ItemPriceViewData"
    },
    "GetItemPricesResponse": {
      "type": "object",
      "properties": {
        "itemPrices": {
          "type": "array",
          "description": "Objects in the page of search results.",
          "items": {
            "type": "object",
            "required": [
              "currency",
              "effectiveDate",
              "price",
              "priceId",
              "status",
              "version"
            ],
            "properties": {
              "version": {
                "type": "integer",
                "format": "int64",
                "description": "Version (normally epoch time in millis) representing the version of the object. This field is used to avoid object overrides in environments that allow concurrent modification of data.",
                "minimum": 0
              },
              "price": {
                "type": "number",
                "description": "Price value.",
                "minimum": 0,
                "exclusiveMinimum": false
              },
              "currency": {
                "type": "string",
                "description": "Currency of the price value.",
                "minLength": 1,
                "maxLength": 10
              },
              "effectiveDate": {
                "type": "string",
                "format": "date-time",
                "description": "Effective date for the price."
              },
              "endDate": {
                "type": "string",
                "format": "date-time",
                "description": "End date for the price. The price may be considered expired after the specified date."
              },
              "status": {
                "type": "string",
                "description": "Status of the price object. More than one price can be active at a time.<br/>Supported types:<br/><ul><li>ACTIVE: Indicates that object is not active.</li><li>INACTIVE: Indicates that object is active.</li></ul>",
                "enum": [
                  "INACTIVE",
                  "ACTIVE"
                ],
                "properties": {
                  "INACTIVE": {
                    "type": "enumitem",
                    "value": ""
                  },
                  "ACTIVE": {
                    "type": "enumitem",
                    "value": ""
                  }
                },
                "enumitems": "INACTIVE,ACTIVE"
              },
              "basePrice": {
                "type": "boolean",
                "description": "To determine the price is base price or not."
              },
              "linkGroupId": {
                "type": "object",
                "required": [
                  "linkGroupCode"
                ],
                "properties": {
                  "linkGroupCode": {
                    "type": "string",
                    "description": "A unique (per tenant) link group code that identifies the link group.",
                    "minLength": 1,
                    "maxLength": 100,
                    "pattern": "\\p{Alnum}[\\w-]*"
                  }
                },
                "description": "Represents minimum set of fields that uniquely identify a link group.",
                "_model": "LinkGroupIdData"
              },
              "dynamicAttributes": {
                "type": "array",
                "description": "Customer or product specific dynamic attributes. These can contain any number of attributes that may drive client application behavior (such as POS logic).",
                "items": {
                  "type": "object",
                  "required": [
                    "attributes",
                    "type"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 64,
                      "pattern": "\\p{Alnum}[\\w-]*"
                    },
                    "attributes": {
                      "type": "array",
                      "description": "Collection of key value data.",
                      "items": {
                        "type": "object",
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "type": "string",
                            "description": "Key that identifies this key value pair."
                          },
                          "value": {
                            "type": "string",
                            "description": "Value associated with the key.",
                            "minLength": 1,
                            "maxLength": 512
                          },
                          "localizedValue": {
                            "type": "object",
                            "properties": {
                              "values": {
                                "type": "array",
                                "description": "Values containing entries per language (one entry per language is expected).",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "locale",
                                    "value"
                                  ],
                                  "properties": {
                                    "locale": {
                                      "type": "string",
                                      "description": "Locale specifies local language."
                                    },
                                    "value": {
                                      "type": "string",
                                      "description": "Value has range of the name."
                                    }
                                  },
                                  "description": "Contains locale and value properties.",
                                  "_model": "LocalizedTextData"
                                }
                              }
                            },
                            "description": "Generic data type that is capable of holding text data in multiple languages.",
                            "_model": "MultiLanguageTextData"
                          }
                        },
                        "description": "Contains locale, key and value properties.",
                        "_model": "LocalizedKeyValueData"
                      }
                    }
                  },
                  "description": "Contains basic fields describing the dynamic attributes.",
                  "_model": "DynamicAttributesData"
                }
              },
              "priceId": {
                "type": "object",
                "required": [
                  "enterpriseUnitId",
                  "itemCode",
                  "priceCode"
                ],
                "properties": {
                  "itemCode": {
                    "type": "string",
                    "description": "A unique item (unique per Tenant) code which is used to identify the item.",
                    "minLength": 1,
                    "maxLength": 40,
                    "pattern": "\\p{Alnum}[\\w-]*"
                  },
                  "enterpriseUnitId": {
                    "type": "string",
                    "description": "Enterprise unit identifier for which the item prices are defined."
                  },
                  "priceCode": {
                    "type": "string",
                    "description": "Identifier of the price provided by the external system. It is expected to be unique in the context of the item and enterprise unit, since each combination of item code, enterprise unit and price identifier are part of the composite id. This identifier is mandatory to facilitate price updates. For example a price scheduled in the future may be cancelled and this is expected to be communicated to the clients that replicate the catalog item price document.",
                    "minLength": 1,
                    "maxLength": 100
                  }
                },
                "description": "Id of item price document that defines prices associated with a catalog item at the enterprise unit level. Each item can have more thana single price associated with it at the enterprise unit level.",
                "_model": "ItemPriceIdData"
              },
              "auditTrail": {
                "type": "object",
                "required": [
                  "lastUpdated",
                  "lastUpdatedByUser"
                ],
                "properties": {
                  "lastUpdated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date when the object was last updated."
                  },
                  "lastUpdatedByUser": {
                    "type": "string",
                    "description": "User name of the user that updated the object."
                  }
                },
                "description": "Audit related information that can be associated with objects.",
                "_model": "AuditTrailData"
              }
            },
            "description": "Contains all of the fields of a catalog item price, including read-only system generated/assigned fields.",
            "_model": "ItemPriceViewData"
          }
        }
      },
      "description": "A collection of item prices."
    },
    "GetItemPricesSnapshotResponse": {
      "type": "object",
      "properties": {
        "snapshotVersion": {
          "type": "integer",
          "format": "int64"
        },
        "snapshot": {
          "type": "array",
          "description": "The actual content of the snapshot.",
          "items": {
            "type": "object",
            "required": [
              "currency",
              "effectiveDate",
              "price",
              "priceId",
              "status",
              "version"
            ],
            "properties": {
              "version": {
                "type": "integer",
                "format": "int64",
                "description": "Version (normally epoch time in millis) representing the version of the object. This field is used to avoid object overrides in environments that allow concurrent modification of data.",
                "minimum": 0
              },
              "price": {
                "type": "number",
                "description": "Price value.",
                "minimum": 0,
                "exclusiveMinimum": false
              },
              "currency": {
                "type": "string",
                "description": "Currency of the price value.",
                "minLength": 1,
                "maxLength": 10
              },
              "effectiveDate": {
                "type": "string",
                "format": "date-time",
                "description": "Effective date for the price."
              },
              "endDate": {
                "type": "string",
                "format": "date-time",
                "description": "End date for the price. The price may be considered expired after the specified date."
              },
              "status": {
                "type": "string",
                "description": "Status of the price object. More than one price can be active at a time.<br/>Supported types:<br/><ul><li>ACTIVE: Indicates that object is not active.</li><li>INACTIVE: Indicates that object is active.</li></ul>",
                "enum": [
                  "INACTIVE",
                  "ACTIVE"
                ],
                "properties": {
                  "INACTIVE": {
                    "type": "enumitem",
                    "value": ""
                  },
                  "ACTIVE": {
                    "type": "enumitem",
                    "value": ""
                  }
                },
                "enumitems": "INACTIVE,ACTIVE"
              },
              "basePrice": {
                "type": "boolean",
                "description": "To determine the price is base price or not."
              },
              "linkGroupId": {
                "type": "object",
                "required": [
                  "linkGroupCode"
                ],
                "properties": {
                  "linkGroupCode": {
                    "type": "string",
                    "description": "A unique (per tenant) link group code that identifies the link group.",
                    "minLength": 1,
                    "maxLength": 100,
                    "pattern": "\\p{Alnum}[\\w-]*"
                  }
                },
                "description": "Represents minimum set of fields that uniquely identify a link group.",
                "_model": "LinkGroupIdData"
              },
              "dynamicAttributes": {
                "type": "array",
                "description": "Customer or product specific dynamic attributes. These can contain any number of attributes that may drive client application behavior (such as POS logic).",
                "items": {
                  "type": "object",
                  "required": [
                    "attributes",
                    "type"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 64,
                      "pattern": "\\p{Alnum}[\\w-]*"
                    },
                    "attributes": {
                      "type": "array",
                      "description": "Collection of key value data.",
                      "items": {
                        "type": "object",
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "type": "string",
                            "description": "Key that identifies this key value pair."
                          },
                          "value": {
                            "type": "string",
                            "description": "Value associated with the key.",
                            "minLength": 1,
                            "maxLength": 512
                          },
                          "localizedValue": {
                            "type": "object",
                            "properties": {
                              "values": {
                                "type": "array",
                                "description": "Values containing entries per language (one entry per language is expected).",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "locale",
                                    "value"
                                  ],
                                  "properties": {
                                    "locale": {
                                      "type": "string",
                                      "description": "Locale specifies local language."
                                    },
                                    "value": {
                                      "type": "string",
                                      "description": "Value has range of the name."
                                    }
                                  },
                                  "description": "Contains locale and value properties.",
                                  "_model": "LocalizedTextData"
                                }
                              }
                            },
                            "description": "Generic data type that is capable of holding text data in multiple languages.",
                            "_model": "MultiLanguageTextData"
                          }
                        },
                        "description": "Contains locale, key and value properties.",
                        "_model": "LocalizedKeyValueData"
                      }
                    }
                  },
                  "description": "Contains basic fields describing the dynamic attributes.",
                  "_model": "DynamicAttributesData"
                }
              },
              "priceId": {
                "type": "object",
                "required": [
                  "enterpriseUnitId",
                  "itemCode",
                  "priceCode"
                ],
                "properties": {
                  "itemCode": {
                    "type": "string",
                    "description": "A unique item (unique per Tenant) code which is used to identify the item.",
                    "minLength": 1,
                    "maxLength": 40,
                    "pattern": "\\p{Alnum}[\\w-]*"
                  },
                  "enterpriseUnitId": {
                    "type": "string",
                    "description": "Enterprise unit identifier for which the item prices are defined."
                  },
                  "priceCode": {
                    "type": "string",
                    "description": "Identifier of the price provided by the external system. It is expected to be unique in the context of the item and enterprise unit, since each combination of item code, enterprise unit and price identifier are part of the composite id. This identifier is mandatory to facilitate price updates. For example a price scheduled in the future may be cancelled and this is expected to be communicated to the clients that replicate the catalog item price document.",
                    "minLength": 1,
                    "maxLength": 100
                  }
                },
                "description": "Id of item price document that defines prices associated with a catalog item at the enterprise unit level. Each item can have more thana single price associated with it at the enterprise unit level.",
                "_model": "ItemPriceIdData"
              },
              "auditTrail": {
                "type": "object",
                "required": [
                  "lastUpdated",
                  "lastUpdatedByUser"
                ],
                "properties": {
                  "lastUpdated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date when the object was last updated."
                  },
                  "lastUpdatedByUser": {
                    "type": "string",
                    "description": "User name of the user that updated the object."
                  }
                },
                "description": "Audit related information that can be associated with objects.",
                "_model": "AuditTrailData"
              }
            },
            "description": "Contains all of the fields of a catalog item price, including read-only system generated/assigned fields.",
            "_model": "ItemPriceViewData"
          }
        }
      },
      "description": "Response object containing snapshot data with catalog item prices."
    },
    "PayloadConstraintViolationException": {
      "type": "object",
      "required": [
        "errorType",
        "message"
      ],
      "properties": {
        "message": {
          "type": "string",
          "description": "The error message"
        },
        "errorType": {
          "type": "string",
          "description": "Unique ID identifying the type of error",
          "default": "com.ncr.nep.common.exception.PayloadConstraintViolationException"
        },
        "details": {
          "type": "array",
          "description": "Error-specific values that provide more information on the error, such as the reason for failure or error code",
          "items": {
            "type": "string",
            "_model": "string",
            "sample": "\"Scrumptious\""
          }
        },
        "constraintViolations": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "invalidValue": {
                "type": "string",
                "description": "The value that failed validation"
              },
              "message": {
                "type": "string",
                "description": "Message describing the violation error"
              },
              "propertyPath": {
                "type": "string",
                "description": "The path of the property that failed validation"
              }
            },
            "description": "Captures constraint violation information for an API request",
            "_model": "ConstraintViolationData"
          }
        }
      },
      "description": "The request failed validation"
    },
    "ResourceDoesNotExistException": {
      "type": "object",
      "required": [
        "errorType",
        "message"
      ],
      "properties": {
        "message": {
          "type": "string",
          "description": "The error message"
        },
        "errorType": {
          "type": "string",
          "description": "Unique ID identifying the type of error",
          "default": "com.ncr.nep.common.exception.ResourceDoesNotExistException"
        },
        "details": {
          "type": "array",
          "description": "Error-specific values that provide more information on the error, such as the reason for failure or error code",
          "items": {
            "type": "string",
            "_model": "string",
            "sample": "\"Sponge\""
          }
        }
      },
      "description": "The resource does not exist"
    },
    "MaxPayloadSizeExceededException": {
      "type": "object",
      "required": [
        "errorType",
        "message"
      ],
      "properties": {
        "message": {
          "type": "string",
          "description": "The error message"
        },
        "errorType": {
          "type": "string",
          "description": "Unique ID identifying the type of error",
          "default": "com.ncr.ocp.catalog.common.MaxPayloadSizeExceededException"
        },
        "details": {
          "type": "array",
          "description": "Error-specific values that provide more information on the error, such as the reason for failure or error code",
          "items": {
            "type": "string",
            "_model": "string",
            "sample": "\"Sponge\""
          }
        }
      },
      "description": "An error occurred while processing a request"
    },
    "InvalidResourceStateException": {
      "type": "object",
      "required": [
        "errorType",
        "message"
      ],
      "properties": {
        "message": {
          "type": "string",
          "description": "The error message"
        },
        "errorType": {
          "type": "string",
          "description": "Unique ID identifying the type of error",
          "default": "com.ncr.nep.common.exception.InvalidResourceStateException"
        },
        "details": {
          "type": "array",
          "description": "Error-specific values that provide more information on the error, such as the reason for failure or error code",
          "items": {
            "type": "string",
            "_model": "string",
            "sample": "\"Britches\""
          }
        }
      },
      "description": "The state of the resource is invalid for the requested operation"
    },
    "BusinessException": {
      "type": "object",
      "required": [
        "errorType",
        "message"
      ],
      "properties": {
        "message": {
          "type": "string",
          "description": "The error message"
        },
        "errorType": {
          "type": "string",
          "description": "Unique ID identifying the type of error",
          "default": "com.ncr.nep.common.exception.BusinessException"
        },
        "details": {
          "type": "array",
          "description": "Error-specific values that provide more information on the error, such as the reason for failure or error code",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "An error occurred while processing a request"
    },
    "ConstraintViolationData": {
      "type": "object",
      "properties": {
        "invalidValue": {
          "type": "string",
          "description": "The value that failed validation"
        },
        "message": {
          "type": "string",
          "description": "Message describing the violation error"
        },
        "propertyPath": {
          "type": "string",
          "description": "The path of the property that failed validation"
        }
      },
      "description": "Captures constraint violation information for an API request",
      "_model": "ConstraintViolationData"
    },
    "AccessDeniedException": {
      "type": "object",
      "required": [
        "errorType",
        "message"
      ],
      "properties": {
        "message": {
          "type": "string",
          "description": "The error message"
        },
        "errorType": {
          "type": "string",
          "description": "Unique ID identifying the type of error",
          "default": "com.ncr.nep.common.exception.AccessDeniedException"
        },
        "details": {
          "type": "array",
          "description": "Error-specific values that provide more information on the error, such as the reason for failure or error code",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Access denied due to insufficient privileges."
    },
    "InvalidCredentialsException": {
      "type": "object",
      "required": [
        "errorType",
        "message"
      ],
      "properties": {
        "message": {
          "type": "string",
          "description": "The error message"
        },
        "errorType": {
          "type": "string",
          "description": "Unique ID identifying the type of error",
          "default": "com.ncr.nep.common.exception.InvalidCredentialsException"
        },
        "details": {
          "type": "array",
          "description": "Error-specific values that provide more information on the error, such as the reason for failure or error code",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "The user credentials are invalid"
    },
    "TenantAccessDeniedException": {
      "type": "object",
      "required": [
        "errorType",
        "message"
      ],
      "properties": {
        "message": {
          "type": "string",
          "description": "The error message"
        },
        "errorType": {
          "type": "string",
          "description": "Unique ID identifying the type of error",
          "default": "com.ncr.nep.common.exception.TenantAccessDeniedException"
        },
        "details": {
          "type": "array",
          "description": "Error-specific values that provide more information on the error, such as the reason for failure or error code",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "The user does not have access to the organization specified in the request"
    }
  },
  "host": "hackgt-api.ncrcloud.com",
  "schemes": [
    "https"
  ]
}